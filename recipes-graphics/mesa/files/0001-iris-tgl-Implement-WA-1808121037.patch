From 873bd0aeb57acf00b05bfea8b33d6977cd05db97 Mon Sep 17 00:00:00 2001
From: Rafael Antognolli <rafael.antognolli@intel.com>
Date: Wed, 12 Feb 2020 14:07:50 -0800
Subject: [PATCH] iris/tgl: Implement WA #1808121037.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

GEN:BUG:14010455700

   "To avoid sporadic corruptions “Set 0x7010[9] when Depth Buffer
   Surface Format is D16_UNORM , surface type is not NULL & 1X_MSAA"

Required for fixing https://gitlab.freedesktop.org/mesa/mesa/issues/2501
---
 src/gallium/drivers/iris/iris_state.c | 33 +++++++++++++++++++++++++++
 src/intel/genxml/gen12.xml            |  5 ++++
 2 files changed, 38 insertions(+)

diff --git a/src/gallium/drivers/iris/iris_state.c b/src/gallium/drivers/iris/iris_state.c
index db4568c7777..230b3e13b68 100644
--- a/src/gallium/drivers/iris/iris_state.c
+++ b/src/gallium/drivers/iris/iris_state.c
@@ -1079,6 +1079,12 @@ struct iris_genx_state {
       struct brw_image_param image_param[PIPE_MAX_SHADER_IMAGES];
 #endif
    } shaders[MESA_SHADER_STAGES];
+
+#if GEN_GEN == 12
+   /* GEN:BUG:14010455700 */
+   bool wa_hiz_enabled;
+   bool wa_hiz_needed;
+#endif
 };
 
 /**
@@ -3072,6 +3078,17 @@ iris_set_framebuffer_state(struct pipe_context *ctx,
             info.mocs = mocs(stencil_res->bo, isl_dev);
          }
       }
+
+#if GEN_GEN == 12
+      /* GEN:BUG:14010455700
+       *
+       *    "To avoid sporadic corruptions “Set 0x7010[9] when Depth Buffer
+       *    Surface Format is D16_UNORM , surface type is not NULL & 1X_MSAA"
+       */
+      ice->state.genx->wa_hiz_needed = zres && samples == 1 &&
+         isl_surf_get_depth_format(isl_dev, info.depth_surf) == D16_UNORM;
+#endif
+
    }
 
    isl_emit_depth_stencil_hiz_s(isl_dev, cso_z->packets, &info);
@@ -5547,6 +5564,22 @@ iris_upload_dirty_render_state(struct iris_context *ice,
                                    PIPE_CONTROL_STALL_AT_SCOREBOARD);
    }
 
+#if GEN_GEN == 12
+   /* GEN:BUG:14010455700 */
+   if (dirty & IRIS_DIRTY_RENDER_BUFFER &&
+       genx->wa_hiz_needed != genx->wa_hiz_enabled) {
+      uint32_t reg_val;
+
+      iris_pack_state(GENX(COMMON_SLICE_CHICKEN1), &reg_val, reg) {
+         reg.HIZPlaneOptimizationdisablebit = genx->wa_hiz_needed;;
+         reg.HIZPlaneOptimizationdisablebitMask = true;
+      }
+      iris_emit_lri(batch, COMMON_SLICE_CHICKEN1, reg_val);
+
+      genx->wa_hiz_enabled = genx->wa_hiz_needed;
+   }
+#endif
+
    for (int stage = 0; stage <= MESA_SHADER_FRAGMENT; stage++) {
       if (dirty & (IRIS_DIRTY_BINDINGS_VS << stage)) {
          iris_populate_binding_table(ice, batch, stage, false);
diff --git a/src/intel/genxml/gen12.xml b/src/intel/genxml/gen12.xml
index 6ed9ccc369e..1ff1b32e475 100644
--- a/src/intel/genxml/gen12.xml
+++ b/src/intel/genxml/gen12.xml
@@ -7032,6 +7032,11 @@
     <field name="CL Primitives Count Report" start="0" end="63" type="uint"/>
   </register>
 
+  <register name="COMMON_SLICE_CHICKEN1" length="1" num="0x7010">
+    <field name="HIZ Plane Optimization disable bit" start="9" end="9" type="bool"/>
+    <field name="HIZ Plane Optimization disable bit Mask" start="25" end="25" type="bool"/>
+  </register>
+
   <register name="COMMON_SLICE_CHICKEN3" length="1" num="0x7304">
     <field name="PS Thread Panic Dispatch" start="6" end="7" type="uint"/>
     <field name="PS Thread Panic Dispatch Mask" start="22" end="23" type="uint"/>
-- 
2.17.1

