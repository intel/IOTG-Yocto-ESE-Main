From e1fc76d2ae016ac4895181c349f1b2365fd61918 Mon Sep 17 00:00:00 2001
From: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date: Thu, 28 Jul 2022 15:01:09 +0800
Subject: [PATCH] taprio: Add support for setting Frame Preemption Queue Mask

This adds a new parameter, fpe-qmask, to used by user to specify which
Tx Queue is mapped to preemptible MAC as described by IEEE 802.1Qbu/
IEEE 802.3br Frame Preemption.

For example, fpe-qmask 0x13 (0001 0011) means TxQ4, TxQ1 & TxQ0 are
mapped to preemptible MAC.

Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
---
 include/uapi/linux/pkt_sched.h |  1 +
 tc/q_taprio.c                  | 23 ++++++++++++++++++++++-
 2 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/include/uapi/linux/pkt_sched.h b/include/uapi/linux/pkt_sched.h
index 98d3c93..162b85d 100644
--- a/include/uapi/linux/pkt_sched.h
+++ b/include/uapi/linux/pkt_sched.h
@@ -1245,6 +1245,7 @@ enum {
 	TCA_TAPRIO_ATTR_SCHED_CYCLE_TIME_EXTENSION, /* s64 */
 	TCA_TAPRIO_ATTR_FLAGS, /* u32 */
 	TCA_TAPRIO_ATTR_TXTIME_DELAY, /* u32 */
+	TCA_TAPRIO_ATTR_FPE_QMASK, /* u32 */
 	TCA_TAPRIO_ATTR_PREEMPT_TCS, /* u32 */
 	__TCA_TAPRIO_ATTR_MAX,
 };
diff --git a/tc/q_taprio.c b/tc/q_taprio.c
index 0756727..9dd04e4 100644
--- a/tc/q_taprio.c
+++ b/tc/q_taprio.c
@@ -52,7 +52,7 @@ static void explain(void)
 		"		[num_tc NUMBER] [map P0 P1 ...] "
 		"		[queues COUNT@OFFSET COUNT@OFFSET COUNT@OFFSET ...] "
 		"		[ [sched-entry index cmd gate-mask interval] ... ] "
-		"		[base-time time] [txtime-delay delay]"
+		"		[base-time time] [txtime-delay delay] [fpe-qmask mask]"
 		"\n"
 		"CLOCKID must be a valid SYS-V id (i.e. CLOCK_TAI)\n");
 }
@@ -170,6 +170,7 @@ static int taprio_parse_opt(struct qdisc_util *qu, int argc,
 	struct rtattr *tail, *l;
 	__u32 taprio_flags = 0;
 	__u32 txtime_delay = 0;
+	__u32 fpe_qmask = 0;
 	__s64 cycle_time = 0;
 	__s64 base_time = 0;
 	int err, idx;
@@ -314,6 +315,16 @@ static int taprio_parse_opt(struct qdisc_util *qu, int argc,
 				return -1;
 			}
 
+		} else if (strcmp(*argv, "fpe-qmask") == 0) {
+			NEXT_ARG();
+			if (fpe_qmask != 0) {
+				fprintf(stderr, "taprio: duplicate \"fpe-qmask\" specification\n");
+				return -1;
+			}
+			if (get_u32(&fpe_qmask, *argv, 0)) {
+				PREV_ARG();
+				return -1;
+			}
 		} else if (strcmp(*argv, "preempt") == 0) {
 			NEXT_ARG();
 			if (preempt != UINT32_MAX) {
@@ -360,6 +371,9 @@ static int taprio_parse_opt(struct qdisc_util *qu, int argc,
 		addattr_l(n, 1024, TCA_TAPRIO_ATTR_SCHED_CYCLE_TIME_EXTENSION,
 			  &cycle_time_extension, sizeof(cycle_time_extension));
 
+	if (fpe_qmask)
+		addattr_l(n, 1024, TCA_TAPRIO_ATTR_FPE_QMASK, &fpe_qmask, sizeof(fpe_qmask));
+
 	if (preempt != UINT32_MAX)
 		addattr_l(n, 1024, TCA_TAPRIO_ATTR_PREEMPT_TCS,
 			  &preempt, sizeof(preempt));
@@ -526,6 +540,13 @@ static int taprio_print_opt(struct qdisc_util *qu, FILE *f, struct rtattr *opt)
 		print_uint(PRINT_ANY, "txtime_delay", " txtime delay %d", txtime_delay);
 	}
 
+	if (tb[TCA_TAPRIO_ATTR_FPE_QMASK]) {
+		__u32 fpe_qmask;
+
+		fpe_qmask = rta_getattr_s32(tb[TCA_TAPRIO_ATTR_FPE_QMASK]);
+		print_0xhex(PRINT_ANY, "fpe_qmask", " FPE queue mask %#x", fpe_qmask);
+	}
+
 	print_schedule(f, tb);
 
 	if (tb[TCA_TAPRIO_ATTR_ADMIN_SCHED]) {
-- 
2.17.1

