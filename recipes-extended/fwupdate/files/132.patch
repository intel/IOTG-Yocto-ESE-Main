From afcc2161efea729c0d842b3e40eb4aa2ce2f00d7 Mon Sep 17 00:00:00 2001
From: nick black <dankamongmen@gmail.com>
Date: Wed, 31 Jul 2019 00:40:18 -0400
Subject: [PATCH 1/2] libfwup: don't dereference unaligned pointers

---
 linux/libfwup.c | 26 ++++++++++++++------------
 1 file changed, 14 insertions(+), 12 deletions(-)

diff --git a/linux/libfwup.c b/linux/libfwup.c
index 4cfd50f..7dcb158 100644
--- a/linux/libfwup.c
+++ b/linux/libfwup.c
@@ -579,13 +579,14 @@ static int
 put_info(update_info *info)
 {
 	efi_guid_t varguid = FWUPDATE_GUID;
+	efi_guid_t marshal = info->guid;
 	ssize_t dps, is;
 	char *guidstr = NULL;
 	char *varname;
 	int error;
 	int rc;
 
-	rc = efi_guid_to_str(&info->guid, &guidstr);
+	rc = efi_guid_to_str(&marshal, &guidstr);
 	if (rc < 0) {
 		efi_error("efi_guid_to_str() failed");
 err:
@@ -2099,12 +2100,12 @@ fwup_print_update_info(void)
 	id = 0;
 	while ((rc = fwup_resource_iter_next(iter, &re)) > 0) {
 		update_info *info = re->info;
-		efi_guid_t *guid = &info->guid;
+		efi_guid_t guid = info->guid;
 		char *id_guid = NULL;
 		ssize_t dp_sz;
 		char *path;
 
-		rc = efi_guid_to_id_guid(guid, &id_guid);
+		rc = efi_guid_to_id_guid(&guid, &id_guid);
 		if (rc < 0)
 			break;
 
@@ -2146,17 +2147,18 @@ fwup_print_update_info(void)
 		       : info->status == FWUPDATE_ATTEMPTED ? "Attempted"
 		       : "Unknown");
 		if (info->status == FWUPDATE_ATTEMPTED) {
-			efi_time_t *time_attempted;
+			efi_time_t time_attempted;
 			struct tm tm;
 
-			time_attempted = (efi_time_t *)&info->time_attempted;
-			tm.tm_year = time_attempted->year - 1900;
-			tm.tm_mon = time_attempted->month - 1;
-			tm.tm_mday = time_attempted->day;
-			tm.tm_hour = time_attempted->hour;
-			tm.tm_min = time_attempted->minute;
-			tm.tm_sec = time_attempted->second;
-			tm.tm_isdst = time_attempted->daylight;
+			memcpy(&time_attempted, &info->time_attempted,
+			       sizeof(time_attempted));
+			tm.tm_year = time_attempted.year - 1900;
+			tm.tm_mon = time_attempted.month - 1;
+			tm.tm_mday = time_attempted.day;
+			tm.tm_hour = time_attempted.hour;
+			tm.tm_min = time_attempted.minute;
+			tm.tm_sec = time_attempted.second;
+			tm.tm_isdst = time_attempted.daylight;
 
 			printf("  Attempted Time: ");
 			if (mktime(&tm) != (time_t)-1)

From 41369d0e8057c0765bf09cd562db5b9ddc90e7e1 Mon Sep 17 00:00:00 2001
From: nick black <dankamongmen@gmail.com>
Date: Wed, 31 Jul 2019 00:40:44 -0400
Subject: [PATCH 2/2] fwupdate: constify guid_cmp(), don't deref unaligned ptrs

---
 efi/fwupdate.c | 20 ++++++++++++++------
 1 file changed, 14 insertions(+), 6 deletions(-)

diff --git a/efi/fwupdate.c b/efi/fwupdate.c
index d7482c0..be73647 100644
--- a/efi/fwupdate.c
+++ b/efi/fwupdate.c
@@ -173,11 +173,19 @@ free(void *addr, UINTN size)
 }
 
 static inline int
-guid_cmp(efi_guid_t *a, efi_guid_t *b)
+guid_cmp(const efi_guid_t *a, const efi_guid_t *b)
 {
 	return CompareMem(a, b, sizeof (*a));
 }
 
+// Throws away type-safety in the interest of safely handling
+// improperly-aligned pointers to efi_guid_t. Prefer guid_cmp().
+static inline int
+guid_cmp_unaligned(const void *a, const void *b)
+{
+  return guid_cmp(a, b);
+}
+
 EFI_STATUS
 read_file(EFI_FILE_HANDLE fh, UINT8 **buf_out, UINTN *buf_size_out)
 {
@@ -524,10 +532,10 @@ find_updates(UINTN *n_updates_out, update_table ***updates_out)
 		}
 		if (update->info->status & FWUPDATE_ATTEMPT_UPDATE) {
 			EFI_TIME_CAPABILITIES timecaps = { 0, };
+			EFI_TIME marshal;
 
-			uefi_call_wrapper(RT->GetTime, 2,
-					  &update->info->time_attempted,
-					  &timecaps);
+			uefi_call_wrapper(RT->GetTime, 2, &marshal, &timecaps);
+			CopyMem(&update->info->time_attempted, &marshal, sizeof(marshal));
 			update->info->status = FWUPDATE_ATTEMPTED;
 			updates[n_updates++] = update;
 		} else {
@@ -1020,7 +1028,7 @@ do_ux_csum(EFI_HANDLE loaded_image, UINT8 *buf, UINTN size)
 	return EFI_SUCCESS;
 }
 
-#define is_ux_capsule(guid) (guid_cmp(guid, &ux_capsule_guid) == 0)
+#define is_ux_capsule(guid) (guid_cmp_unaligned(guid, &ux_capsule_guid) == 0)
 #define is_fmp_capsule(guid) (guid_cmp(guid, &fmp_capsule_guid) == 0)
 
 static EFI_STATUS
@@ -1057,7 +1065,7 @@ add_capsule(update_table *update, EFI_CAPSULE_HEADER **capsule_out,
 	 * Unfortunately there's not a good way to do this, so we're just
 	 * checking if the capsule has the fw_class guid at the right place.
 	 */
-	if ((guid_cmp(&update->info->guid, (efi_guid_t *)fbuf) == 0 ||
+	if ((guid_cmp_unaligned(&update->info->guid, (efi_guid_t *)fbuf) == 0 ||
 	     is_fmp_capsule((efi_guid_t *)fbuf)) &&
 	    /*
 	     * We're ignoring things that are 40 bytes here, because that's
