From 6c664d818b166107b764adb186b559148b904f3c Mon Sep 17 00:00:00 2001
From: qiwenX <qix.wen@intel.com>
Date: Tue, 18 Dec 2018 13:54:40 +0800
Subject: [PATCH 2/2]  Fix multi definition and change one config.

    1,Fix one definition between wsa and wsa5
    2,Use custom typemap.dat
    3,Use local wsdl and xsd

Signed-off-by: qiwenX <qix.wen@intel.com>
---
 .../www.onvif.org/onvif/ver10/analyticsdevice.wsdl |  709 ++
 .../onvif/ver10/device/wsdl/devicemgmt.wsdl        | 4237 ++++++++++
 gsoap/bin/www.onvif.org/onvif/ver10/deviceio.wsdl  | 1417 ++++
 gsoap/bin/www.onvif.org/onvif/ver10/display.wsdl   |  517 ++
 .../onvif/ver10/event/wsdl/event.wsdl              |  765 ++
 .../onvif/ver10/media/wsdl/media.wsdl              | 3692 ++++++++
 .../onvif/ver10/network/wsdl/remotediscovery.wsdl  |   93 +
 gsoap/bin/www.onvif.org/onvif/ver10/receiver.wsdl  |  398 +
 gsoap/bin/www.onvif.org/onvif/ver10/recording.wsdl | 1137 +++
 gsoap/bin/www.onvif.org/onvif/ver10/replay.wsdl    |  221 +
 .../www.onvif.org/onvif/ver10/schema/common.xsd    |  305 +
 .../bin/www.onvif.org/onvif/ver10/schema/onvif.xsd | 8819 ++++++++++++++++++++
 gsoap/bin/www.onvif.org/onvif/ver10/search.wsdl    |  882 ++
 .../onvif/ver20/analytics/wsdl/analytics.wsdl      |  692 ++
 .../onvif/ver20/imaging/wsdl/imaging.wsdl          |  597 ++
 .../www.onvif.org/onvif/ver20/ptz/wsdl/ptz.wsdl    | 1370 +++
 gsoap/bin/www.onvif.org/ver10/actionengine.wsdl    | 1265 +++
 gsoap/import/wsa5.h                                |    4 +-
 gsoap/typemap.dat                                  |    2 +-
 19 files changed, 27119 insertions(+), 3 deletions(-)
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/analyticsdevice.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/deviceio.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/display.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/event/wsdl/event.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/media/wsdl/media.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/network/wsdl/remotediscovery.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/receiver.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/recording.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/replay.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/schema/common.xsd
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/schema/onvif.xsd
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver10/search.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver20/analytics/wsdl/analytics.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver20/imaging/wsdl/imaging.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/onvif/ver20/ptz/wsdl/ptz.wsdl
 create mode 100644 gsoap/bin/www.onvif.org/ver10/actionengine.wsdl

diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/analyticsdevice.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/analyticsdevice.wsdl
new file mode 100644
index 0000000..222aa20
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/analyticsdevice.wsdl
@@ -0,0 +1,709 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xsl" href="../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2010 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tad="http://www.onvif.org/ver10/analyticsdevice/wsdl" targetNamespace="http://www.onvif.org/ver10/analyticsdevice/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/analyticsdevice/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="http://www.onvif.org/onvif/ver10/schema/onvif.xsd"/>
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tad:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the analytics device service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="tad:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="DeleteAnalyticsEngineControl">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the Analytics Engine Control configuration to be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteAnalyticsEngineControlResponse">
+				<xs:complexType>
+					<xs:sequence>
+						</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateAnalyticsEngineInputs">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngineInput" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Settings of the configurations to be created.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean" minOccurs="1" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateAnalyticsEngineInputsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngineInput" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Configurations containing token generated.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateAnalyticsEngineControl">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngineControl">
+							<xs:annotation>
+								<xs:documentation>Settings of the Analytics Engine Control configuration to be created. Mode shall be set to "idle".</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateAnalyticsEngineControlResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngineInput" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Configuration containing token generated.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAnalyticsEngineControl">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngineControl">
+							<xs:annotation>
+								<xs:documentation>Contains the modified Analytics Engine Control configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAnalyticsEngineControlResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngineControl">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested AnalyticsEngineControl configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngineControlResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngineControl">
+							<xs:annotation>
+								<xs:documentation>Configuration of the AnalyticsEngineControl.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngineControls">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngineControlsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AnalyticsEngineControls" type="tt:AnalyticsEngineControl" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of available AnalyticsEngineControl configurations.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngine">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested AnalyticsEngine configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngineResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngine">
+							<xs:annotation>
+								<xs:documentation>Configuration of the AnalyticsEngine.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngines">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEnginesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngine" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of available AnalyticsEngine configurations.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetVideoAnalyticsConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoAnalyticsConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified video analytics configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetVideoAnalyticsConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAnalyticsEngineInput">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngineInput">
+							<xs:annotation>
+								<xs:documentation>Contains the modified Analytics Engine Input configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAnalyticsEngineInputResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngineInput">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested AnalyticsEngineInput configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngineInputResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngineInput">
+							<xs:annotation>
+								<xs:documentation>Configuration of the AnalyticsEngineInput.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngineInputs">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsEngineInputsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AnalyticsEngineInput" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of available AnalyticsEngineInput configurations.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsDeviceStreamUri">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StreamSetup" type="tt:StreamSetup">
+							<xs:annotation>
+								<xs:documentation>Configuration of the URI requested.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="AnalyticsEngineControlToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the AnalyticsEngineControl whose URI is requested.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsDeviceStreamUriResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Uri" type="xs:anyURI">
+							<xs:annotation>
+								<xs:documentation>Streaming URI.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoAnalyticsConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the VideoAnalyticsConfiguration requested.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoAnalyticsConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoAnalyticsConfiguration">
+							<xs:annotation>
+								<xs:documentation>Settings of the VideoAnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteAnalyticsEngineInputs">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>LIst of tokens of Analytics Engine Input configurations to be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteAnalyticsEngineInputsResponse">
+				<xs:complexType>
+					<xs:sequence>
+			        </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsState">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AnalyticsEngineControlToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the AnalyticsEngineControl whose state information is requested.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsStateResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="State" type="tt:AnalyticsStateInformation">
+							<xs:annotation>
+								<xs:documentation>Current status information.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+		</xs:schema>
+		<!--===============================-->
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tad:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tad:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteAnalyticsEngineControlRequest">
+		<wsdl:part name="parameters" element="tad:DeleteAnalyticsEngineControl"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteAnalyticsEngineControlResponse">
+		<wsdl:part name="parameters" element="tad:DeleteAnalyticsEngineControlResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateAnalyticsEngineControlRequest">
+		<wsdl:part name="parameters" element="tad:CreateAnalyticsEngineControl"/>
+	</wsdl:message>
+	<wsdl:message name="CreateAnalyticsEngineControlResponse">
+		<wsdl:part name="parameters" element="tad:CreateAnalyticsEngineControlResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetAnalyticsEngineControlRequest">
+		<wsdl:part name="parameters" element="tad:SetAnalyticsEngineControl"/>
+	</wsdl:message>
+	<wsdl:message name="SetAnalyticsEngineControlResponse">
+		<wsdl:part name="parameters" element="tad:SetAnalyticsEngineControlResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineControlRequest">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngineControl"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineControlResponse">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngineControlResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineControlsRequest">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngineControls"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineControlsResponse">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngineControlsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineRequest">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngine"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineResponse">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngineResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEnginesRequest">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngines"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEnginesResponse">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEnginesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoAnalyticsConfigurationRequest">
+		<wsdl:part name="parameters" element="tad:SetVideoAnalyticsConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoAnalyticsConfigurationResponse">
+		<wsdl:part name="parameters" element="tad:SetVideoAnalyticsConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetAnalyticsEngineInputRequest">
+		<wsdl:part name="parameters" element="tad:SetAnalyticsEngineInput"/>
+	</wsdl:message>
+	<wsdl:message name="SetAnalyticsEngineInputResponse">
+		<wsdl:part name="parameters" element="tad:SetAnalyticsEngineInputResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineInputRequest">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngineInput"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineInputResponse">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngineInputResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineInputsRequest">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngineInputs"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsEngineInputsResponse">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsEngineInputsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsDeviceStreamUriRequest">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsDeviceStreamUri"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsDeviceStreamUriResponse">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsDeviceStreamUriResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoAnalyticsConfigurationRequest">
+		<wsdl:part name="parameters" element="tad:GetVideoAnalyticsConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoAnalyticsConfigurationResponse">
+		<wsdl:part name="parameters" element="tad:GetVideoAnalyticsConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateAnalyticsEngineInputsRequest">
+		<wsdl:part name="parameters" element="tad:CreateAnalyticsEngineInputs"/>
+	</wsdl:message>
+	<wsdl:message name="CreateAnalyticsEngineInputsResponse">
+		<wsdl:part name="parameters" element="tad:CreateAnalyticsEngineInputsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteAnalyticsEngineInputsRequest">
+		<wsdl:part name="parameters" element="tad:DeleteAnalyticsEngineInputs"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteAnalyticsEngineInputsResponse">
+		<wsdl:part name="parameters" element="tad:DeleteAnalyticsEngineInputsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsStateRequest">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsState"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsStateResponse">
+		<wsdl:part name="parameters" element="tad:GetAnalyticsStateResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="AnalyticsDevicePort">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the analytics device service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="tad:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="tad:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteAnalyticsEngineControl">
+			<wsdl:documentation>DeleteAnalyticsEngineControl shall delete a control object .</wsdl:documentation>
+			<wsdl:input message="tad:DeleteAnalyticsEngineControlRequest"/>
+			<wsdl:output message="tad:DeleteAnalyticsEngineControlResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateAnalyticsEngineControl">
+			<wsdl:documentation>CreateAnalyticsEngineControl shall create a new control object.</wsdl:documentation>
+			<wsdl:input message="tad:CreateAnalyticsEngineControlRequest"/>
+			<wsdl:output message="tad:CreateAnalyticsEngineControlResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetAnalyticsEngineControl">
+			<wsdl:documentation>This command modifies the AnalyticsEngineControl configuration.</wsdl:documentation>
+			<wsdl:input message="tad:SetAnalyticsEngineControlRequest"/>
+			<wsdl:output message="tad:SetAnalyticsEngineControlResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngineControl">
+			<wsdl:documentation>The GetAnalyticsEngineControl command fetches the analytics engine control if the analytics engine control token is known.</wsdl:documentation>
+			<wsdl:input message="tad:GetAnalyticsEngineControlRequest"/>
+			<wsdl:output message="tad:GetAnalyticsEngineControlResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngineControls">
+			<wsdl:documentation>This operation lists all available analytics engine controls for the device.</wsdl:documentation>
+			<wsdl:input message="tad:GetAnalyticsEngineControlsRequest"/>
+			<wsdl:output message="tad:GetAnalyticsEngineControlsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngine">
+			<wsdl:documentation>The GetAnalyticsEngine command fetches the analytics engine configuration if the token is known.</wsdl:documentation>
+			<wsdl:input message="tad:GetAnalyticsEngineRequest"/>
+			<wsdl:output message="tad:GetAnalyticsEngineResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngines">
+			<wsdl:documentation>This operation lists all available analytics engine configurations for the device.</wsdl:documentation>
+			<wsdl:input message="tad:GetAnalyticsEnginesRequest"/>
+			<wsdl:output message="tad:GetAnalyticsEnginesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetVideoAnalyticsConfiguration">
+			<wsdl:documentation>A video analytics configuration is modified using this command.</wsdl:documentation>
+			<wsdl:input message="tad:SetVideoAnalyticsConfigurationRequest"/>
+			<wsdl:output message="tad:SetVideoAnalyticsConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetAnalyticsEngineInput">
+			<wsdl:documentation>This command modifies the analytics engine input configuration.</wsdl:documentation>
+			<wsdl:input message="tad:SetAnalyticsEngineInputRequest"/>
+			<wsdl:output message="tad:SetAnalyticsEngineInputResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngineInput">
+			<wsdl:documentation>The GetAnalyticsEngineInput command fetches the input configuration if the analytics engine input configuration token is known.</wsdl:documentation>
+			<wsdl:input message="tad:GetAnalyticsEngineInputRequest"/>
+			<wsdl:output message="tad:GetAnalyticsEngineInputResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngineInputs">
+			<wsdl:documentation>This operation lists all available analytics engine input configurations for the device.</wsdl:documentation>
+			<wsdl:input message="tad:GetAnalyticsEngineInputsRequest"/>
+			<wsdl:output message="tad:GetAnalyticsEngineInputsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsDeviceStreamUri">
+			<wsdl:documentation>This operation requests a URI that can be used to initiate a live stream using RTSP as the control protocol if the token of the AnalyticsEngineControl is known.</wsdl:documentation>
+			<wsdl:input message="tad:GetAnalyticsDeviceStreamUriRequest"/>
+			<wsdl:output message="tad:GetAnalyticsDeviceStreamUriResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoAnalyticsConfiguration">
+			<wsdl:documentation>The GetVideoAnalyticsConfiguration command fetches the video analytics configuration if the video analytics configuration token is known.</wsdl:documentation>
+			<wsdl:input message="tad:GetVideoAnalyticsConfigurationRequest"/>
+			<wsdl:output message="tad:GetVideoAnalyticsConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateAnalyticsEngineInputs">
+			<wsdl:documentation>This command generates one or more analytics engine input configurations.</wsdl:documentation>
+			<wsdl:input message="tad:CreateAnalyticsEngineInputsRequest"/>
+			<wsdl:output message="tad:CreateAnalyticsEngineInputsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteAnalyticsEngineInputs">
+			<wsdl:documentation>This command deletes analytics engine input configurations if the tokens are known.</wsdl:documentation>
+			<wsdl:input message="tad:DeleteAnalyticsEngineInputsRequest"/>
+			<wsdl:output message="tad:DeleteAnalyticsEngineInputsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsState">
+			<wsdl:documentation>GetAnalyticsState returns status information of the referenced AnalyticsEngineControl object.</wsdl:documentation>
+			<wsdl:input message="tad:GetAnalyticsStateRequest"/>
+			<wsdl:output message="tad:GetAnalyticsStateResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="AnalyticsDeviceBinding" type="tad:AnalyticsDevicePort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteAnalyticsEngineControl">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineControl"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateAnalyticsEngineControl">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineControl"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetAnalyticsEngineControl">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineControl"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngineControl">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControl"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngineControls">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineControls"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngine">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngine"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngines">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngines"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetVideoAnalyticsConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/SetVideoAnalyticsConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetAnalyticsEngineInput">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/SetAnalyticsEngineInput"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngineInput">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInput"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsEngineInputs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsEngineInputs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsDeviceStreamUri">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsDeviceStreamUri"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoAnalyticsConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetVideoAnalyticsConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateAnalyticsEngineInputs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/CreateAnalyticsEngineInputs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteAnalyticsEngineInputs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/DeleteAnalyticsEngineInputs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsState">
+			<soap:operation soapAction="http://www.onvif.org/ver10/analyticsdevice/wsdl/GetAnalyticsState"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl
new file mode 100644
index 0000000..fa11daf
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl
@@ -0,0 +1,4237 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<?xml-stylesheet type="text/xsl" href="../../../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2017 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tds="http://www.onvif.org/ver10/device/wsdl" targetNamespace="http://www.onvif.org/ver10/device/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:tds="http://www.onvif.org/ver10/device/wsdl" elementFormDefault="qualified" version="17.06">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../../../ver10/schema/onvif.xsd"/>
+			<!--===============================-->
+			<xs:element name="GetServices">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="IncludeCapability" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>Indicates if the service capabilities (untyped) should be included in the response.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServicesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Service" type="tds:Service" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Each Service element contains information about one service.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Service">
+				<xs:sequence>
+					<xs:element name="Namespace" type="xs:anyURI">
+						<xs:annotation>
+							<xs:documentation>Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="XAddr" type="xs:anyURI">
+						<xs:annotation>
+							<xs:documentation>The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Capabilities" minOccurs="0">
+						<xs:complexType>
+							<xs:sequence>
+								<xs:any namespace="##any" processContents="lax">
+									<xs:annotation>
+										<xs:documentation>The placeholder for the service capabilities. The service capability element shall be returned here. For example for the device service that would be the tds:DeviceServiceCapabilities element (not complextype).</xs:documentation>
+									</xs:annotation>
+								</xs:any>
+							</xs:sequence>
+						</xs:complexType>
+					</xs:element>
+					<xs:element name="Version" type="tt:OnvifVersion">
+						<xs:annotation>
+							<xs:documentation>The version of the service (not the ONVIF core spec version).</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tds:DeviceServiceCapabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the device service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="DeviceServiceCapabilities">
+				<xs:sequence>
+					<xs:element name="Network" type="tds:NetworkCapabilities">
+						<xs:annotation>
+							<xs:documentation>Network capabilities.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Security" type="tds:SecurityCapabilities">
+						<xs:annotation>
+							<xs:documentation>Security capabilities.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="System" type="tds:SystemCapabilities">
+						<xs:annotation>
+							<xs:documentation>System capabilities.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Misc" type="tds:MiscCapabilities" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Capabilities that do not fit in any of the other categories.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+				</xs:sequence>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="tds:DeviceServiceCapabilities"/>
+			<!--===============================-->
+			<xs:complexType name="NetworkCapabilities">
+				<xs:attribute name="IPFilter" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for IP filtering.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="ZeroConfiguration" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for zeroconf.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="IPVersion6" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for IPv6.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="DynDNS" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for dynamic DNS configuration.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Dot11Configuration" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for IEEE 802.11 configuration.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Dot1XConfigurations" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Indicates the maximum number of Dot1X configurations supported by the device</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="HostnameFromDHCP" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for retrieval of hostname from DHCP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="NTP" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Maximum number of NTP servers supported by the devices SetNTP command.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="DHCPv6" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for Stateful IPv6 DHCP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:simpleType name="EAPMethodTypes">
+				<xs:list itemType="xs:int"/>
+			</xs:simpleType>
+			<xs:complexType name="SecurityCapabilities">
+				<xs:attribute name="TLS1.0" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for TLS 1.0.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="TLS1.1" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for TLS 1.1.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="TLS1.2" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for TLS 1.2.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="OnboardKeyGeneration" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for onboard key generation.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="AccessPolicyConfig" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for access policy configuration.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="DefaultAccessPolicy" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for the ONVIF default access policy.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Dot1X" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for IEEE 802.1X configuration.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RemoteUserHandling" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for remote user configuration. Used when accessing another device.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="X.509Token" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for WS-Security X.509 token.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SAMLToken" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for WS-Security SAML token.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="KerberosToken" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for WS-Security Kerberos token.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="UsernameToken" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for WS-Security Username token.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="HttpDigest" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for WS over HTTP digest authenticated communication layer.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RELToken" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for WS-Security REL token.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SupportedEAPMethods" type="tds:EAPMethodTypes">
+					<xs:annotation>
+						<xs:documentation>EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxUsers" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>The maximum number of users that the device supports.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxUserNameLength" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Maximum number of characters supported for the username by CreateUsers.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxPasswordLength" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Maximum number of characters supported for the password by CreateUsers and SetUser.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="SystemCapabilities">
+				<xs:attribute name="DiscoveryResolve" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for WS Discovery resolve requests.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="DiscoveryBye" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for WS-Discovery Bye.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RemoteDiscovery" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for remote discovery.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SystemBackup" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for system backup through MTOM.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SystemLogging" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for retrieval of system logging through MTOM.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="FirmwareUpgrade" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for firmware upgrade through MTOM.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="HttpFirmwareUpgrade" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for firmware upgrade through HTTP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="HttpSystemBackup" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for system backup through HTTP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="HttpSystemLogging" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for retrieval of system logging through HTTP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="HttpSupportInformation" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for retrieving support information through HTTP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="StorageConfiguration" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for storage configuration interfaces.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxStorageConfigurations" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Indicates maximum number of storage configurations supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="GeoLocationEntries" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>If present signals support for geo location. The value signals the supported number of entries.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="AutoGeo" type="tt:StringAttrList">
+					<xs:annotation>
+						<xs:documentation>List of supported automatic GeoLocation adjustment supported by the device. Valid items are defined by tds:AutoGeoMode.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="StorageTypesSupported" type="tt:StringAttrList">
+					<xs:annotation>
+						<xs:documentation>Enumerates the supported StorageTypes, see tds:StorageType.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:simpleType name="AutoGeoModes">
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="Location">
+						<xs:annotation>	
+							<xs:documentation>Automatic adjustment of the device location.</xs:documentation>
+						</xs:annotation>
+					</xs:enumeration>
+					<xs:enumeration value="Heading">
+						<xs:annotation>	
+							<xs:documentation>Automatic adjustment of the device orientation relative to the compass also called yaw.</xs:documentation>
+						</xs:annotation>
+					</xs:enumeration>
+					<xs:enumeration value="Leveling">
+						<xs:annotation>	
+							<xs:documentation>Automatic adjustment of the deviation from the horizon also called pitch and roll.</xs:documentation>
+						</xs:annotation>
+					</xs:enumeration>
+    			</xs:restriction>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="MiscCapabilities">
+				<xs:attribute name="AuxiliaryCommands" type="tt:StringAttrList">
+					<xs:annotation>
+						<xs:documentation>Lists of commands supported by SendAuxiliaryCommand.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:element name="GetDeviceInformation">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDeviceInformationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Manufacturer" type="xs:string">
+							<xs:annotation>
+								<xs:documentation>The manufactor of the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Model" type="xs:string">
+							<xs:annotation>
+								<xs:documentation>The device model.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="FirmwareVersion" type="xs:string">
+							<xs:annotation>
+								<xs:documentation>The firmware version in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="SerialNumber" type="xs:string">
+							<xs:annotation>
+								<xs:documentation>The serial number of the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="HardwareId" type="xs:string">
+							<xs:annotation>
+								<xs:documentation>The hardware ID of the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetSystemDateAndTime">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DateTimeType" type="tt:SetDateTimeType">
+							<xs:annotation>
+								<xs:documentation>Defines if the date and time is set via NTP or manually.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="DaylightSavings" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>Automatically adjust Daylight savings if defined in TimeZone.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="TimeZone" type="tt:TimeZone" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The time zone in POSIX 1003.1 format</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="UTCDateTime" type="tt:DateTime" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetSystemDateAndTimeResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSystemDateAndTime">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSystemDateAndTimeResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SystemDateAndTime" type="tt:SystemDateTime">
+							<xs:annotation>
+								<xs:documentation>Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetSystemFactoryDefault">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="FactoryDefault" type="tt:FactoryDefaultType">
+							<xs:annotation>
+								<xs:documentation>Specifies the factory default action type.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetSystemFactoryDefaultResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="UpgradeSystemFirmware">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Firmware" type="tt:AttachmentData"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="UpgradeSystemFirmwareResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Message" type="xs:string" minOccurs="0" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SystemReboot">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SystemRebootResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Message" type="xs:string">
+							<xs:annotation>
+								<xs:documentation>Contains the reboot message sent by the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RestoreSystem">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="BackupFiles" type="tt:BackupFile" minOccurs="1" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RestoreSystemResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSystemBackup">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSystemBackupResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="BackupFiles" type="tt:BackupFile" minOccurs="1" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSystemSupportInformation">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSystemSupportInformationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SupportInformation" type="tt:SupportInformation">
+							<xs:annotation>
+								<xs:documentation>Contains the arbitary device diagnostics information.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSystemLog">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="LogType" type="tt:SystemLogType">
+							<xs:annotation>
+								<xs:documentation>Specifies the type of system log to get.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSystemLogResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SystemLog" type="tt:SystemLog">
+							<xs:annotation>
+								<xs:documentation>Contains the system log information.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetScopes">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetScopesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Scopes" type="tt:Scope" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetScopes">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Scopes" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of scope parameters that will replace all existing configurable scope parameters.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetScopesResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddScopes">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ScopeItem" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of new configurable scope parameters that will be added to the existing configurable scope.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddScopesResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveScopes">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ScopeItem" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of URIs that should be removed from the device scope.<br/>
+									Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveScopesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ScopeItem" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of URIs that has been removed from the device scope</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDiscoveryMode">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDiscoveryModeResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DiscoveryMode" type="tt:DiscoveryMode">
+							<xs:annotation>
+								<xs:documentation>
+									Indicator of discovery mode: Discoverable, NonDiscoverable.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetDiscoveryMode">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DiscoveryMode" type="tt:DiscoveryMode">
+							<xs:annotation>
+								<xs:documentation>
+									Indicator of discovery mode: Discoverable, NonDiscoverable.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetDiscoveryModeResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetRemoteDiscoveryMode">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRemoteDiscoveryModeResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RemoteDiscoveryMode" type="tt:DiscoveryMode">
+							<xs:annotation>
+								<xs:documentation>
+									Indicator of discovery mode: Discoverable, NonDiscoverable.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetRemoteDiscoveryMode">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RemoteDiscoveryMode" type="tt:DiscoveryMode">
+							<xs:annotation>
+								<xs:documentation>
+									Indicator of discovery mode: Discoverable, NonDiscoverable.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRemoteDiscoveryModeResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDPAddresses">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDPAddressesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DPAddress" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetDPAddresses">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DPAddress" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetDPAddressesResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetEndpointReference">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetEndpointReferenceResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="GUID" type="xs:string"/>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetRemoteUser">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRemoteUserResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RemoteUser" type="tt:RemoteUser" minOccurs="0"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetRemoteUser">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RemoteUser" type="tt:RemoteUser" minOccurs="0"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRemoteUserResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetUsers">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetUsersResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="User" type="tt:User" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of the onvif users and following information is included in each entry: username and user level.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreateUsers">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="User" type="tt:User" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateUsersResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeleteUsers">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Username" type="xs:string" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteUsersResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetUser">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="User" type="tt:User" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned. </xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetUserResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetWsdlUrl">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetWsdlUrlResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="WsdlUrl" type="xs:anyURI"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCapabilities">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Category" type="tt:CapabilityCategory" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									List of categories to retrieve capability information on.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tt:Capabilities">
+							<xs:annotation>
+								<xs:documentation>
+									Capability information.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetHostname">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetHostnameResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="HostnameInformation" type="tt:HostnameInformation">
+							<xs:annotation>
+								<xs:documentation>Contains the hostname information.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetHostname">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Name" type="xs:token">
+							<xs:annotation>
+								<xs:documentation>The hostname to set.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetHostnameResponse">
+				<xs:complexType>
+					<xs:sequence>
+				    </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetHostnameFromDHCP">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="FromDHCP" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>True if the hostname shall be obtained via DHCP.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetHostnameFromDHCPResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RebootNeeded" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>
+									Indicates whether or not a reboot is required after configuration updates.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDNS">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDNSResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DNSInformation" type="tt:DNSInformation">
+							<xs:annotation>
+								<xs:documentation>
+									DNS information.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetDNS">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="FromDHCP" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>
+									Indicate if the DNS address is to be retrieved using DHCP.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="SearchDomain" type="xs:token" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									DNS search domain.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="DNSManual" type="tt:IPAddress" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									DNS address(es) set manually.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetDNSResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetNTP">
+				<xs:complexType>
+					<xs:sequence>
+				    </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetNTPResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="NTPInformation" type="tt:NTPInformation">
+							<xs:annotation>
+								<xs:documentation>
+									NTP information.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetNTP">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="FromDHCP" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>
+									Indicate if NTP address information is to be retrieved using DHCP.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="NTPManual" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									Manual NTP settings.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetNTPResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDynamicDNS">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDynamicDNSResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DynamicDNSInformation" type="tt:DynamicDNSInformation">
+							<xs:annotation>
+								<xs:documentation>
+									Dynamic DNS information.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetDynamicDNS">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Type" type="tt:DynamicDNSType">
+							<xs:annotation>
+								<xs:documentation>
+									Dynamic DNS type.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Name" type="tt:DNSName" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>
+									DNS name.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="TTL" type="xs:duration" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>
+									DNS record time to live.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetDynamicDNSResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetNetworkInterfaces">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetNetworkInterfacesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="NetworkInterfaces" type="tt:NetworkInterface" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									List of network interfaces.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetNetworkInterfaces">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="InterfaceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+									Symbolic network interface name.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="NetworkInterface" type="tt:NetworkInterfaceSetConfiguration">
+							<xs:annotation>
+								<xs:documentation>
+									Network interface name.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetNetworkInterfacesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RebootNeeded" type="xs:boolean" minOccurs="1" maxOccurs="1">
+							<xs:annotation>
+								<xs:documentation>
+									Indicates whether or not a reboot is required after configuration updates.
+									If a device responds with RebootNeeded set to false, the device can be reached
+									via the new IP address without further action. A client should be aware that a device
+									may not be responsive for a short period of time until it signals availability at
+									the new address via the discovery Hello messages.
+									If a device responds with RebootNeeded set to true, it will be further available under
+									its previous IP address. The settings will only be activated when the device is
+									rebooted via the SystemReboot command.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetNetworkProtocols">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetNetworkProtocolsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="NetworkProtocols" type="tt:NetworkProtocol" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetNetworkProtocols">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="NetworkProtocols" type="tt:NetworkProtocol" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetNetworkProtocolsResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetNetworkDefaultGateway">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetNetworkDefaultGatewayResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="NetworkGateway" type="tt:NetworkGateway">
+							<xs:annotation>
+								<xs:documentation>Gets the default IPv4 and IPv6 gateway settings from the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetNetworkDefaultGateway">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="IPv4Address" type="tt:IPv4Address" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Sets IPv4 gateway address used as default setting.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="IPv6Address" type="tt:IPv6Address" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Sets IPv6 gateway address used as default setting.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetNetworkDefaultGatewayResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetZeroConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetZeroConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ZeroConfiguration" type="tt:NetworkZeroConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the zero-configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetZeroConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="InterfaceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Unique identifier referencing the physical interface.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Enabled" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>Specifies if the zero-configuration should be enabled or not.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetZeroConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetIPAddressFilter">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetIPAddressFilterResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="IPAddressFilter" type="tt:IPAddressFilter"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetIPAddressFilter">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="IPAddressFilter" type="tt:IPAddressFilter"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetIPAddressFilterResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddIPAddressFilter">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="IPAddressFilter" type="tt:IPAddressFilter"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddIPAddressFilterResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveIPAddressFilter">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="IPAddressFilter" type="tt:IPAddressFilter"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveIPAddressFilterResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAccessPolicy">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAccessPolicyResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PolicyFile" type="tt:BinaryData"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetAccessPolicy">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PolicyFile" type="tt:BinaryData"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAccessPolicyResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreateCertificate">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CertificateID" type="xs:token" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Certificate id.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Subject" type="xs:string" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Identification of the entity associated with the public-key.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ValidNotBefore" type="xs:dateTime" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Certificate validity start date.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ValidNotAfter" type="xs:dateTime" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Certificate expiry start date.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateCertificateResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="NvtCertificate" type="tt:Certificate">
+							<xs:annotation>
+								<xs:documentation>
+									base64 encoded DER representation of certificate.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCertificates">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCertificatesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="NvtCertificate" type="tt:Certificate" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									Id and base64 encoded DER representation of all available certificates.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCertificatesStatus">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCertificatesStatusResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CertificateStatus" type="tt:CertificateStatus" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									Indicates if a certificate is used in an optional HTTPS configuration of the device.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetCertificatesStatus">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CertificateStatus" type="tt:CertificateStatus" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetCertificatesStatusResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeleteCertificates">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CertificateID" type="xs:token" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									List of ids of certificates to delete.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteCertificatesResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPkcs10Request">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CertificateID" type="xs:token">
+							<xs:annotation>
+								<xs:documentation>
+									List of ids of certificates to delete.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Subject" type="xs:string" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>
+									Relative Dinstinguished Name(RDN) CommonName(CN).
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Attributes" type="tt:BinaryData" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>
+									Optional base64 encoded DER attributes.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetPkcs10RequestResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Pkcs10Request" type="tt:BinaryData">
+							<xs:annotation>
+								<xs:documentation>
+									base64 encoded DER representation of certificate.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="LoadCertificates">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="NVTCertificate" type="tt:Certificate" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+									Optional id and base64 encoded DER representation of certificate.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="LoadCertificatesResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetClientCertificateMode">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetClientCertificateModeResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Enabled" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>
+									Indicates whether or not client certificates are required by device.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetClientCertificateMode">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Enabled" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>
+									Indicates whether or not client certificates are required by device.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetClientCertificateModeResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCACertificates">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCACertificatesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CACertificate" type="tt:Certificate" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="LoadCertificateWithPrivateKey">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CertificateWithPrivateKey" type="tt:CertificateWithPrivateKey" minOccurs="1" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="LoadCertificateWithPrivateKeyResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCertificateInformation">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CertificateID" type="xs:token" minOccurs="1" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCertificateInformationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CertificateInformation" type="tt:CertificateInformation" minOccurs="1" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="LoadCACertificates">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CACertificate" type="tt:Certificate" minOccurs="1" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="LoadCACertificatesResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreateDot1XConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Dot1XConfiguration" type="tt:Dot1XConfiguration" minOccurs="1" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateDot1XConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetDot1XConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Dot1XConfiguration" type="tt:Dot1XConfiguration" minOccurs="1" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetDot1XConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDot1XConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Dot1XConfigurationToken" type="tt:ReferenceToken" minOccurs="1" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDot1XConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Dot1XConfiguration" type="tt:Dot1XConfiguration" minOccurs="1" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDot1XConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+			</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDot1XConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Dot1XConfiguration" type="tt:Dot1XConfiguration" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeleteDot1XConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Dot1XConfigurationToken" type="tt:ReferenceToken" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteDot1XConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetRelayOutputs">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRelayOutputsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RelayOutputs" type="tt:RelayOutput" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetRelayOutputSettings">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RelayOutputToken" type="tt:ReferenceToken"/>
+						<xs:element name="Properties" type="tt:RelayOutputSettings"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRelayOutputSettingsResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetRelayOutputState">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RelayOutputToken" type="tt:ReferenceToken" minOccurs="1" maxOccurs="1"/>
+						<xs:element name="LogicalState" type="tt:RelayLogicalState" minOccurs="1" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRelayOutputStateResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SendAuxiliaryCommand">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AuxiliaryCommand" type="tt:AuxiliaryData" minOccurs="1" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SendAuxiliaryCommandResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AuxiliaryCommandResponse" type="tt:AuxiliaryData" minOccurs="0" maxOccurs="1"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDot11Capabilities">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDot11CapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tt:Dot11Capabilities"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDot11Status">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="InterfaceToken" type="tt:ReferenceToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDot11StatusResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Status" type="tt:Dot11Status"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="ScanAvailableDot11Networks">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="InterfaceToken" type="tt:ReferenceToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ScanAvailableDot11NetworksResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Networks" type="tt:Dot11AvailableNetworks" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSystemUris">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSystemUrisResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SystemLogUris" type="tt:SystemLogUriList" minOccurs="0" maxOccurs="1"/>
+						<xs:element name="SupportInfoUri" type="xs:anyURI" minOccurs="0" maxOccurs="1"/>
+						<xs:element name="SystemBackupUri" type="xs:anyURI" minOccurs="0" maxOccurs="1"/>
+						<xs:element name="Extension" minOccurs="0">
+							<xs:complexType>
+								<xs:sequence>
+									<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+								</xs:sequence>
+							</xs:complexType>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="StartFirmwareUpgrade">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="StartFirmwareUpgradeResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="UploadUri" type="xs:anyURI"/>
+						<xs:element name="UploadDelay" type="xs:duration"/>
+						<xs:element name="ExpectedDownTime" type="xs:duration"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="StartSystemRestore">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="StartSystemRestoreResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="UploadUri" type="xs:anyURI"/>
+						<xs:element name="ExpectedDownTime" type="xs:duration"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			
+			<xs:complexType name="UserCredential">
+				<xs:sequence>
+					<xs:element name="UserName" type="xs:string">
+						<xs:annotation>	
+							<xs:documentation>User name</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Password" type="xs:string" minOccurs="0">
+						<xs:annotation>	
+							<xs:documentation> optional password</xs:documentation> 
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" minOccurs="0">
+						<xs:complexType>
+							<xs:sequence>
+								<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+							</xs:sequence>
+						</xs:complexType>
+					</xs:element>
+				</xs:sequence>
+			</xs:complexType>
+			
+			<xs:simpleType name="StorageType">
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="NFS">
+						<xs:annotation>	
+							<xs:documentation>NFS protocol</xs:documentation>
+						</xs:annotation>
+					</xs:enumeration>
+					<xs:enumeration value="CIFS">
+						<xs:annotation>
+							<xs:documentation>CIFS protocol</xs:documentation>
+						</xs:annotation>
+					</xs:enumeration>
+					<xs:enumeration value="CDMI">
+						<xs:annotation>
+							<xs:documentation>CDMI protocol</xs:documentation>
+						</xs:annotation>
+					</xs:enumeration>
+					<xs:enumeration value="FTP">
+						<xs:annotation>
+							<xs:documentation>FTP protocol</xs:documentation>
+						</xs:annotation>
+					</xs:enumeration>
+				</xs:restriction>
+			</xs:simpleType>
+			
+			<xs:complexType name="StorageConfigurationData">
+				<xs:sequence>
+					<xs:element name="LocalPath" type="xs:anyURI" minOccurs="0">
+						<xs:annotation>
+			  				<xs:documentation> local path </xs:documentation>
+			  			</xs:annotation>
+					</xs:element>
+					<xs:element name="StorageUri" type="xs:anyURI" minOccurs="0">
+			  			<xs:annotation>
+			  				<xs:documentation> Storage server address </xs:documentation>
+			  			</xs:annotation>
+			  		</xs:element>
+					<xs:element name="User" type="tds:UserCredential"  minOccurs="0">
+			  			<xs:annotation>
+			  				<xs:documentation> User credential for the storage server </xs:documentation>
+			  			</xs:annotation>
+			  		</xs:element>
+					<xs:element name="Extension" minOccurs="0">
+						<xs:complexType>
+							<xs:sequence>
+								<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+							</xs:sequence>
+						</xs:complexType>
+					</xs:element>
+				</xs:sequence>
+				<xs:attribute name="type" type="xs:string" use="required">
+					<xs:annotation>
+						<xs:documentation>StorageType lists the acceptable values for type attribute </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			 </xs:complexType>
+
+			<xs:complexType name="StorageConfiguration">
+				<xs:complexContent>
+					<xs:extension base="tt:DeviceEntity">
+						<xs:sequence>
+							<xs:element name="Data" type="tds:StorageConfigurationData">
+							</xs:element>
+						</xs:sequence>
+					</xs:extension>
+				</xs:complexContent>
+			</xs:complexType>
+
+			<!--===============================-->
+			<!--===============================-->
+			<xs:element name="GetStorageConfigurations">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetStorageConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StorageConfigurations" type="tds:StorageConfiguration" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>			
+			<!--===============================-->
+			<!--===============================-->
+ 			<xs:element name="CreateStorageConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StorageConfiguration" type="tds:StorageConfigurationData">
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>			
+			<xs:element name="CreateStorageConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Token" type="tt:ReferenceToken">
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>	 		
+			<!--===============================-->
+			<!--===============================-->
+ 			<xs:element name="GetStorageConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Token" type="tt:ReferenceToken">
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>			
+			<xs:element name="GetStorageConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StorageConfiguration" type="tds:StorageConfiguration">
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>	 		
+			<!--===============================-->
+			<!--===============================-->
+ 			<xs:element name="SetStorageConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StorageConfiguration" type="tds:StorageConfiguration">
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>			
+			<xs:element name="SetStorageConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>	 		
+			<!--===============================-->
+			<!--===============================-->
+ 			<xs:element name="DeleteStorageConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Token" type="tt:ReferenceToken">
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>			
+			<xs:element name="DeleteStorageConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>	 		
+			<!--===============================-->
+			<xs:element name="GetGeoLocation">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>			
+			<xs:element name="GetGeoLocationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Location" type="tt:LocationEntity" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>	 		
+			<!--===============================-->
+			<xs:element name="SetGeoLocation">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Location" type="tt:LocationEntity" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>			
+			<xs:element name="SetGeoLocationResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>	 		
+			<!--===============================-->
+			<xs:element name="DeleteGeoLocation">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Location" type="tt:LocationEntity" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>			
+			<xs:element name="DeleteGeoLocationResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>	 		
+			<!--===============================-->
+			<!--===============================-->
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServicesRequest">
+		<wsdl:part name="parameters" element="tds:GetServices"/>
+	</wsdl:message>
+	<wsdl:message name="GetServicesResponse">
+		<wsdl:part name="parameters" element="tds:GetServicesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tds:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tds:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDeviceInformationRequest">
+		<wsdl:part name="parameters" element="tds:GetDeviceInformation"/>
+	</wsdl:message>
+	<wsdl:message name="GetDeviceInformationResponse">
+		<wsdl:part name="parameters" element="tds:GetDeviceInformationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetSystemDateAndTimeRequest">
+		<wsdl:part name="parameters" element="tds:SetSystemDateAndTime"/>
+	</wsdl:message>
+	<wsdl:message name="SetSystemDateAndTimeResponse">
+		<wsdl:part name="parameters" element="tds:SetSystemDateAndTimeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemDateAndTimeRequest">
+		<wsdl:part name="parameters" element="tds:GetSystemDateAndTime"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemDateAndTimeResponse">
+		<wsdl:part name="parameters" element="tds:GetSystemDateAndTimeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetSystemFactoryDefaultRequest">
+		<wsdl:part name="parameters" element="tds:SetSystemFactoryDefault"/>
+	</wsdl:message>
+	<wsdl:message name="SetSystemFactoryDefaultResponse">
+		<wsdl:part name="parameters" element="tds:SetSystemFactoryDefaultResponse"/>
+	</wsdl:message>
+	<wsdl:message name="UpgradeSystemFirmwareRequest">
+		<wsdl:part name="parameters" element="tds:UpgradeSystemFirmware"/>
+	</wsdl:message>
+	<wsdl:message name="UpgradeSystemFirmwareResponse">
+		<wsdl:part name="parameters" element="tds:UpgradeSystemFirmwareResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SystemRebootRequest">
+		<wsdl:part name="parameters" element="tds:SystemReboot"/>
+	</wsdl:message>
+	<wsdl:message name="SystemRebootResponse">
+		<wsdl:part name="parameters" element="tds:SystemRebootResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemBackupRequest">
+		<wsdl:part name="parameters" element="tds:GetSystemBackup"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemBackupResponse">
+		<wsdl:part name="parameters" element="tds:GetSystemBackupResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RestoreSystemRequest">
+		<wsdl:part name="parameters" element="tds:RestoreSystem"/>
+	</wsdl:message>
+	<wsdl:message name="RestoreSystemResponse">
+		<wsdl:part name="parameters" element="tds:RestoreSystemResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemSupportInformationRequest">
+		<wsdl:part name="parameters" element="tds:GetSystemSupportInformation"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemSupportInformationResponse">
+		<wsdl:part name="parameters" element="tds:GetSystemSupportInformationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemLogRequest">
+		<wsdl:part name="parameters" element="tds:GetSystemLog"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemLogResponse">
+		<wsdl:part name="parameters" element="tds:GetSystemLogResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetScopesRequest">
+		<wsdl:part name="parameters" element="tds:GetScopes"/>
+	</wsdl:message>
+	<wsdl:message name="GetScopesResponse">
+		<wsdl:part name="parameters" element="tds:GetScopesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetScopesRequest">
+		<wsdl:part name="parameters" element="tds:SetScopes"/>
+	</wsdl:message>
+	<wsdl:message name="SetScopesResponse">
+		<wsdl:part name="parameters" element="tds:SetScopesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddScopesRequest">
+		<wsdl:part name="parameters" element="tds:AddScopes"/>
+	</wsdl:message>
+	<wsdl:message name="AddScopesResponse">
+		<wsdl:part name="parameters" element="tds:AddScopesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveScopesRequest">
+		<wsdl:part name="parameters" element="tds:RemoveScopes"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveScopesResponse">
+		<wsdl:part name="parameters" element="tds:RemoveScopesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDiscoveryModeRequest">
+		<wsdl:part name="parameters" element="tds:GetDiscoveryMode"/>
+	</wsdl:message>
+	<wsdl:message name="GetDiscoveryModeResponse">
+		<wsdl:part name="parameters" element="tds:GetDiscoveryModeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetDiscoveryModeRequest">
+		<wsdl:part name="parameters" element="tds:SetDiscoveryMode"/>
+	</wsdl:message>
+	<wsdl:message name="SetDiscoveryModeResponse">
+		<wsdl:part name="parameters" element="tds:SetDiscoveryModeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRemoteDiscoveryModeRequest">
+		<wsdl:part name="parameters" element="tds:GetRemoteDiscoveryMode"/>
+	</wsdl:message>
+	<wsdl:message name="GetRemoteDiscoveryModeResponse">
+		<wsdl:part name="parameters" element="tds:GetRemoteDiscoveryModeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetRemoteDiscoveryModeRequest">
+		<wsdl:part name="parameters" element="tds:SetRemoteDiscoveryMode"/>
+	</wsdl:message>
+	<wsdl:message name="SetRemoteDiscoveryModeResponse">
+		<wsdl:part name="parameters" element="tds:SetRemoteDiscoveryModeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDPAddressesRequest">
+		<wsdl:part name="parameters" element="tds:GetDPAddresses"/>
+	</wsdl:message>
+	<wsdl:message name="GetDPAddressesResponse">
+		<wsdl:part name="parameters" element="tds:GetDPAddressesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetDPAddressesRequest">
+		<wsdl:part name="parameters" element="tds:SetDPAddresses"/>
+	</wsdl:message>
+	<wsdl:message name="SetDPAddressesResponse">
+		<wsdl:part name="parameters" element="tds:SetDPAddressesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetEndpointReferenceRequest">
+		<wsdl:part name="parameters" element="tds:GetEndpointReference"/>
+	</wsdl:message>
+	<wsdl:message name="GetEndpointReferenceResponse">
+		<wsdl:part name="parameters" element="tds:GetEndpointReferenceResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRemoteUserRequest">
+		<wsdl:part name="parameters" element="tds:GetRemoteUser"/>
+	</wsdl:message>
+	<wsdl:message name="GetRemoteUserResponse">
+		<wsdl:part name="parameters" element="tds:GetRemoteUserResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetRemoteUserRequest">
+		<wsdl:part name="parameters" element="tds:SetRemoteUser"/>
+	</wsdl:message>
+	<wsdl:message name="SetRemoteUserResponse">
+		<wsdl:part name="parameters" element="tds:SetRemoteUserResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetUsersRequest">
+		<wsdl:part name="parameters" element="tds:GetUsers"/>
+	</wsdl:message>
+	<wsdl:message name="GetUsersResponse">
+		<wsdl:part name="parameters" element="tds:GetUsersResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateUsersRequest">
+		<wsdl:part name="parameters" element="tds:CreateUsers"/>
+	</wsdl:message>
+	<wsdl:message name="CreateUsersResponse">
+		<wsdl:part name="parameters" element="tds:CreateUsersResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteUsersRequest">
+		<wsdl:part name="parameters" element="tds:DeleteUsers"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteUsersResponse">
+		<wsdl:part name="parameters" element="tds:DeleteUsersResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetUserRequest">
+		<wsdl:part name="parameters" element="tds:SetUser"/>
+	</wsdl:message>
+	<wsdl:message name="SetUserResponse">
+		<wsdl:part name="parameters" element="tds:SetUserResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetWsdlUrlRequest">
+		<wsdl:part name="parameters" element="tds:GetWsdlUrl"/>
+	</wsdl:message>
+	<wsdl:message name="GetWsdlUrlResponse">
+		<wsdl:part name="parameters" element="tds:GetWsdlUrlResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tds:GetCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tds:GetCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetHostnameRequest">
+		<wsdl:part name="parameters" element="tds:GetHostname"/>
+	</wsdl:message>
+	<wsdl:message name="GetHostnameResponse">
+		<wsdl:part name="parameters" element="tds:GetHostnameResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetHostnameRequest">
+		<wsdl:part name="parameters" element="tds:SetHostname"/>
+	</wsdl:message>
+	<wsdl:message name="SetHostnameResponse">
+		<wsdl:part name="parameters" element="tds:SetHostnameResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetHostnameFromDHCPRequest">
+		<wsdl:part name="parameters" element="tds:SetHostnameFromDHCP"/>
+	</wsdl:message>
+	<wsdl:message name="SetHostnameFromDHCPResponse">
+		<wsdl:part name="parameters" element="tds:SetHostnameFromDHCPResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDNSRequest">
+		<wsdl:part name="parameters" element="tds:GetDNS"/>
+	</wsdl:message>
+	<wsdl:message name="GetDNSResponse">
+		<wsdl:part name="parameters" element="tds:GetDNSResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetDNSRequest">
+		<wsdl:part name="parameters" element="tds:SetDNS"/>
+	</wsdl:message>
+	<wsdl:message name="SetDNSResponse">
+		<wsdl:part name="parameters" element="tds:SetDNSResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetNTPRequest">
+		<wsdl:part name="parameters" element="tds:GetNTP"/>
+	</wsdl:message>
+	<wsdl:message name="GetNTPResponse">
+		<wsdl:part name="parameters" element="tds:GetNTPResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetNTPRequest">
+		<wsdl:part name="parameters" element="tds:SetNTP"/>
+	</wsdl:message>
+	<wsdl:message name="SetNTPResponse">
+		<wsdl:part name="parameters" element="tds:SetNTPResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDynamicDNSRequest">
+		<wsdl:part name="parameters" element="tds:GetDynamicDNS"/>
+	</wsdl:message>
+	<wsdl:message name="GetDynamicDNSResponse">
+		<wsdl:part name="parameters" element="tds:GetDynamicDNSResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetDynamicDNSRequest">
+		<wsdl:part name="parameters" element="tds:SetDynamicDNS"/>
+	</wsdl:message>
+	<wsdl:message name="SetDynamicDNSResponse">
+		<wsdl:part name="parameters" element="tds:SetDynamicDNSResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetNetworkInterfacesRequest">
+		<wsdl:part name="parameters" element="tds:GetNetworkInterfaces"/>
+	</wsdl:message>
+	<wsdl:message name="GetNetworkInterfacesResponse">
+		<wsdl:part name="parameters" element="tds:GetNetworkInterfacesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetNetworkInterfacesRequest">
+		<wsdl:part name="parameters" element="tds:SetNetworkInterfaces"/>
+	</wsdl:message>
+	<wsdl:message name="SetNetworkInterfacesResponse">
+		<wsdl:part name="parameters" element="tds:SetNetworkInterfacesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetNetworkProtocolsRequest">
+		<wsdl:part name="parameters" element="tds:GetNetworkProtocols"/>
+	</wsdl:message>
+	<wsdl:message name="GetNetworkProtocolsResponse">
+		<wsdl:part name="parameters" element="tds:GetNetworkProtocolsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetNetworkProtocolsRequest">
+		<wsdl:part name="parameters" element="tds:SetNetworkProtocols"/>
+	</wsdl:message>
+	<wsdl:message name="SetNetworkProtocolsResponse">
+		<wsdl:part name="parameters" element="tds:SetNetworkProtocolsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetNetworkDefaultGatewayRequest">
+		<wsdl:part name="parameters" element="tds:GetNetworkDefaultGateway"/>
+	</wsdl:message>
+	<wsdl:message name="GetNetworkDefaultGatewayResponse">
+		<wsdl:part name="parameters" element="tds:GetNetworkDefaultGatewayResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetNetworkDefaultGatewayRequest">
+		<wsdl:part name="parameters" element="tds:SetNetworkDefaultGateway"/>
+	</wsdl:message>
+	<wsdl:message name="SetNetworkDefaultGatewayResponse">
+		<wsdl:part name="parameters" element="tds:SetNetworkDefaultGatewayResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetZeroConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:GetZeroConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetZeroConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:GetZeroConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetZeroConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:SetZeroConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetZeroConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:SetZeroConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetIPAddressFilterRequest">
+		<wsdl:part name="parameters" element="tds:GetIPAddressFilter"/>
+	</wsdl:message>
+	<wsdl:message name="GetIPAddressFilterResponse">
+		<wsdl:part name="parameters" element="tds:GetIPAddressFilterResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetIPAddressFilterRequest">
+		<wsdl:part name="parameters" element="tds:SetIPAddressFilter"/>
+	</wsdl:message>
+	<wsdl:message name="SetIPAddressFilterResponse">
+		<wsdl:part name="parameters" element="tds:SetIPAddressFilterResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddIPAddressFilterRequest">
+		<wsdl:part name="parameters" element="tds:AddIPAddressFilter"/>
+	</wsdl:message>
+	<wsdl:message name="AddIPAddressFilterResponse">
+		<wsdl:part name="parameters" element="tds:AddIPAddressFilterResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveIPAddressFilterRequest">
+		<wsdl:part name="parameters" element="tds:RemoveIPAddressFilter"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveIPAddressFilterResponse">
+		<wsdl:part name="parameters" element="tds:RemoveIPAddressFilterResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAccessPolicyRequest">
+		<wsdl:part name="parameters" element="tds:GetAccessPolicy"/>
+	</wsdl:message>
+	<wsdl:message name="GetAccessPolicyResponse">
+		<wsdl:part name="parameters" element="tds:GetAccessPolicyResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetAccessPolicyRequest">
+		<wsdl:part name="parameters" element="tds:SetAccessPolicy"/>
+	</wsdl:message>
+	<wsdl:message name="SetAccessPolicyResponse">
+		<wsdl:part name="parameters" element="tds:SetAccessPolicyResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateCertificateRequest">
+		<wsdl:part name="parameters" element="tds:CreateCertificate"/>
+	</wsdl:message>
+	<wsdl:message name="CreateCertificateResponse">
+		<wsdl:part name="parameters" element="tds:CreateCertificateResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCertificatesRequest">
+		<wsdl:part name="parameters" element="tds:GetCertificates"/>
+	</wsdl:message>
+	<wsdl:message name="GetCertificatesResponse">
+		<wsdl:part name="parameters" element="tds:GetCertificatesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCertificatesStatusRequest">
+		<wsdl:part name="parameters" element="tds:GetCertificatesStatus"/>
+	</wsdl:message>
+	<wsdl:message name="GetCertificatesStatusResponse">
+		<wsdl:part name="parameters" element="tds:GetCertificatesStatusResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetCertificatesStatusRequest">
+		<wsdl:part name="parameters" element="tds:SetCertificatesStatus"/>
+	</wsdl:message>
+	<wsdl:message name="SetCertificatesStatusResponse">
+		<wsdl:part name="parameters" element="tds:SetCertificatesStatusResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteCertificatesRequest">
+		<wsdl:part name="parameters" element="tds:DeleteCertificates"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteCertificatesResponse">
+		<wsdl:part name="parameters" element="tds:DeleteCertificatesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetPkcs10RequestRequest">
+		<wsdl:part name="parameters" element="tds:GetPkcs10Request"/>
+	</wsdl:message>
+	<wsdl:message name="GetPkcs10RequestResponse">
+		<wsdl:part name="parameters" element="tds:GetPkcs10RequestResponse"/>
+	</wsdl:message>
+	<wsdl:message name="LoadCertificatesRequest">
+		<wsdl:part name="parameters" element="tds:LoadCertificates"/>
+	</wsdl:message>
+	<wsdl:message name="LoadCertificatesResponse">
+		<wsdl:part name="parameters" element="tds:LoadCertificatesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetClientCertificateModeRequest">
+		<wsdl:part name="parameters" element="tds:GetClientCertificateMode"/>
+	</wsdl:message>
+	<wsdl:message name="GetClientCertificateModeResponse">
+		<wsdl:part name="parameters" element="tds:GetClientCertificateModeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetClientCertificateModeRequest">
+		<wsdl:part name="parameters" element="tds:SetClientCertificateMode"/>
+	</wsdl:message>
+	<wsdl:message name="SetClientCertificateModeResponse">
+		<wsdl:part name="parameters" element="tds:SetClientCertificateModeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRelayOutputsRequest">
+		<wsdl:part name="parameters" element="tds:GetRelayOutputs"/>
+	</wsdl:message>
+	<wsdl:message name="GetRelayOutputsResponse">
+		<wsdl:part name="parameters" element="tds:GetRelayOutputsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetRelayOutputSettingsRequest">
+		<wsdl:part name="parameters" element="tds:SetRelayOutputSettings"/>
+	</wsdl:message>
+	<wsdl:message name="SetRelayOutputSettingsResponse">
+		<wsdl:part name="parameters" element="tds:SetRelayOutputSettingsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetRelayOutputStateRequest">
+		<wsdl:part name="parameters" element="tds:SetRelayOutputState"/>
+	</wsdl:message>
+	<wsdl:message name="SetRelayOutputStateResponse">
+		<wsdl:part name="parameters" element="tds:SetRelayOutputStateResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SendAuxiliaryCommandRequest">
+		<wsdl:part name="parameters" element="tds:SendAuxiliaryCommand"/>
+	</wsdl:message>
+	<wsdl:message name="SendAuxiliaryCommandResponse">
+		<wsdl:part name="parameters" element="tds:SendAuxiliaryCommandResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCACertificatesRequest">
+		<wsdl:part name="parameters" element="tds:GetCACertificates"/>
+	</wsdl:message>
+	<wsdl:message name="GetCACertificatesResponse">
+		<wsdl:part name="parameters" element="tds:GetCACertificatesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="LoadCertificateWithPrivateKeyRequest">
+		<wsdl:part name="parameters" element="tds:LoadCertificateWithPrivateKey"/>
+	</wsdl:message>
+	<wsdl:message name="LoadCertificateWithPrivateKeyResponse">
+		<wsdl:part name="parameters" element="tds:LoadCertificateWithPrivateKeyResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCertificateInformationRequest">
+		<wsdl:part name="parameters" element="tds:GetCertificateInformation"/>
+	</wsdl:message>
+	<wsdl:message name="GetCertificateInformationResponse">
+		<wsdl:part name="parameters" element="tds:GetCertificateInformationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="LoadCACertificatesRequest">
+		<wsdl:part name="parameters" element="tds:LoadCACertificates"/>
+	</wsdl:message>
+	<wsdl:message name="LoadCACertificatesResponse">
+		<wsdl:part name="parameters" element="tds:LoadCACertificatesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateDot1XConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:CreateDot1XConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="CreateDot1XConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:CreateDot1XConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetDot1XConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:SetDot1XConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetDot1XConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:SetDot1XConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDot1XConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:GetDot1XConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetDot1XConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:GetDot1XConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDot1XConfigurationsRequest">
+		<wsdl:part name="parameters" element="tds:GetDot1XConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetDot1XConfigurationsResponse">
+		<wsdl:part name="parameters" element="tds:GetDot1XConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteDot1XConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:DeleteDot1XConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteDot1XConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:DeleteDot1XConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDot11CapabilitiesRequest">
+		<wsdl:part name="parameters" element="tds:GetDot11Capabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetDot11CapabilitiesResponse">
+		<wsdl:part name="parameters" element="tds:GetDot11CapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDot11StatusRequest">
+		<wsdl:part name="parameters" element="tds:GetDot11Status"/>
+	</wsdl:message>
+	<wsdl:message name="GetDot11StatusResponse">
+		<wsdl:part name="parameters" element="tds:GetDot11StatusResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ScanAvailableDot11NetworksRequest">
+		<wsdl:part name="parameters" element="tds:ScanAvailableDot11Networks"/>
+	</wsdl:message>
+	<wsdl:message name="ScanAvailableDot11NetworksResponse">
+		<wsdl:part name="parameters" element="tds:ScanAvailableDot11NetworksResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemUrisRequest">
+		<wsdl:part name="parameters" element="tds:GetSystemUris"/>
+	</wsdl:message>
+	<wsdl:message name="GetSystemUrisResponse">
+		<wsdl:part name="parameters" element="tds:GetSystemUrisResponse"/>
+	</wsdl:message>
+	<wsdl:message name="StartFirmwareUpgradeRequest">
+		<wsdl:part name="parameters" element="tds:StartFirmwareUpgrade"/>
+	</wsdl:message>
+	<wsdl:message name="StartFirmwareUpgradeResponse">
+		<wsdl:part name="parameters" element="tds:StartFirmwareUpgradeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="StartSystemRestoreRequest">
+		<wsdl:part name="parameters" element="tds:StartSystemRestore"/>
+	</wsdl:message>
+	<wsdl:message name="StartSystemRestoreResponse">
+		<wsdl:part name="parameters" element="tds:StartSystemRestoreResponse"/>
+	</wsdl:message>
+	
+	<wsdl:message name="GetStorageConfigurationsRequest">
+		<wsdl:part name="parameters" element="tds:GetStorageConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetStorageConfigurationsResponse">
+		<wsdl:part name="parameters" element="tds:GetStorageConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateStorageConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:CreateStorageConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="CreateStorageConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:CreateStorageConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetStorageConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:GetStorageConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetStorageConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:GetStorageConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetStorageConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:SetStorageConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetStorageConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:SetStorageConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteStorageConfigurationRequest">
+		<wsdl:part name="parameters" element="tds:DeleteStorageConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteStorageConfigurationResponse">
+		<wsdl:part name="parameters" element="tds:DeleteStorageConfigurationResponse"/>
+	</wsdl:message>	
+	
+	<wsdl:message name="GetGeoLocationRequest">
+		<wsdl:part name="parameters" element="tds:GetGeoLocation"/>
+	</wsdl:message>
+	<wsdl:message name="GetGeoLocationResponse">
+		<wsdl:part name="parameters" element="tds:GetGeoLocationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetGeoLocationRequest">
+		<wsdl:part name="parameters" element="tds:SetGeoLocation"/>
+	</wsdl:message>
+	<wsdl:message name="SetGeoLocationResponse">
+		<wsdl:part name="parameters" element="tds:SetGeoLocationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteGeoLocationRequest">
+		<wsdl:part name="parameters" element="tds:DeleteGeoLocation"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteGeoLocationResponse">
+		<wsdl:part name="parameters" element="tds:DeleteGeoLocationResponse"/>
+	</wsdl:message>	
+	
+	<wsdl:portType name="Device">
+		<wsdl:operation name="GetServices">
+			<wsdl:documentation>Returns information about services on the device.</wsdl:documentation>
+			<wsdl:input message="tds:GetServicesRequest"/>
+			<wsdl:output message="tds:GetServicesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the device service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="tds:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="tds:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDeviceInformation">
+			<wsdl:documentation>This operation gets basic device information from the device.</wsdl:documentation>
+			<wsdl:input message="tds:GetDeviceInformationRequest"/>
+			<wsdl:output message="tds:GetDeviceInformationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetSystemDateAndTime">
+			<wsdl:documentation>This operation sets the device system date and time. The device shall support the
+				configuration of the daylight saving setting and of the manual system date and time (if
+				applicable) or indication of NTP time (if applicable) through the SetSystemDateAndTime
+				command. <br/>
+				If system time and date are set manually, the client shall include UTCDateTime in the request.<br/>
+				A TimeZone token which is not formed according to the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
+				The DayLightSavings flag should be set to true to activate any DST settings of the TimeZone string. 
+				Clear the DayLightSavings flag if the DST portion of the TimeZone settings should be ignored.
+			</wsdl:documentation>
+			<wsdl:input message="tds:SetSystemDateAndTimeRequest"/>
+			<wsdl:output message="tds:SetSystemDateAndTimeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemDateAndTime">
+			<wsdl:documentation>This operation gets the device system date and time. The device shall support the return of
+				the daylight saving setting and of the manual system date and time (if applicable) or indication
+				of NTP time (if applicable) through the GetSystemDateAndTime command.<br/>
+				A device shall provide the UTCDateTime information.</wsdl:documentation>
+			<wsdl:input message="tds:GetSystemDateAndTimeRequest"/>
+			<wsdl:output message="tds:GetSystemDateAndTimeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetSystemFactoryDefault">
+			<wsdl:documentation>This operation reloads the parameters on the device to their factory default values.</wsdl:documentation>
+			<wsdl:input message="tds:SetSystemFactoryDefaultRequest"/>
+			<wsdl:output message="tds:SetSystemFactoryDefaultResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="UpgradeSystemFirmware">
+			<wsdl:documentation>This operation upgrades a device firmware version. After a successful upgrade the response
+				message is sent before the device reboots. The device should support firmware upgrade
+				through the UpgradeSystemFirmware command. The exact format of the firmware data is
+				outside the scope of this standard.</wsdl:documentation>
+			<wsdl:input message="tds:UpgradeSystemFirmwareRequest"/>
+			<wsdl:output message="tds:UpgradeSystemFirmwareResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SystemReboot">
+			<wsdl:documentation>This operation reboots the device.</wsdl:documentation>
+			<wsdl:input message="tds:SystemRebootRequest"/>
+			<wsdl:output message="tds:SystemRebootResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RestoreSystem">
+			<wsdl:documentation>This operation restores the system backup configuration files(s) previously retrieved from a
+				device. The device should support restore of backup configuration file(s) through the
+				RestoreSystem command. The exact format of the backup configuration file(s) is outside the
+				scope of this standard. If the command is supported, it shall accept backup files returned by
+				the GetSystemBackup command.</wsdl:documentation>
+			<wsdl:input message="tds:RestoreSystemRequest"/>
+			<wsdl:output message="tds:RestoreSystemResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemBackup">
+			<wsdl:documentation>This operation is retrieves system backup configuration file(s) from a device. The device
+				should support return of back up configuration file(s) through the GetSystemBackup command.
+				The backup is returned with reference to a name and mime-type together with binary data.
+				The exact format of the backup configuration files is outside the scope of this standard.</wsdl:documentation>
+			<wsdl:input message="tds:GetSystemBackupRequest"/>
+			<wsdl:output message="tds:GetSystemBackupResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemLog">
+			<wsdl:documentation>This operation gets a system log from the device. The exact format of the system logs is outside the scope of this standard.</wsdl:documentation>
+			<wsdl:input message="tds:GetSystemLogRequest"/>
+			<wsdl:output message="tds:GetSystemLogResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemSupportInformation">
+			<wsdl:documentation>This operation gets arbitary device diagnostics information from the device.</wsdl:documentation>
+			<wsdl:input message="tds:GetSystemSupportInformationRequest"/>
+			<wsdl:output message="tds:GetSystemSupportInformationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetScopes">
+			<wsdl:documentation>This operation requests the scope parameters of a device. The scope parameters are used in
+				the device discovery to match a probe message, see Section 7. The Scope parameters are of
+				two different types: <ul>
+					<li>Fixed</li>
+					<li>Configurable</li>
+				</ul>
+				Fixed scope parameters are permanent device characteristics and cannot be removed through the device management interface. 
+				The scope type is indicated in the scope list returned in the get scope parameters response. A device shall support 
+				retrieval of discovery scope parameters through the GetScopes command. As some scope parameters are mandatory, 
+				the device shall return a non-empty scope list in the response.</wsdl:documentation>
+			<wsdl:input message="tds:GetScopesRequest"/>
+			<wsdl:output message="tds:GetScopesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetScopes">
+			<wsdl:documentation>This operation sets the scope parameters of a device. The scope parameters are used in the
+				device discovery to match a probe message.
+				This operation replaces all existing configurable scope parameters (not fixed parameters). If
+				this shall be avoided, one should use the scope add command instead. The device shall
+				support configuration of discovery scope parameters through the SetScopes command.</wsdl:documentation>
+			<wsdl:input message="tds:SetScopesRequest"/>
+			<wsdl:output message="tds:SetScopesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddScopes">
+			<wsdl:documentation>This operation adds new configurable scope parameters to a device. The scope parameters
+				are used in the device discovery to match a probe message. The device shall
+				support addition of discovery scope parameters through the AddScopes command.</wsdl:documentation>
+			<wsdl:input message="tds:AddScopesRequest"/>
+			<wsdl:output message="tds:AddScopesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveScopes">
+			<wsdl:documentation>This operation deletes scope-configurable scope parameters from a device. The scope
+				parameters are used in the device discovery to match a probe message, see Section 7. The
+				device shall support deletion of discovery scope parameters through the RemoveScopes
+				command.
+				Table</wsdl:documentation>
+			<wsdl:input message="tds:RemoveScopesRequest"/>
+			<wsdl:output message="tds:RemoveScopesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDiscoveryMode">
+			<wsdl:documentation>This operation gets the discovery mode of a device. See Section 7.2 for the definition of the
+				different device discovery modes. The device shall support retrieval of the discovery mode
+				setting through the GetDiscoveryMode command.</wsdl:documentation>
+			<wsdl:input message="tds:GetDiscoveryModeRequest"/>
+			<wsdl:output message="tds:GetDiscoveryModeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetDiscoveryMode">
+			<wsdl:documentation>This operation sets the discovery mode operation of a device. See Section 7.2 for the
+				definition of the different device discovery modes. The device shall support configuration of
+				the discovery mode setting through the SetDiscoveryMode command.</wsdl:documentation>
+			<wsdl:input message="tds:SetDiscoveryModeRequest"/>
+			<wsdl:output message="tds:SetDiscoveryModeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRemoteDiscoveryMode">
+			<wsdl:documentation>This operation gets the remote discovery mode of a device. See Section 7.4 for the definition
+				of remote discovery extensions. A device that supports remote discovery shall support
+				retrieval of the remote discovery mode setting through the GetRemoteDiscoveryMode
+				command.</wsdl:documentation>
+			<wsdl:input message="tds:GetRemoteDiscoveryModeRequest"/>
+			<wsdl:output message="tds:GetRemoteDiscoveryModeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetRemoteDiscoveryMode">
+			<wsdl:documentation>This operation sets the remote discovery mode of operation of a device. See Section 7.4 for
+				the definition of remote discovery remote extensions. A device that supports remote discovery
+				shall support configuration of the discovery mode setting through the
+				SetRemoteDiscoveryMode command.</wsdl:documentation>
+			<wsdl:input message="tds:SetRemoteDiscoveryModeRequest"/>
+			<wsdl:output message="tds:SetRemoteDiscoveryModeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDPAddresses">
+			<wsdl:documentation>This operation gets the remote DP address or addresses from a device. If the device supports
+				remote discovery, as specified in Section 7.4, the device shall support retrieval of the remote
+				DP address(es) through the GetDPAddresses command.</wsdl:documentation>
+			<wsdl:input message="tds:GetDPAddressesRequest"/>
+			<wsdl:output message="tds:GetDPAddressesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetDPAddresses">
+			<wsdl:documentation>This operation sets the remote DP address or addresses on a device. If the device supports
+				remote discovery, as specified in Section 7.4, the device shall support configuration of the
+				remote DP address(es) through the SetDPAddresses command.</wsdl:documentation>
+			<wsdl:input message="tds:SetDPAddressesRequest"/>
+			<wsdl:output message="tds:SetDPAddressesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetEndpointReference">
+			<wsdl:documentation>A client can ask for the device service endpoint reference address property that can be used
+				to derive the password equivalent for remote user operation. The device shall support the
+				GetEndpointReference command returning the address property of the device service
+				endpoint reference.</wsdl:documentation>
+			<wsdl:input message="tds:GetEndpointReferenceRequest"/>
+			<wsdl:output message="tds:GetEndpointReferenceResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRemoteUser">
+			<wsdl:documentation>This operation returns the configured remote user (if any). A device supporting remote user
+				handling shall support this operation. The user is only valid for the WS-UserToken profile or
+				as a HTTP / RTSP user.<br/>
+				The algorithm to use for deriving the password is described in section 5.12.2.1 of the core specification.</wsdl:documentation>
+			<wsdl:input message="tds:GetRemoteUserRequest"/>
+			<wsdl:output message="tds:GetRemoteUserResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetRemoteUser">
+			<wsdl:documentation>This operation sets the remote user. A device supporting remote user handling shall support this
+				operation. The user is only valid for the WS-UserToken profile or as a HTTP / RTSP user.<br/>
+				The password that is set shall always be the original (not derived) password.<br/>
+				If UseDerivedPassword is set password derivation shall be done by the device when connecting to a
+				remote device.The algorithm to use for deriving the password is described in section 5.12.2.1 of the core specification.<br/>
+				To remove the remote user SetRemoteUser should be called without the RemoteUser parameter.</wsdl:documentation>
+			<wsdl:input message="tds:SetRemoteUserRequest"/>
+			<wsdl:output message="tds:SetRemoteUserResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetUsers">
+			<wsdl:documentation>This operation lists the registered users and corresponding credentials on a device. The
+				device shall support retrieval of registered device users and their credentials for the user
+				token through the GetUsers command.</wsdl:documentation>
+			<wsdl:input message="tds:GetUsersRequest"/>
+			<wsdl:output message="tds:GetUsersResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateUsers">
+			<wsdl:documentation>This operation creates new device users and corresponding credentials on a device for authentication purposes. 
+				The device shall support creation of device users and their credentials through the CreateUsers
+				command. Either all users are created successfully or a fault message shall be returned
+				without creating any user.<br/>
+				ONVIF compliant devices are recommended to support password length of at least 28 bytes,
+				as clients may follow the password derivation mechanism which results in 'password
+				equivalent' of length 28 bytes, as described in section 3.1.2 of the ONVIF security white paper.</wsdl:documentation>
+			<wsdl:input message="tds:CreateUsersRequest"/>
+			<wsdl:output message="tds:CreateUsersResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteUsers">
+			<wsdl:documentation>This operation deletes users on a device. The device shall support deletion of device users and their credentials 
+				through the DeleteUsers command. A device may have one or more fixed users
+				that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a
+				fault message shall be returned and no users be deleted.</wsdl:documentation>
+			<wsdl:input message="tds:DeleteUsersRequest"/>
+			<wsdl:output message="tds:DeleteUsersResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetUser">
+			<wsdl:documentation>This operation updates the settings for one or several users on a device for authentication purposes.
+				The device shall support update of device users and their credentials through the SetUser command. 
+				Either all change requests are processed successfully or a fault message shall be returned and no change requests be processed.</wsdl:documentation>
+			<wsdl:input message="tds:SetUserRequest"/>
+			<wsdl:output message="tds:SetUserResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetWsdlUrl">
+			<wsdl:documentation>It is possible for an endpoint to request a URL that can be used to retrieve the complete
+				schema and WSDL definitions of a device. The command gives in return a URL entry point
+				where all the necessary product specific WSDL and schema definitions can be retrieved. The
+				device shall provide a URL for WSDL and schema download through the GetWsdlUrl command.</wsdl:documentation>
+			<wsdl:input message="tds:GetWsdlUrlRequest"/>
+			<wsdl:output message="tds:GetWsdlUrlResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCapabilities">
+			<wsdl:documentation>Any endpoint can ask for the capabilities of a device using the capability exchange request
+				response operation. The device shall indicate all its ONVIF compliant capabilities through the
+				GetCapabilities command.
+				The capability list includes references to the addresses (XAddr) of the service implementing
+				the interface operations in the category. Apart from the addresses, the
+				capabilities only reflect optional functions.</wsdl:documentation>
+			<wsdl:input message="tds:GetCapabilitiesRequest"/>
+			<wsdl:output message="tds:GetCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetHostname">
+			<wsdl:documentation>This operation is used by an endpoint to get the hostname from a device. The device shall
+				return its hostname configurations through the GetHostname command.</wsdl:documentation>
+			<wsdl:input message="tds:GetHostnameRequest"/>
+			<wsdl:output message="tds:GetHostnameResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetHostname">
+			<wsdl:documentation>This operation sets the hostname on a device. It shall be possible to set the device hostname
+				configurations through the SetHostname command.<br/>
+				A device shall accept string formated according to RFC 1123 section 2.1 or alternatively to RFC 952, 
+				other string shall be considered as invalid strings. 
+			</wsdl:documentation>
+			<wsdl:input message="tds:SetHostnameRequest"/>
+			<wsdl:output message="tds:SetHostnameResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetHostnameFromDHCP">
+			<wsdl:documentation>This operation controls whether the hostname is set manually or retrieved via DHCP.</wsdl:documentation>
+			<wsdl:input message="tds:SetHostnameFromDHCPRequest"/>
+			<wsdl:output message="tds:SetHostnameFromDHCPResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDNS">
+			<wsdl:documentation>This operation gets the DNS settings from a device. The device shall return its DNS
+				configurations through the GetDNS command.</wsdl:documentation>
+			<wsdl:input message="tds:GetDNSRequest"/>
+			<wsdl:output message="tds:GetDNSResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetDNS">
+			<wsdl:documentation>This operation sets the DNS settings on a device. It shall be possible to set the device DNS
+				configurations through the SetDNS command.</wsdl:documentation>
+			<wsdl:input message="tds:SetDNSRequest"/>
+			<wsdl:output message="tds:SetDNSResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetNTP">
+			<wsdl:documentation>This operation gets the NTP settings from a device. If the device supports NTP, it shall be
+				possible to get the NTP server settings through the GetNTP command.</wsdl:documentation>
+			<wsdl:input message="tds:GetNTPRequest"/>
+			<wsdl:output message="tds:GetNTPResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetNTP">
+			<wsdl:documentation>This operation sets the NTP settings on a device. If the device supports NTP, it shall be
+				possible to set the NTP server settings through the SetNTP command.<br/>
+				A device shall accept string formated according to RFC 1123 section 2.1 or alternatively to RFC 952, 
+				other string shall be considered as invalid strings. <br/>
+				Changes to the NTP server list will not affect the clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
+			</wsdl:documentation>
+			<wsdl:input message="tds:SetNTPRequest"/>
+			<wsdl:output message="tds:SetNTPResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDynamicDNS">
+			<wsdl:documentation>This operation gets the dynamic DNS settings from a device. If the device supports dynamic
+				DNS as specified in [RFC 2136] and [RFC 4702], it shall be possible to get the type, name
+				and TTL through the GetDynamicDNS command.</wsdl:documentation>
+			<wsdl:input message="tds:GetDynamicDNSRequest"/>
+			<wsdl:output message="tds:GetDynamicDNSResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetDynamicDNS">
+			<wsdl:documentation>This operation sets the dynamic DNS settings on a device. If the device supports dynamic
+				DNS as specified in [RFC 2136] and [RFC 4702], it shall be possible to set the type, name
+				and TTL through the SetDynamicDNS command.</wsdl:documentation>
+			<wsdl:input message="tds:SetDynamicDNSRequest"/>
+			<wsdl:output message="tds:SetDynamicDNSResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetNetworkInterfaces">
+			<wsdl:documentation>This operation gets the network interface configuration from a device. The device shall
+				support return of network interface configuration settings as defined by the NetworkInterface
+				type through the GetNetworkInterfaces command.</wsdl:documentation>
+			<wsdl:input message="tds:GetNetworkInterfacesRequest"/>
+			<wsdl:output message="tds:GetNetworkInterfacesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetNetworkInterfaces">
+			<wsdl:documentation>This operation sets the network interface configuration on a device. The device shall support
+				network configuration of supported network interfaces through the SetNetworkInterfaces
+				command.<br/>
+				For interoperability with a client unaware of the IEEE 802.11 extension a device shall retain
+				its IEEE 802.11 configuration if the IEEE 802.11 configuration element isn’t present in the
+				request.</wsdl:documentation>
+			<wsdl:input message="tds:SetNetworkInterfacesRequest"/>
+			<wsdl:output message="tds:SetNetworkInterfacesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetNetworkProtocols">
+			<wsdl:documentation>This operation gets defined network protocols from a device. The device shall support the
+				GetNetworkProtocols command returning configured network protocols.</wsdl:documentation>
+			<wsdl:input message="tds:GetNetworkProtocolsRequest"/>
+			<wsdl:output message="tds:GetNetworkProtocolsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetNetworkProtocols">
+			<wsdl:documentation>This operation configures defined network protocols on a device. The device shall support
+				configuration of defined network protocols through the SetNetworkProtocols command.</wsdl:documentation>
+			<wsdl:input message="tds:SetNetworkProtocolsRequest"/>
+			<wsdl:output message="tds:SetNetworkProtocolsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetNetworkDefaultGateway">
+			<wsdl:documentation>This operation gets the default gateway settings from a device. The device shall support the
+				GetNetworkDefaultGateway command returning configured default gateway address(es).</wsdl:documentation>
+			<wsdl:input message="tds:GetNetworkDefaultGatewayRequest"/>
+			<wsdl:output message="tds:GetNetworkDefaultGatewayResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetNetworkDefaultGateway">
+			<wsdl:documentation>This operation sets the default gateway settings on a device. The device shall support
+				configuration of default gateway through the SetNetworkDefaultGateway command.</wsdl:documentation>
+			<wsdl:input message="tds:SetNetworkDefaultGatewayRequest"/>
+			<wsdl:output message="tds:SetNetworkDefaultGatewayResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetZeroConfiguration">
+			<wsdl:documentation>This operation gets the zero-configuration from a device. If the device supports dynamic IP
+				configuration according to [RFC3927], it shall support the return of IPv4 zero configuration
+				address and status through the GetZeroConfiguration command.<br/>
+			Devices supporting zero configuration on more than one interface shall use the extension to list the additional interface settings.</wsdl:documentation>
+			<wsdl:input message="tds:GetZeroConfigurationRequest"/>
+			<wsdl:output message="tds:GetZeroConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetZeroConfiguration">
+			<wsdl:documentation>This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration is supported or not.</wsdl:documentation>
+			<wsdl:input message="tds:SetZeroConfigurationRequest"/>
+			<wsdl:output message="tds:SetZeroConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetIPAddressFilter">
+			<wsdl:documentation>This operation gets the IP address filter settings from a device. If the device supports device
+				access control based on IP filtering rules (denied or accepted ranges of IP addresses), the
+				device shall support the GetIPAddressFilter command.</wsdl:documentation>
+			<wsdl:input message="tds:GetIPAddressFilterRequest"/>
+			<wsdl:output message="tds:GetIPAddressFilterResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetIPAddressFilter">
+			<wsdl:documentation>This operation sets the IP address filter settings on a device. If the device supports device
+				access control based on IP filtering rules (denied or accepted ranges of IP addresses), the
+				device shall support configuration of IP filtering rules through the SetIPAddressFilter
+				command.</wsdl:documentation>
+			<wsdl:input message="tds:SetIPAddressFilterRequest"/>
+			<wsdl:output message="tds:SetIPAddressFilterResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddIPAddressFilter">
+			<wsdl:documentation>This operation adds an IP filter address to a device. If the device supports device access
+				control based on IP filtering rules (denied or accepted ranges of IP addresses), the device
+				shall support adding of IP filtering addresses through the AddIPAddressFilter command.</wsdl:documentation>
+			<wsdl:input message="tds:AddIPAddressFilterRequest"/>
+			<wsdl:output message="tds:AddIPAddressFilterResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveIPAddressFilter">
+			<wsdl:documentation>This operation deletes an IP filter address from a device. If the device supports device access
+				control based on IP filtering rules (denied or accepted ranges of IP addresses), the device
+				shall support deletion of IP filtering addresses through the RemoveIPAddressFilter command.</wsdl:documentation>
+			<wsdl:input message="tds:RemoveIPAddressFilterRequest"/>
+			<wsdl:output message="tds:RemoveIPAddressFilterResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAccessPolicy">
+			<wsdl:documentation>Access to different services and sub-sets of services should be subject to access control. The
+				WS-Security framework gives the prerequisite for end-point authentication. Authorization
+				decisions can then be taken using an access security policy. This standard does not mandate
+				any particular policy description format or security policy but this is up to the device
+				manufacturer or system provider to choose policy and policy description format of choice.
+				However, an access policy (in arbitrary format) can be requested using this command. If the
+				device supports access policy settings based on WS-Security authentication, then the device
+				shall support this command.</wsdl:documentation>
+			<wsdl:input message="tds:GetAccessPolicyRequest"/>
+			<wsdl:output message="tds:GetAccessPolicyResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetAccessPolicy">
+			<wsdl:documentation>This command sets the device access security policy (for more details on the access security
+				policy see the Get command). If the device supports access policy settings
+				based on WS-Security authentication, then the device shall support this command.</wsdl:documentation>
+			<wsdl:input message="tds:SetAccessPolicyRequest"/>
+			<wsdl:output message="tds:SetAccessPolicyResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateCertificate">
+			<wsdl:documentation>This operation generates a private/public key pair and also can create a self-signed device
+				certificate as a result of key pair generation. The certificate is created using a suitable
+				onboard key pair generation mechanism.<br/>
+				If a device supports onboard key pair generation, the device that supports TLS shall support
+				this certificate creation command. And also, if a device supports onboard key pair generation,
+				the device that support IEEE 802.1X shall support this command for the purpose of key pair
+				generation. Certificates and key pairs are identified using certificate IDs. These IDs are either
+				chosen by the certificate generation requester or by the device (in case that no ID value is
+				given).</wsdl:documentation>
+			<wsdl:input message="tds:CreateCertificateRequest"/>
+			<wsdl:output message="tds:CreateCertificateResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCertificates">
+			<wsdl:documentation>This operation gets all device server certificates (including self-signed) for the purpose of TLS
+				authentication and all device client certificates for the purpose of IEEE 802.1X authentication.
+				This command lists only the TLS server certificates and IEEE 802.1X client certificates for the
+				device (neither trusted CA certificates nor trusted root certificates). The certificates are
+				returned as binary data. A device that supports TLS shall support this command and the
+				certificates shall be encoded using ASN.1 [X.681], [X.682], [X.683] DER [X.690] encoding
+				rules.</wsdl:documentation>
+			<wsdl:input message="tds:GetCertificatesRequest"/>
+			<wsdl:output message="tds:GetCertificatesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCertificatesStatus">
+			<wsdl:documentation>This operation is specific to TLS functionality. This operation gets the status
+				(enabled/disabled) of the device TLS server certificates. A device that supports TLS shall
+				support this command.</wsdl:documentation>
+			<wsdl:input message="tds:GetCertificatesStatusRequest"/>
+			<wsdl:output message="tds:GetCertificatesStatusResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetCertificatesStatus">
+			<wsdl:documentation>This operation is specific to TLS functionality. This operation sets the status (enable/disable)
+				of the device TLS server certificates. A device that supports TLS shall support this command.
+				Typically only one device server certificate is allowed to be enabled at a time.</wsdl:documentation>
+			<wsdl:input message="tds:SetCertificatesStatusRequest"/>
+			<wsdl:output message="tds:SetCertificatesStatusResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteCertificates">
+			<wsdl:documentation>This operation deletes a certificate or multiple certificates. The device MAY also delete a
+				private/public key pair which is coupled with the certificate to be deleted. The device that
+				support either TLS or IEEE 802.1X shall support the deletion of a certificate or multiple
+				certificates through this command. Either all certificates are deleted successfully or a fault
+				message shall be returned without deleting any certificate.</wsdl:documentation>
+			<wsdl:input message="tds:DeleteCertificatesRequest"/>
+			<wsdl:output message="tds:DeleteCertificatesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetPkcs10Request">
+			<wsdl:documentation>This operation requests a PKCS #10 certificate signature request from the device. The
+				returned information field shall be either formatted exactly as specified in [PKCS#10] or PEM
+				encoded [PKCS#10] format. In order for this command to work, the device must already have
+				a private/public key pair. This key pair should be referred by CertificateID as specified in the
+				input parameter description. This CertificateID refers to the key pair generated using
+				CreateCertificate command.<br/>
+				A device that support onboard key pair generation that supports either TLS or IEEE 802.1X
+				using client certificate shall support this command.</wsdl:documentation>
+			<wsdl:input message="tds:GetPkcs10RequestRequest"/>
+			<wsdl:output message="tds:GetPkcs10RequestResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="LoadCertificates">
+			<wsdl:documentation>TLS server certificate(s) or IEEE 802.1X client certificate(s) created using the PKCS#10
+				certificate request command can be loaded into the device using this command (see Section
+				8.4.13). The certificate ID in the request shall be present. The device may sort the received
+				certificate(s) based on the public key and subject information in the certificate(s).
+				The certificate ID in the request will be the ID value the client wish to have. The device is
+				supposed to scan the generated key pairs present in the device to identify which is the
+				correspondent key pair with the loaded certificate and then make the link between the
+				certificate and the key pair.<br/>
+				A device that supports onboard key pair generation that support either TLS or IEEE 802.1X
+				shall support this command.<br/>
+				The certificates shall be encoded using ASN.1 [X.681], [X.682], [X.683] DER [X.690] encoding
+				rules.<br/>
+				This command is applicable to any device type, although the parameter name is called for
+				historical reasons NVTCertificate.</wsdl:documentation>
+			<wsdl:input message="tds:LoadCertificatesRequest"/>
+			<wsdl:output message="tds:LoadCertificatesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetClientCertificateMode">
+			<wsdl:documentation>This operation is specific to TLS functionality. This operation gets the status
+				(enabled/disabled) of the device TLS client authentication. A device that supports TLS shall
+				support this command.</wsdl:documentation>
+			<wsdl:input message="tds:GetClientCertificateModeRequest"/>
+			<wsdl:output message="tds:GetClientCertificateModeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetClientCertificateMode">
+			<wsdl:documentation>This operation is specific to TLS functionality. This operation sets the status
+				(enabled/disabled) of the device TLS client authentication. A device that supports TLS shall
+				support this command.</wsdl:documentation>
+			<wsdl:input message="tds:SetClientCertificateModeRequest"/>
+			<wsdl:output message="tds:SetClientCertificateModeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRelayOutputs">
+			<wsdl:documentation>This operation gets a list of all available relay outputs and their settings.<br/>
+				This method has been depricated with version 2.0. Refer to the DeviceIO service.</wsdl:documentation>
+			<wsdl:input message="tds:GetRelayOutputsRequest"/>
+			<wsdl:output message="tds:GetRelayOutputsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetRelayOutputSettings">
+			<wsdl:documentation>This operation sets the settings of a relay output.
+				<br/>This method has been depricated with version 2.0. Refer to the DeviceIO service.</wsdl:documentation>
+			<wsdl:input message="tds:SetRelayOutputSettingsRequest"/>
+			<wsdl:output message="tds:SetRelayOutputSettingsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetRelayOutputState">
+			<wsdl:documentation>This operation sets the state of a relay output.
+				<br/>This method has been depricated with version 2.0. Refer to the DeviceIO service.</wsdl:documentation>
+			<wsdl:input message="tds:SetRelayOutputStateRequest"/>
+			<wsdl:output message="tds:SetRelayOutputStateResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SendAuxiliaryCommand">
+			<wsdl:documentation>Manage auxiliary commands supported by a device, such as controlling an Infrared (IR) lamp, 
+				a heater or a wiper or a thermometer that is connected to the device.<br/>
+				The supported commands can be retrieved via the AuxiliaryCommands capability.<br/>
+				Although the name of the auxiliary commands can be freely defined, commands starting with the prefix tt: are 
+				reserved to define frequently used commands and these reserved commands shall all share the "tt:command|parameter" syntax.
+				<ul>
+					<li>tt:Wiper|On – Request to start the wiper.</li>
+					<li>tt:Wiper|Off – Request to stop the wiper.</li>
+					<li>tt:Washer|On – Request to start the washer.</li>
+					<li>tt:Washer|Off – Request to stop the washer.</li>
+					<li>tt:WashingProcedure|On – Request to start the washing procedure.</li>
+					<li>tt: WashingProcedure |Off – Request to stop the washing procedure.</li>
+					<li>tt:IRLamp|On – Request to turn ON an IR illuminator attached to the unit.</li>
+					<li>tt:IRLamp|Off – Request to turn OFF an IR illuminator attached to the unit.</li>
+					<li>tt:IRLamp|Auto – Request to configure an IR illuminator attached to the unit so that it automatically turns ON and OFF.</li>
+				</ul>
+				A device that indicates auxiliary service capability shall support this command.</wsdl:documentation>
+			<wsdl:input message="tds:SendAuxiliaryCommandRequest"/>
+			<wsdl:output message="tds:SendAuxiliaryCommandResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCACertificates">
+			<wsdl:documentation>CA certificates will be loaded into a device and be used for the sake of following two cases.
+				The one is for the purpose of TLS client authentication in TLS server function. The other one
+				is for the purpose of Authentication Server authentication in IEEE 802.1X function. This
+				operation gets all CA certificates loaded into a device. A device that supports either TLS client
+				authentication or IEEE 802.1X shall support this command and the returned certificates shall
+				be encoded using ASN.1 [X.681], [X.682], [X.683] DER [X.690] encoding rules.</wsdl:documentation>
+			<wsdl:input message="tds:GetCACertificatesRequest"/>
+			<wsdl:output message="tds:GetCACertificatesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="LoadCertificateWithPrivateKey">
+			<wsdl:documentation>There might be some cases that a Certificate Authority or some other equivalent creates a
+				certificate without having PKCS#10 certificate signing request. In such cases, the certificate
+				will be bundled in conjunction with its private key. This command will be used for such use
+				case scenarios. The certificate ID in the request is optionally set to the ID value the client
+				wish to have. If the certificate ID is not specified in the request, device can choose the ID
+				accordingly.<br/>
+				This operation imports a private/public key pair into the device.
+				The certificates shall be encoded using ASN.1 [X.681], [X.682], [X.683] DER [X.690] encoding
+				rules.<br/>
+				A device that does not support onboard key pair generation and support either TLS or IEEE
+				802.1X using client certificate shall support this command. A device that support onboard key
+				pair generation MAY support this command. The security policy of a device that supports this
+				operation should make sure that the private key is sufficiently protected.</wsdl:documentation>
+			<wsdl:input message="tds:LoadCertificateWithPrivateKeyRequest"/>
+			<wsdl:output message="tds:LoadCertificateWithPrivateKeyResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCertificateInformation">
+			<wsdl:documentation>This operation requests the information of a certificate specified by certificate ID. The device
+				should respond with its “Issuer DN”, “Subject DN”, “Key usage”, "Extended key usage”, “Key
+				Length”, “Version”, “Serial Number”, “Signature Algorithm” and “Validity” data as the
+				information of the certificate, as long as the device can retrieve such information from the
+				specified certificate.<br/>
+				A device that supports either TLS or IEEE 802.1X should support this command.</wsdl:documentation>
+			<wsdl:input message="tds:GetCertificateInformationRequest"/>
+			<wsdl:output message="tds:GetCertificateInformationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="LoadCACertificates">
+			<wsdl:documentation>This command is used when it is necessary to load trusted CA certificates or trusted root
+				certificates for the purpose of verification for its counterpart i.e. client certificate verification in
+				TLS function or server certificate verification in IEEE 802.1X function.<br/>
+				A device that support either TLS or IEEE 802.1X shall support this command. As for the
+				supported certificate format, either DER format or PEM format is possible to be used. But a
+				device that support this command shall support at least DER format as supported format type.
+				The device may sort the received certificate(s) based on the public key and subject
+				information in the certificate(s). Either all CA certificates are loaded successfully or a fault
+				message shall be returned without loading any CA certificate.</wsdl:documentation>
+			<wsdl:input message="tds:LoadCACertificatesRequest"/>
+			<wsdl:output message="tds:LoadCACertificatesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateDot1XConfiguration">
+			<wsdl:documentation>This operation newly creates IEEE 802.1X configuration parameter set of the device. The
+				device shall support this command if it supports IEEE 802.1X. If the device receives this
+				request with already existing configuration token (Dot1XConfigurationToken) specification, the
+				device should respond with 'ter:ReferenceToken ' error to indicate there is some configuration
+				conflict.</wsdl:documentation>
+			<wsdl:input message="tds:CreateDot1XConfigurationRequest"/>
+			<wsdl:output message="tds:CreateDot1XConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetDot1XConfiguration">
+			<wsdl:documentation>While the CreateDot1XConfiguration command is trying to create a new configuration
+				parameter set, this operation modifies existing IEEE 802.1X configuration parameter set of
+				the device. A device that support IEEE 802.1X shall support this command.</wsdl:documentation>
+			<wsdl:input message="tds:SetDot1XConfigurationRequest"/>
+			<wsdl:output message="tds:SetDot1XConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDot1XConfiguration">
+			<wsdl:documentation>This operation gets one IEEE 802.1X configuration parameter set from the device by
+				specifying the configuration token (Dot1XConfigurationToken).<br/>
+				A device that supports IEEE 802.1X shall support this command.
+				Regardless of whether the 802.1X method in the retrieved configuration has a password or
+				not, the device shall not include the Password element in the response.</wsdl:documentation>
+			<wsdl:input message="tds:GetDot1XConfigurationRequest"/>
+			<wsdl:output message="tds:GetDot1XConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDot1XConfigurations">
+			<wsdl:documentation>This operation gets all the existing IEEE 802.1X configuration parameter sets from the device.
+				The device shall respond with all the IEEE 802.1X configurations so that the client can get to
+				know how many IEEE 802.1X configurations are existing and how they are configured.<br/>
+				A device that support IEEE 802.1X shall support this command.<br/>
+				Regardless of whether the 802.1X method in the retrieved configuration has a password or
+				not, the device shall not include the Password element in the response.</wsdl:documentation>
+			<wsdl:input message="tds:GetDot1XConfigurationsRequest"/>
+			<wsdl:output message="tds:GetDot1XConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteDot1XConfiguration">
+			<wsdl:documentation>This operation deletes an IEEE 802.1X configuration parameter set from the device. Which
+				configuration should be deleted is specified by the 'Dot1XConfigurationToken' in the request.
+				A device that support IEEE 802.1X shall support this command.</wsdl:documentation>
+			<wsdl:input message="tds:DeleteDot1XConfigurationRequest"/>
+			<wsdl:output message="tds:DeleteDot1XConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDot11Capabilities">
+			<wsdl:documentation>This operation returns the IEEE802.11 capabilities. The device shall support
+				this operation.</wsdl:documentation>
+			<wsdl:input message="tds:GetDot11CapabilitiesRequest"/>
+			<wsdl:output message="tds:GetDot11CapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDot11Status">
+			<wsdl:documentation>This operation returns the status of a wireless network interface. The device shall support this
+				command.</wsdl:documentation>
+			<wsdl:input message="tds:GetDot11StatusRequest"/>
+			<wsdl:output message="tds:GetDot11StatusResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="ScanAvailableDot11Networks">
+			<wsdl:documentation>This operation returns a lists of the wireless networks in range of the device. A device should
+				support this operation.</wsdl:documentation>
+			<wsdl:input message="tds:ScanAvailableDot11NetworksRequest"/>
+			<wsdl:output message="tds:ScanAvailableDot11NetworksResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemUris">
+			<wsdl:documentation>This operation is used to retrieve URIs from which system information may be downloaded
+				using HTTP. URIs may be returned for the following system information:<br/>
+				System Logs. Multiple system logs may be returned, of different types. The exact format of
+				the system logs is outside the scope of this specification.<br/>
+				Support Information. This consists of arbitrary device diagnostics information from a device.
+				The exact format of the diagnostic information is outside the scope of this specification.<br/>
+				System Backup. The received file is a backup file that can be used to restore the current
+				device configuration at a later date. The exact format of the backup configuration file is
+				outside the scope of this specification.<br/>
+				If the device allows retrieval of system logs, support information or system backup data, it
+				should make them available via HTTP GET. If it does, it shall support the GetSystemUris
+				command.</wsdl:documentation>
+			<wsdl:input message="tds:GetSystemUrisRequest"/>
+			<wsdl:output message="tds:GetSystemUrisResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="StartFirmwareUpgrade">
+			<wsdl:documentation>This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
+				to the command includes an HTTP URL to which the upgrade file may be uploaded. The
+				actual upgrade takes place as soon as the HTTP POST operation has completed. The device
+				should support firmware upgrade through the StartFirmwareUpgrade command. The exact
+				format of the firmware data is outside the scope of this specification.
+				Firmware upgrade over HTTP may be achieved using the following steps:<ol>
+					<li>Client calls StartFirmwareUpgrade.</li>
+					<li>Server responds with upload URI and optional delay value.</li>
+					<li>Client waits for delay duration if specified by server.</li>
+					<li>Client transmits the firmware image to the upload URI using HTTP POST.</li>
+					<li>Server reprograms itself using the uploaded image, then reboots.</li>
+				</ol>
+				If the firmware upgrade fails because the upgrade file was invalid, the HTTP POST response
+				shall be “415 Unsupported Media Type”. If the firmware upgrade fails due to an error at the
+				device, the HTTP POST response shall be “500 Internal Server Error”.<br/>
+				The value of the Content-Type header in the HTTP POST request shall be “application/octetstream”.</wsdl:documentation>
+			<wsdl:input message="tds:StartFirmwareUpgradeRequest"/>
+			<wsdl:output message="tds:StartFirmwareUpgradeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="StartSystemRestore">
+			<wsdl:documentation>This operation initiates a system restore from backed up configuration data using the HTTP
+				POST mechanism. The response to the command includes an HTTP URL to which the backup
+				file may be uploaded. The actual restore takes place as soon as the HTTP POST operation
+				has completed. Devices should support system restore through the StartSystemRestore
+				command. The exact format of the backup configuration data is outside the scope of this
+				specification.<br/>
+				System restore over HTTP may be achieved using the following steps:<ol>
+					<li>Client calls StartSystemRestore.</li>
+					<li>Server responds with upload URI.</li>
+					<li>Client transmits the configuration data to the upload URI using HTTP POST.</li>
+					<li>Server applies the uploaded configuration, then reboots if necessary.</li>
+				</ol>
+				If the system restore fails because the uploaded file was invalid, the HTTP POST response
+				shall be “415 Unsupported Media Type”. If the system restore fails due to an error at the
+				device, the HTTP POST response shall be “500 Internal Server Error”.<br/>
+				The value of the Content-Type header in the HTTP POST request shall be “application/octetstream”.</wsdl:documentation>
+			<wsdl:input message="tds:StartSystemRestoreRequest"/>
+			<wsdl:output message="tds:StartSystemRestoreResponse"/>
+		</wsdl:operation>
+
+		<wsdl:operation name="GetStorageConfigurations">
+			<wsdl:documentation>
+			This operation lists all existing storage configurations for the device. 
+			</wsdl:documentation>
+			<wsdl:input message="tds:GetStorageConfigurationsRequest"/>
+			<wsdl:output message="tds:GetStorageConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateStorageConfiguration">
+			<wsdl:documentation>
+			This operation creates a new storage configuration. 
+			The configuration data shall be created in the device and shall be persistent (remain after reboot).
+			</wsdl:documentation>
+			<wsdl:input message="tds:CreateStorageConfigurationRequest"/>
+			<wsdl:output message="tds:CreateStorageConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetStorageConfiguration">
+			<wsdl:documentation>
+			This operation retrieves the Storage configuration associated with the given storage configuration token.
+			</wsdl:documentation>
+			<wsdl:input message="tds:GetStorageConfigurationRequest"/>
+			<wsdl:output message="tds:GetStorageConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetStorageConfiguration">
+			<wsdl:documentation>
+			This operation modifies an existing Storage configuration.
+			</wsdl:documentation>
+			<wsdl:input message="tds:SetStorageConfigurationRequest"/>
+			<wsdl:output message="tds:SetStorageConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteStorageConfiguration">
+			<wsdl:documentation>
+			This operation deletes the given storage configuration and configuration change shall always be persistent.
+			</wsdl:documentation>
+			<wsdl:input message="tds:DeleteStorageConfigurationRequest"/>
+			<wsdl:output message="tds:DeleteStorageConfigurationResponse"/>
+		</wsdl:operation>
+
+		<wsdl:operation name="GetGeoLocation">
+			<wsdl:documentation>
+				This operation lists all existing geo location configurations for the device. 
+			</wsdl:documentation>
+			<wsdl:input message="tds:GetGeoLocationRequest"/>
+			<wsdl:output message="tds:GetGeoLocationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetGeoLocation">
+			<wsdl:documentation>
+				This operation allows to modify one or more geo configuration entries.
+			</wsdl:documentation>
+			<wsdl:input message="tds:SetGeoLocationRequest"/>
+			<wsdl:output message="tds:SetGeoLocationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteGeoLocation">
+			<wsdl:documentation>
+				This operation deletes the given geo location entries.
+			</wsdl:documentation>
+			<wsdl:input message="tds:DeleteGeoLocationRequest"/>
+			<wsdl:output message="tds:DeleteGeoLocationResponse"/>
+		</wsdl:operation>
+		
+	</wsdl:portType>
+	<wsdl:binding name="DeviceBinding" type="tds:Device">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServices">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetServices"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDeviceInformation">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetSystemDateAndTime">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemDateAndTime">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetSystemFactoryDefault">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="UpgradeSystemFirmware">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SystemReboot">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SystemReboot"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="RestoreSystem">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/RestoreSystem"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemBackup">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemLog">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemLog"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemSupportInformation">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetScopes">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetScopes"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetScopes">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetScopes"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="AddScopes">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/AddScopes"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveScopes">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/RemoveScopes"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDiscoveryMode">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetDiscoveryMode">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRemoteDiscoveryMode">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetRemoteDiscoveryMode">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDPAddresses">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetEndpointReference">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRemoteUser">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetRemoteUser">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetUsers">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetUsers"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateUsers">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/CreateUsers"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteUsers">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/DeleteUsers"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetUser">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetUser"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetWsdlUrl">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetDPAddresses">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetHostname">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetHostname"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetHostname">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetHostname"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetHostnameFromDHCP">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDNS">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDNS"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetDNS">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDNS"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetNTP">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetNTP"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetNTP">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetNTP"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDynamicDNS">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetDynamicDNS">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetNetworkInterfaces">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetNetworkInterfaces">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetNetworkProtocols">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetNetworkProtocols">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetNetworkDefaultGateway">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetNetworkDefaultGateway">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetZeroConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetZeroConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetIPAddressFilter">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetIPAddressFilter">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="AddIPAddressFilter">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveIPAddressFilter">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAccessPolicy">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetAccessPolicy">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateCertificate">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/CreateCertificate"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCertificates">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCertificates"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCertificatesStatus">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetCertificatesStatus">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteCertificates">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetPkcs10Request">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="LoadCertificates">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/LoadCertificates"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetClientCertificateMode">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetClientCertificateMode">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRelayOutputs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetRelayOutputSettings">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetRelayOutputState">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SendAuxiliaryCommand">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCACertificates">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCACertificates"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="LoadCertificateWithPrivateKey">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCertificateInformation">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="LoadCACertificates">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateDot1XConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetDot1XConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDot1XConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDot1XConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteDot1XConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDot11Capabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDot11Status">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetDot11Status"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="ScanAvailableDot11Networks">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetSystemUris">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetSystemUris"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="StartFirmwareUpgrade">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="StartSystemRestore">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+
+		<wsdl:operation name="GetStorageConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateStorageConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetStorageConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetStorageConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteStorageConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+
+		<wsdl:operation name="GetGeoLocation">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetGeoLocation">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteGeoLocation">
+			<soap:operation soapAction="http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		
+		
+	</wsdl:binding>
+	<!--===============================-->
+	<!--===============================-->
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/deviceio.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/deviceio.wsdl
new file mode 100644
index 0000000..61e59d5
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/deviceio.wsdl
@@ -0,0 +1,1417 @@
+<?xml version="1.0" encoding="utf-8"?>
+<?xml-stylesheet type="text/xsl" href="../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2017 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tmd="http://www.onvif.org/ver10/deviceIO/wsdl" targetNamespace="http://www.onvif.org/ver10/deviceIO/wsdl">
+	<wsdl:import namespace="http://www.onvif.org/ver10/device/wsdl" location="../ver10/device/wsdl/devicemgmt.wsdl"/>
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/deviceIO/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="17.12">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../ver10/schema/onvif.xsd"/>
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tmd:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the device IO service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="VideoSources" type="xs:int" default="0">
+					<xs:annotation>
+						<xs:documentation>Number of video sources (defaults to none).</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="VideoOutputs" type="xs:int" default="0">
+					<xs:annotation>
+						<xs:documentation>Number of video outputs (defaults to none).</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="AudioSources" type="xs:int" default="0">
+					<xs:annotation>
+						<xs:documentation>Number of audio sources (defaults to none).</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="AudioOutputs" type="xs:int" default="0">
+					<xs:annotation>
+						<xs:documentation>Number of audio outputs (defaults to none).</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RelayOutputs" type="xs:int" default="0">
+					<xs:annotation>
+						<xs:documentation>Number of relay outputs (defaults to none).</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SerialPorts" type="xs:int" default="0">
+					<xs:annotation>
+						<xs:documentation>Number of serial ports (defaults to none).</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="DigitalInputs" type="xs:int" default="0">
+					<xs:annotation>
+						<xs:documentation>Number of digital inputs (defaults to none).</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="DigitalInputOptions" type="xs:boolean" default="false">
+					<xs:annotation>
+						<xs:documentation>Indicates support for DigitalInput configuration of the idle state (defaults to false).</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="tmd:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="GetRelayOutputOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RelayOutputToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>
+								Optional reference token to the relay for which the options are requested.
+							</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRelayOutputOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RelayOutputOptions" type="tmd:RelayOutputOptions" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+								Valid values and ranges for the configuration of a relay output.
+							</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:complexType name="RelayOutputOptions">
+				<xs:sequence>
+					<xs:element name="Mode" type="tt:RelayMode" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>Supported Modes.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DelayTimes" type="tmd:DelayTimes" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Supported delay time range or discrete values in seconds. This element must be present if MonoStable mode is supported.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Discrete" type="xs:boolean" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>True if the relay only supports the exact values for the DelayTimes listed. Default is false.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tmd:RelayOutputOptionsExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:attribute name="token" type="tt:ReferenceToken" use="required">
+					<xs:annotation>
+						<xs:documentation>Token of the relay output.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:complexType name="RelayOutputOptionsExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+			</xs:complexType>
+			<xs:simpleType name="DelayTimes">
+				<xs:list itemType="xs:float"/>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="Get">
+				<xs:sequence>
+				</xs:sequence>
+			</xs:complexType>
+			<xs:complexType name="GetResponse">
+				<xs:sequence>
+					<xs:element name="Token" type="tt:ReferenceToken" minOccurs="0" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>List tokens of a physical IO of a device.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+				</xs:sequence>
+			</xs:complexType>
+			<xs:element name="GetVideoSources" type="tmd:Get"/>
+			<xs:element name="GetVideoSourcesResponse" type="tmd:GetResponse"/>
+			<xs:element name="GetAudioSources" type="tmd:Get"/>
+			<xs:element name="GetAudioSourcesResponse" type="tmd:GetResponse"/>
+			<xs:element name="GetAudioOutputs" type="tmd:Get"/>
+			<xs:element name="GetAudioOutputsResponse" type="tmd:GetResponse"/>
+			<!--===============================-->
+			<xs:element name="GetVideoOutputs">
+				<xs:complexType>
+					<xs:sequence>
+				   </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoOutputsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutputs" type="tt:VideoOutput" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List containing all physical Video output connections of a device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested AudioSource.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioSourceConfiguration" type="tt:AudioSourceConfiguration">
+							<xs:annotation>
+								<xs:documentation>Current configuration of the Audio input.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioOutputConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioOutputToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the physical Audio output.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioOutputConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioOutputConfiguration" type="tt:AudioOutputConfiguration">
+							<xs:annotation>
+								<xs:documentation>Current configuration of the Audio output.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested VideoSource.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceConfiguration" type="tt:VideoSourceConfiguration">
+							<xs:annotation>
+								<xs:documentation>Current configuration of the Video input.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoOutputConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutputToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested VideoOutput.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoOutputConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutputConfiguration" type="tt:VideoOutputConfiguration">
+							<xs:annotation>
+								<xs:documentation>Current configuration of the Video output.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetAudioSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioSourceConfiguration"/>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element determines how configuration
+							changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
+							after reboot.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAudioSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetAudioOutputConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioOutputConfiguration"/>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element determines how configuration
+							changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
+							after reboot.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAudioOutputConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetVideoSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoSourceConfiguration"/>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element determines how configuration
+							changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
+							after reboot.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetVideoSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetVideoOutputConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoOutputConfiguration"/>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element determines how configuration
+							changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
+							after reboot.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetVideoOutputConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoSourceConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the Video input whose options are requested..</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoSourceConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceConfigurationOptions" type="tt:VideoSourceConfigurationOptions"/>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoOutputConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutputToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the Video Output whose options are requested..</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoOutputConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutputConfigurationOptions" type="tt:VideoOutputConfigurationOptions"/>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioSourceConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the physical Audio input whose options are requested..</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioSourceConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioSourceOptions" type="tt:AudioSourceConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation>Returns the AudioSourceToken available.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioOutputConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioOutputToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the physical Audio Output whose options are requested..</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioOutputConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioOutputOptions" type="tt:AudioOutputConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation>Available settings and ranges for the requested Audio output.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>   <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetRelayOutputSettings">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RelayOutput" type="tt:RelayOutput"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRelayOutputSettingsResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDigitalInputs">
+				<xs:annotation>
+					<xs:documentation>Get the available digital inputs of a device.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDigitalInputsResponse">
+				<xs:annotation>
+					<xs:documentation>Requested digital inputs.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DigitalInputs" type="tt:DigitalInput" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="DigitalInputConfigurationOptions">
+				<xs:sequence>
+					<xs:element name="IdleState" type="tt:DigitalIdleState" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>Configuration Options for a digital input.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:element name="GetDigitalInputConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Token" type="tt:ReferenceToken" minOccurs="0"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetDigitalInputConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DigitalInputOptions" type="tmd:DigitalInputConfigurationOptions"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetDigitalInputConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="DigitalInputs" type="tt:DigitalInput" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetDigitalInputConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSerialPorts">
+				<xs:annotation>
+					<xs:documentation>The physical serial port on the device that allows serial data to be read and written.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSerialPortsResponse">
+				<xs:annotation>
+					<xs:documentation>Requested serial ports.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SerialPort" type="tmd:SerialPort" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSerialPortConfiguration">
+				<xs:annotation>
+					<xs:documentation>Gets the configuration that relates to serial port configuration.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SerialPortToken" type="tt:ReferenceToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSerialPortConfigurationResponse">
+				<xs:annotation>
+					<xs:documentation>Requested serial port configuration.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SerialPortConfiguration" type="tmd:SerialPortConfiguration"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetSerialPortConfiguration">
+				<xs:annotation>
+					<xs:documentation>Sets the configuration that relates to serial port configuration.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SerialPortConfiguration" type="tmd:SerialPortConfiguration"/>
+						<xs:element name="ForcePersistance" type="xs:boolean"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetSerialPortConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSerialPortConfigurationOptions">
+				<xs:annotation>
+					<xs:documentation>Gets the configuration options that relates to serial port configuration.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SerialPortToken" type="tt:ReferenceToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSerialPortConfigurationOptionsResponse">
+				<xs:annotation>
+					<xs:documentation>Requested serial port configuration options.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SerialPortOptions" type="tmd:SerialPortConfigurationOptions"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SendReceiveSerialCommand">
+				<xs:annotation>
+					<xs:documentation>Transmitting arbitrary data to the connected serial device and then receiving its response data.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Token" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The physical serial port reference to be used when this request is invoked.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="SerialData" type="tmd:SerialData" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The serial port data.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="TimeOut" type="xs:duration" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Indicates that the command should be responded back within the specified period of time.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="DataLength" type="xs:integer" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>This element may be put in the case that data length returned from the connected serial device is already determined as some fixed bytes length. It indicates the length of received data which can be regarded as available.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Delimiter" type="xs:string" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>This element may be put in the case that the delimiter codes returned from the connected serial device is already known. It indicates the termination data sequence of the responded data. In case the string has more than one character a device shall interpret the whole string as a single delimiter. Furthermore a device shall return the delimiter character(s) to the client.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SendReceiveSerialCommandResponse">
+				<xs:annotation>
+					<xs:documentation>Receiving the response data.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SerialData" type="tmd:SerialData" minOccurs="0"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<!--==                Serial port types            ===-->
+			<!--===============================-->
+			<xs:complexType name="SerialData">
+				<xs:annotation>
+					<xs:documentation>The serial port data.</xs:documentation>
+				</xs:annotation>
+				<xs:choice>
+					<xs:element name="Binary" type="xs:base64Binary"/>
+					<xs:element name="String" type="xs:string"/>
+				</xs:choice>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="SerialPort">
+				<xs:annotation>
+					<xs:documentation>Lists all available serial ports of a device</xs:documentation>
+				</xs:annotation>
+				<xs:complexContent>
+					<xs:extension base="tt:DeviceEntity">
+						<xs:sequence>
+							<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+						</xs:sequence>
+						<xs:anyAttribute processContents="lax"/>
+					</xs:extension>
+				</xs:complexContent>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:simpleType name="SerialPortType">
+				<xs:annotation>
+					<xs:documentation>The type of serial port.Generic can be signaled as a vendor specific serial port type.</xs:documentation>
+				</xs:annotation>
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="RS232"/>
+					<xs:enumeration value="RS422HalfDuplex"/>
+					<xs:enumeration value="RS422FullDuplex"/>
+					<xs:enumeration value="RS485HalfDuplex"/>
+					<xs:enumeration value="RS485FullDuplex"/>
+					<xs:enumeration value="Generic"/>
+				</xs:restriction>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="SerialPortConfiguration">
+				<xs:annotation>
+					<xs:documentation>The parameters for configuring the serial port.</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="BaudRate" type="xs:int">
+						<xs:annotation>
+							<xs:documentation>The transfer bitrate.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="ParityBit" type="tmd:ParityBit">
+						<xs:annotation>
+							<xs:documentation>The parity for the data error detection.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="CharacterLength" type="xs:int">
+						<xs:annotation>
+							<xs:documentation>The bit length for each character.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="StopBit" type="xs:float">
+						<xs:annotation>
+							<xs:documentation>The number of stop bits used to terminate each character.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="token" type="tt:ReferenceToken" use="required"/>
+				<xs:attribute name="type" type="tmd:SerialPortType" use="required"/>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:simpleType name="ParityBit">
+				<xs:annotation>
+					<xs:documentation>The parity for the data error detection.</xs:documentation>
+				</xs:annotation>
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="None"/>
+					<xs:enumeration value="Even"/>
+					<xs:enumeration value="Odd"/>
+					<xs:enumeration value="Mark"/>
+					<xs:enumeration value="Space"/>
+					<xs:enumeration value="Extended"/>
+				</xs:restriction>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="SerialPortConfigurationOptions">
+				<xs:annotation>
+					<xs:documentation>The configuration options that relates to serial port.</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="BaudRateList" type="tt:IntList">
+						<xs:annotation>
+							<xs:documentation>The list of configurable transfer bitrate.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="ParityBitList" type="tmd:ParityBitList">
+						<xs:annotation>
+							<xs:documentation>The list of configurable parity for the data error detection.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="CharacterLengthList" type="tt:IntList">
+						<xs:annotation>
+							<xs:documentation>The list of configurable bit length for each character.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="StopBitList" type="tt:FloatList">
+						<xs:annotation>
+							<xs:documentation>The list of configurable number of stop bits used to terminate each character.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="token" type="tt:ReferenceToken" use="required"/>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="ParityBitList">
+				<xs:annotation>
+					<xs:documentation>The list of configurable parity for the data error detection.</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="Items" type="tmd:ParityBit" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+			</xs:complexType>
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tmd:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tmd:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRelayOutputOptionsRequest">
+		<wsdl:part name="parameters" element="tmd:GetRelayOutputOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetRelayOutputOptionsResponse">
+		<wsdl:part name="parameters" element="tmd:GetRelayOutputOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoOutputsRequest">
+		<wsdl:part name="parameters" element="tmd:GetVideoOutputs"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoOutputsResponse">
+		<wsdl:part name="parameters" element="tmd:GetVideoOutputsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputsRequest">
+		<wsdl:part name="parameters" element="tmd:GetAudioOutputs"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputsResponse">
+		<wsdl:part name="parameters" element="tmd:GetAudioOutputsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourcesRequest">
+		<wsdl:part name="parameters" element="tmd:GetVideoSources"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourcesResponse">
+		<wsdl:part name="parameters" element="tmd:GetVideoSourcesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourcesRequest">
+		<wsdl:part name="parameters" element="tmd:GetAudioSources"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourcesResponse">
+		<wsdl:part name="parameters" element="tmd:GetAudioSourcesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:GetVideoSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:GetVideoSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoOutputConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:GetVideoOutputConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoOutputConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:GetVideoOutputConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:GetAudioSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:GetAudioSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:GetAudioOutputConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:GetAudioOutputConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:SetVideoSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:SetVideoSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoOutputConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:SetVideoOutputConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoOutputConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:SetVideoOutputConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:SetAudioSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:SetAudioSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioOutputConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:SetAudioOutputConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioOutputConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:SetAudioOutputConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="tmd:GetVideoSourceConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="tmd:GetVideoSourceConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoOutputConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="tmd:GetVideoOutputConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoOutputConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="tmd:GetVideoOutputConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="tmd:GetAudioSourceConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="tmd:GetAudioSourceConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="tmd:GetAudioOutputConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="tmd:GetAudioOutputConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRelayOutputsRequest">
+		<wsdl:part name="parameters" element="tds:GetRelayOutputs"/>
+	</wsdl:message>
+	<wsdl:message name="GetRelayOutputsResponse">
+		<wsdl:part name="parameters" element="tds:GetRelayOutputsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetRelayOutputSettingsRequest">
+		<wsdl:part name="parameters" element="tmd:SetRelayOutputSettings"/>
+	</wsdl:message>
+	<wsdl:message name="SetRelayOutputSettingsResponse">
+		<wsdl:part name="parameters" element="tmd:SetRelayOutputSettingsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetRelayOutputStateRequest">
+		<wsdl:part name="parameters" element="tds:SetRelayOutputState"/>
+	</wsdl:message>
+	<wsdl:message name="SetRelayOutputStateResponse">
+		<wsdl:part name="parameters" element="tds:SetRelayOutputStateResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDigitalInputsRequest">
+		<wsdl:part name="parameters" element="tmd:GetDigitalInputs"/>
+	</wsdl:message>
+	<wsdl:message name="GetDigitalInputsResponse">
+		<wsdl:part name="parameters" element="tmd:GetDigitalInputsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDigitalInputConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="tmd:GetDigitalInputConfigurationOptions"/>
+	</wsdl:message>                                         
+	<wsdl:message name="GetDigitalInputConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="tmd:GetDigitalInputConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetDigitalInputConfigurationsRequest">
+		<wsdl:part name="parameters" element="tmd:SetDigitalInputConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="SetDigitalInputConfigurationsResponse">
+		<wsdl:part name="parameters" element="tmd:SetDigitalInputConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSerialPortsRequest">
+		<wsdl:part name="parameters" element="tmd:GetSerialPorts"/>
+	</wsdl:message>
+	<wsdl:message name="GetSerialPortsResponse">
+		<wsdl:part name="parameters" element="tmd:GetSerialPortsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSerialPortConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:GetSerialPortConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetSerialPortConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:GetSerialPortConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetSerialPortConfigurationRequest">
+		<wsdl:part name="parameters" element="tmd:SetSerialPortConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetSerialPortConfigurationResponse">
+		<wsdl:part name="parameters" element="tmd:SetSerialPortConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSerialPortConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="tmd:GetSerialPortConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetSerialPortConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="tmd:GetSerialPortConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SendReceiveSerialCommandRequest">
+		<wsdl:part name="parameters" element="tmd:SendReceiveSerialCommand"/>
+	</wsdl:message>
+	<wsdl:message name="SendReceiveSerialCommandResponse">
+		<wsdl:part name="parameters" element="tmd:SendReceiveSerialCommandResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="DeviceIOPort">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the device IO service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="tmd:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="tmd:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRelayOutputOptions">
+			<wsdl:documentation>Request the available settings and ranges for one or all relay outputs. A device that has one or more RelayOutputs should support this command.<br/>
+				Two examples that illustrate usage:
+				<ul>
+					<li>
+					1) Device supports range PT1S to PT120S:
+					<pre>
+&lt;tmd:RelayOutputOptions token=&apos;44&apos;&gt;
+  &lt;tmd:Mode&gt;Monostable&lt;/tmd:Mode&gt;
+  &lt;tmd:DelayTimes&gt;1 120&lt;/tmd:DelayTimes&gt;
+&lt;/tmd:RelayOutputOptions&gt;
+							</pre>
+					</li>
+					<li>
+					2) Device supports values PT0.5S, PT1S, PT2s and PT1M:
+					<pre>
+&lt;tmd:RelayOutputOptions token=&apos;123&apos;&gt;
+  &lt;tmd:Mode&gt;Monostable&lt;/tmd:Mode&gt;
+  &lt;tmd:DelayTimes&gt;0.5 1 2 60&lt;/tmd:DelayTimes&gt;
+  &lt;tmd:Discrete&gt;True&lt;/tmd:Discrete&gt;
+&lt;/tmd:RelayOutputOptions&gt;
+								</pre>
+					</li>
+				</ul>
+			</wsdl:documentation>
+			<wsdl:input message="tmd:GetRelayOutputOptionsRequest"/>
+			<wsdl:output message="tmd:GetRelayOutputOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSources">
+			<wsdl:documentation>List all available audio sources for the device. The device that has one or more audio sources shall support the listing of available audio inputs through the GetAudioSources command.</wsdl:documentation>
+			<wsdl:input message="tmd:GetAudioSourcesRequest"/>
+			<wsdl:output message="tmd:GetAudioSourcesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputs">
+			<wsdl:documentation>List all available audio outputs of a device. A device that has one ore more physical audio outputs shall support listing of available audio outputs through the GetAudioOutputs command.</wsdl:documentation>
+			<wsdl:input message="tmd:GetAudioOutputsRequest"/>
+			<wsdl:output message="tmd:GetAudioOutputsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoSources">
+			<wsdl:documentation>List all available video sources for the device. The device that has one or more video inputs shall support the listing of available video sources through the GetVideoSources command.</wsdl:documentation>
+			<wsdl:input message="tmd:GetVideoSourcesRequest"/>
+			<wsdl:output message="tmd:GetVideoSourcesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoOutputs">
+			<wsdl:documentation>List all available video outputs of a device. A device that has one or more physical video outputs shall support listing of available video outputs through the GetVideoOutputs command.</wsdl:documentation>
+			<wsdl:input message="tmd:GetVideoOutputsRequest"/>
+			<wsdl:output message="tmd:GetVideoOutputsResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceConfiguration">
+			<wsdl:documentation>Get the video source configurations of a VideoSource. A device with one or more video sources shall support the GetVideoSourceConfigurations command.<br/>This method is deprecated.</wsdl:documentation>
+			<wsdl:input message="tmd:GetVideoSourceConfigurationRequest"/>
+			<wsdl:output message="tmd:GetVideoSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoOutputConfiguration">
+			<wsdl:documentation>Get the configuration of a Video Output. A device that has one or more Video Outputs shall support the retrieval of the VideoOutputConfiguration through this command.</wsdl:documentation>
+			<wsdl:input message="tmd:GetVideoOutputConfigurationRequest"/>
+			<wsdl:output message="tmd:GetVideoOutputConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfiguration">
+			<wsdl:documentation>List the configuration of an Audio Input. A device with one or more audio inputs shall support the GetAudioSourceConfiguration command.<br/>This method is deprecated.</wsdl:documentation>
+			<wsdl:input message="tmd:GetAudioSourceConfigurationRequest"/>
+			<wsdl:output message="tmd:GetAudioSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfiguration">
+			<wsdl:documentation>Request the current configuration of a physical Audio output. A device that has one or more AudioOutputs shall support the retrieval of the AudioOutputConfiguration through this command.<br/>This method is deprecated.</wsdl:documentation>
+			<wsdl:input message="tmd:GetAudioOutputConfigurationRequest"/>
+			<wsdl:output message="tmd:GetAudioOutputConfigurationResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="SetVideoSourceConfiguration">
+			<wsdl:documentation>Modify a video input configuration. A device that has one or more video sources shall support the setting of the VideoSourceConfiguration through this command.<br/>This method is deprecated.</wsdl:documentation>
+			<wsdl:input message="tmd:SetVideoSourceConfigurationRequest"/>
+			<wsdl:output message="tmd:SetVideoSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetVideoOutputConfiguration">
+			<wsdl:documentation>Modify a video output configuration. A device that has one or more video outputs shall support the setting of its video output configuration through this command.</wsdl:documentation>
+			<wsdl:input message="tmd:SetVideoOutputConfigurationRequest"/>
+			<wsdl:output message="tmd:SetVideoOutputConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioSourceConfiguration">
+			<wsdl:documentation>Modify an audio source configuration. A device that has a one or more audio sources shall support the setting of the AudioSourceConfiguration through this command.<br/>This method is deprecated.</wsdl:documentation>
+			<wsdl:input message="tmd:SetAudioSourceConfigurationRequest"/>
+			<wsdl:output message="tmd:SetAudioSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioOutputConfiguration">
+			<wsdl:documentation>Modify an audio output configuration. A device that has one ore more audio outputs shall support the setting of the AudioOutputConfiguration through this command.<br/>This method is deprecated.</wsdl:documentation>
+			<wsdl:input message="tmd:SetAudioOutputConfigurationRequest"/>
+			<wsdl:output message="tmd:SetAudioOutputConfigurationResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceConfigurationOptions">
+			<wsdl:documentation>Request the VideoSourceConfigurationOptions of a VideoSource. A device with one or more video sources shall support this command.<br/>This method is deprecated.</wsdl:documentation>
+			<wsdl:input message="tmd:GetVideoSourceConfigurationOptionsRequest"/>
+			<wsdl:output message="tmd:GetVideoSourceConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoOutputConfigurationOptions">
+			<wsdl:documentation>Request the VideoOutputConfigurationOptions of a VideoOutput. A device that has one or more video outputs shall support the retrieval of VideoOutputConfigurationOptions through this command.</wsdl:documentation>
+			<wsdl:input message="tmd:GetVideoOutputConfigurationOptionsRequest"/>
+			<wsdl:output message="tmd:GetVideoOutputConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfigurationOptions">
+			<wsdl:documentation>Request the AudioSourceConfigurationOptions of an AudioSource. A device with one ore more AudioSources shall support this command.<br/>This method is deprecated.</wsdl:documentation>
+			<wsdl:input message="tmd:GetAudioSourceConfigurationOptionsRequest"/>
+			<wsdl:output message="tmd:GetAudioSourceConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfigurationOptions">
+			<wsdl:documentation>Request the available settings and ranges for a physical Audio output. A device that has one or more AudioOutputs shall support this command.<br/>This method is deprecated.</wsdl:documentation>
+			<wsdl:input message="tmd:GetAudioOutputConfigurationOptionsRequest"/>
+			<wsdl:output message="tmd:GetAudioOutputConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRelayOutputs">
+			<wsdl:documentation>This operation gets a list of all available relay outputs and their settings.</wsdl:documentation>
+			<wsdl:input message="tmd:GetRelayOutputsRequest"/>
+			<wsdl:output message="tmd:GetRelayOutputsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetRelayOutputSettings">
+			<wsdl:documentation>This operation sets the settings of a relay output.
+				The relay can work in two relay modes: <ul>
+					<li>
+				Bistable – After setting the state, the relay remains in this state.</li>
+					<li>
+				Monostable – After setting the state, the relay returns to its idle state after the
+				specified time.</li>
+				</ul>
+				The physical idle state of a relay output can be configured by setting the IdleState to ‘open’ or
+				‘closed’ (inversion of the relay behaviour).<br/>
+				Idle State ‘open’ means that the relay is open when the relay state is set to ‘inactive’ through
+				the trigger command (see Section 8.5.3) and closed when the state is set to ‘active’ through
+				the same command.<br/>
+				Idle State ‘closed’ means, that the relay is closed when the relay state is set to ‘inactive’
+				through the trigger command (see Section 8.5.3) and open when the state is set to ‘active’
+				through the same command.</wsdl:documentation>
+			<wsdl:input message="tmd:SetRelayOutputSettingsRequest"/>
+			<wsdl:output message="tmd:SetRelayOutputSettingsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetRelayOutputState">
+			<wsdl:documentation>Modify the relay state.</wsdl:documentation>
+			<wsdl:input message="tmd:SetRelayOutputStateRequest"/>
+			<wsdl:output message="tmd:SetRelayOutputStateResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDigitalInputs">
+			<wsdl:documentation>This operation gets a list of all available digital inputs.</wsdl:documentation>
+			<wsdl:input message="tmd:GetDigitalInputsRequest"/>
+			<wsdl:output message="tmd:GetDigitalInputsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDigitalInputConfigurationOptions">
+			<wsdl:documentation>This operation lists what configuration is available for digital inputs.</wsdl:documentation>
+			<wsdl:input message="tmd:GetDigitalInputConfigurationOptionsRequest"/>
+			<wsdl:output message="tmd:GetDigitalInputConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetDigitalInputConfigurations">
+			<wsdl:documentation>Modify a digital input configuration.</wsdl:documentation>
+			<wsdl:input message="tmd:SetDigitalInputConfigurationsRequest"/>
+			<wsdl:output message="tmd:SetDigitalInputConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSerialPorts">
+			<wsdl:input message="tmd:GetSerialPortsRequest"/>
+			<wsdl:output message="tmd:GetSerialPortsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSerialPortConfiguration">
+			<wsdl:input message="tmd:GetSerialPortConfigurationRequest"/>
+			<wsdl:output message="tmd:GetSerialPortConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetSerialPortConfiguration">
+			<wsdl:input message="tmd:SetSerialPortConfigurationRequest"/>
+			<wsdl:output message="tmd:SetSerialPortConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSerialPortConfigurationOptions">
+			<wsdl:input message="tmd:GetSerialPortConfigurationOptionsRequest"/>
+			<wsdl:output message="tmd:GetSerialPortConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SendReceiveSerialCommand">
+			<wsdl:input message="tmd:SendReceiveSerialCommandRequest"/>
+			<wsdl:output message="tmd:SendReceiveSerialCommandResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="DeviceIOBinding" type="tmd:DeviceIOPort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRelayOutputOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSources">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoSources">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoOutputs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoOutputConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="SetVideoSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetVideoOutputConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioOutputConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoOutputConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRelayOutputs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetRelayOutputSettings">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetRelayOutputState">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDigitalInputs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDigitalInputConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetDigitalInputConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetSerialPorts">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetSerialPortConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetSerialPortConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetSerialPortConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SendReceiveSerialCommand">
+			<soap:operation soapAction="http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/display.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/display.wsdl
new file mode 100644
index 0000000..29997fb
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/display.wsdl
@@ -0,0 +1,517 @@
+<?xml version="1.0" encoding="utf-8"?>
+<?xml-stylesheet type="text/xsl" href="../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2010 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tls="http://www.onvif.org/ver10/display/wsdl" targetNamespace="http://www.onvif.org/ver10/display/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/display/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="http://www.onvif.org/onvif/ver10/schema/onvif.xsd"/>
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tls:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the display service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="FixedLayout" type="xs:boolean"><xs:annotation><xs:documentation>Indication that the SetLayout command supports only predefined layouts.</xs:documentation></xs:annotation></xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="tls:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="GetLayout">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutput" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the Video Output whose Layout is requested</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetLayoutResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Layout" type="tt:Layout">
+							<xs:annotation>
+								<xs:documentation>Current layout of the video output.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetLayout">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutput" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the Video Output whose Layout shall be changed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Layout" type="tt:Layout">
+							<xs:annotation>
+								<xs:documentation>Layout to be set</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetLayoutResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDisplayOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutput" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the Video Output whose options are requested</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetDisplayOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="LayoutOptions" type="tt:LayoutOptions" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The LayoutOptions describe the fixed and predefined layouts of a device. If the device does
+not offer fixed layouts and allows setting the layout free this element is empty.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="CodingCapabilities" type="tt:CodingCapabilities">
+							<xs:annotation>
+								<xs:documentation>decoding and encoding capabilities of the device</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPaneConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutput" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference Token of the Video Output whose Pane Configurations are requested</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPaneConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PaneConfiguration" type="tt:PaneConfiguration" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of defined Panes of the specified VideoOutput. Each VideoOutput has at least one PaneConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPaneConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutput" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference Token of the Video Output the requested pane belongs to</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Pane" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference Token of the Pane whose Configuration is requested</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPaneConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PaneConfiguration" type="tt:PaneConfiguration">
+							<xs:annotation>
+								<xs:documentation>returns the configuration of the requested pane.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetPaneConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutput" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the video output whose panes to set.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PaneConfiguration" type="tt:PaneConfiguration" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Pane Configuration to be set.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetPaneConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetPaneConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutput" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the video output whose panes to set.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PaneConfiguration" type="tt:PaneConfiguration">
+							<xs:annotation>
+								<xs:documentation>Pane Configuration to be set.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetPaneConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreatePaneConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutput" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the video output where the pane shall be created.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PaneConfiguration" type="tt:PaneConfiguration">
+							<xs:annotation>
+								<xs:documentation>Configuration of the pane to be created.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreatePaneConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PaneToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the new pane configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeletePaneConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoOutput" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the video output where the pane shall be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PaneToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the pane to be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeletePaneConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tls:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tls:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetLayoutRequest">
+		<wsdl:part name="parameters" element="tls:GetLayout"/>
+	</wsdl:message>
+	<wsdl:message name="GetLayoutResponse">
+		<wsdl:part name="parameters" element="tls:GetLayoutResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetLayoutRequest">
+		<wsdl:part name="parameters" element="tls:SetLayout"/>
+	</wsdl:message>
+	<wsdl:message name="SetLayoutResponse">
+		<wsdl:part name="parameters" element="tls:SetLayoutResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetDisplayOptionsRequest">
+		<wsdl:part name="parameters" element="tls:GetDisplayOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetDisplayOptionsResponse">
+		<wsdl:part name="parameters" element="tls:GetDisplayOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetPaneConfigurationsRequest">
+		<wsdl:part name="parameters" element="tls:GetPaneConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetPaneConfigurationsResponse">
+		<wsdl:part name="parameters" element="tls:GetPaneConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetPaneConfigurationRequest">
+		<wsdl:part name="parameters" element="tls:GetPaneConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetPaneConfigurationResponse">
+		<wsdl:part name="parameters" element="tls:GetPaneConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetPaneConfigurationsRequest">
+		<wsdl:part name="parameters" element="tls:SetPaneConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="SetPaneConfigurationsResponse">
+		<wsdl:part name="parameters" element="tls:SetPaneConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetPaneConfigurationRequest">
+		<wsdl:part name="parameters" element="tls:SetPaneConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetPaneConfigurationResponse">
+		<wsdl:part name="parameters" element="tls:SetPaneConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreatePaneConfigurationRequest">
+		<wsdl:part name="parameters" element="tls:CreatePaneConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="CreatePaneConfigurationResponse">
+		<wsdl:part name="parameters" element="tls:CreatePaneConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeletePaneConfigurationRequest">
+		<wsdl:part name="parameters" element="tls:DeletePaneConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="DeletePaneConfigurationResponse">
+		<wsdl:part name="parameters" element="tls:DeletePaneConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="DisplayPort">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the display service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="tls:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="tls:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetLayout">
+			<wsdl:documentation>Return the current layout of a video output. The Layout assigns a pane configuration to a certain area of the display. The layout settings
+directly affect a specific video output. The layout consists of a list of PaneConfigurations and
+their associated display areas.</wsdl:documentation>
+			<wsdl:input message="tls:GetLayoutRequest"/>
+			<wsdl:output message="tls:GetLayoutResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetLayout">
+			<wsdl:documentation>Change the layout of a display (e.g. change from
+single view to split screen view).The Layout assigns a pane configuration to a certain area of the display. The layout settings
+directly affect a specific video output. The layout consists of a list of PaneConfigurations and
+their associated display areas.<br/>
+A device implementation shall be tolerant against rounding errors when matching a layout against its fixed set of layouts by accepting differences of at least one percent.
+</wsdl:documentation>
+			<wsdl:input message="tls:SetLayoutRequest"/>
+			<wsdl:output message="tls:SetLayoutResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetDisplayOptions">
+			<wsdl:documentation>The Display Options contain the supported layouts (LayoutOptions) and the decoding and
+encoding capabilities (CodingCapabilities) of the device. The GetDisplayOptions command
+returns both, Layout and Coding Capabilities, of a VideoOutput.</wsdl:documentation>
+			<wsdl:input message="tls:GetDisplayOptionsRequest"/>
+			<wsdl:output message="tls:GetDisplayOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetPaneConfigurations">
+			<wsdl:documentation>List all currently defined panes of a device for a specified video output
+(regardless if this pane is visible at a moment). A Pane is a display area on the monitor that is attached to a video output. A pane has a
+PaneConfiguration that describes which entities are associated with the pane. A client has to configure the pane according to the connection to be established by setting the
+AudioOutput and/or AudioSourceToken. If a Token is not set, the corresponding session will
+not be established.</wsdl:documentation>
+			<wsdl:input message="tls:GetPaneConfigurationsRequest"/>
+			<wsdl:output message="tls:GetPaneConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetPaneConfiguration">
+			<wsdl:documentation>Retrieve the pane configuration for a pane token.</wsdl:documentation>
+			<wsdl:input message="tls:GetPaneConfigurationRequest"/>
+			<wsdl:output message="tls:GetPaneConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetPaneConfigurations">
+			<wsdl:documentation>Modify one or more configurations of the specified video output. 
+			This method will only modify the provided configurations and leave the others unchanged. 
+			Use <a href="#op.DeletePaneConfiguration">DeletePaneConfiguration</a> to remove pane configurations.</wsdl:documentation>
+			<wsdl:input message="tls:SetPaneConfigurationsRequest"/>
+			<wsdl:output message="tls:SetPaneConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetPaneConfiguration">
+			<wsdl:documentation>This command changes the configuration of the specified pane (tbd)</wsdl:documentation>
+			<wsdl:input message="tls:SetPaneConfigurationRequest"/>
+			<wsdl:output message="tls:SetPaneConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreatePaneConfiguration">
+			<wsdl:documentation>Create a new pane configuration describing the streaming and coding settings for a display area.<br/>
+				This optional method is only supported by devices that signal support of dynamic pane creation via their capabilities.<br/>
+				The content of the Token field may be ignored by the device.
+			</wsdl:documentation>
+			<wsdl:input message="tls:CreatePaneConfigurationRequest"/>
+			<wsdl:output message="tls:CreatePaneConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeletePaneConfiguration">
+			<wsdl:documentation>Delete a pane configuration. A service must respond with an error if the pane configuration
+				is in use by the current layout.<br/>
+				This optional method is only supported by devices that signal support of dynamic pane creation via their capabilities. 
+			</wsdl:documentation>
+			<wsdl:input message="tls:DeletePaneConfigurationRequest"/>
+			<wsdl:output message="tls:DeletePaneConfigurationResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="DisplayBinding" type="tls:DisplayPort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetLayout">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/GetLayout"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetLayout">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/SetLayout"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetDisplayOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/GetDisplayOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetPaneConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurations"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetPaneConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/GetPaneConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetPaneConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurations"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetPaneConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/SetPaneConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreatePaneConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/CreatePaneConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeletePaneConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/display/wsdl/DeletePaneConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/event/wsdl/event.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/event/wsdl/event.wsdl
new file mode 100644
index 0000000..abca64f
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/event/wsdl/event.wsdl
@@ -0,0 +1,765 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xsl" href="../../../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Note that the location of the document has been changed to reflect the namespace. 
+Copyright (c) 2008-2018 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1" xmlns:wsntw="http://docs.oasis-open.org/wsn/bw-2" xmlns:tev="http://www.onvif.org/ver10/events/wsdl" xmlns:wsrf-rw="http://docs.oasis-open.org/wsrf/rw-2" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" targetNamespace="http://www.onvif.org/ver10/events/wsdl">
+	<wsdl:import namespace="http://docs.oasis-open.org/wsn/bw-2" location="http://docs.oasis-open.org/wsn/bw-2.wsdl"/>
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/events/wsdl" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" elementFormDefault="qualified" version="18.06">
+			<xs:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://www.w3.org/2005/08/addressing/ws-addr.xsd"/>
+			<xs:import namespace="http://docs.oasis-open.org/wsn/t-1" schemaLocation="http://docs.oasis-open.org/wsn/t-1.xsd"/>
+			<xs:import namespace="http://docs.oasis-open.org/wsn/b-2" schemaLocation="http://docs.oasis-open.org/wsn/b-2.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tev:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the event service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="WSSubscriptionPolicySupport" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates that the WS Subscription policy is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="WSPullPointSupport" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates that the WS Pull Point is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="WSPausableSubscriptionManagerInterfaceSupport" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates that the WS Pausable Subscription Manager Interface is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxNotificationProducers" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Maximum number of supported notification producers as defined by WS-BaseNotification.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxPullPoints" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Maximum supported number of notification pull points.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="PersistentNotificationStorage" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication if the device supports persistent notification storage.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="tev:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="CreatePullPointSubscription">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Filter" type="wsnt:FilterType" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional XPATH expression to select specific topics.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="InitialTerminationTime" type="wsnt:AbsoluteOrRelativeTimeType" nillable="true" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Initial termination time.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="SubscriptionPolicy" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a>.</xs:documentation>
+							</xs:annotation>
+							<xs:complexType>
+								<xs:sequence>
+									<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+								</xs:sequence>
+							</xs:complexType>
+						</xs:element>
+						<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreatePullPointSubscriptionResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SubscriptionReference" type="wsa:EndpointReferenceType">
+							<xs:annotation>
+								<xs:documentation>Endpoint reference of the subscription to be used for pulling the messages.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element ref="wsnt:CurrentTime">
+							<xs:annotation>
+								<xs:documentation>Current time of the server for synchronization purposes.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element ref="wsnt:TerminationTime">
+							<xs:annotation>
+								<xs:documentation>Date time when the PullPoint will be shut down without further pull requests.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="PullMessages">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Timeout" type="xs:duration">
+							<xs:annotation>
+								<xs:documentation>Maximum time to block until this method returns.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MessageLimit" type="xs:int">
+							<xs:annotation>
+								<xs:documentation>Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="PullMessagesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="CurrentTime" type="xs:dateTime">
+							<xs:annotation>
+								<xs:documentation>The date and time when the messages have been delivered by the web server to the client.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="TerminationTime" type="xs:dateTime">
+							<xs:annotation>
+								<xs:documentation>Date time when the PullPoint will be shut down without further pull requests.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element ref="wsnt:NotificationMessage" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of messages. This list shall be empty in case of a timeout.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="PullMessagesFaultResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="MaxTimeout" type="xs:duration">
+							<xs:annotation>
+								<xs:documentation>Maximum timeout supported by the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MaxMessageLimit" type="xs:int">
+							<xs:annotation>
+								<xs:documentation>Maximum message limit supported by the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="Seek">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="UtcTime" type="xs:dateTime"><xs:annotation><xs:documentation>The date and time to match against stored messages.</xs:documentation></xs:annotation></xs:element>
+						<xs:element name="Reverse" type="xs:boolean" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Reverse the pull direction of PullMessages.</xs:documentation></xs:annotation></xs:element>
+						<xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SeekResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetSynchronizationPoint">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetSynchronizationPointResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetEventProperties">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetEventPropertiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="TopicNamespaceLocation" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of topic namespaces supported.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element ref="wsnt:FixedTopicSet">
+							<xs:annotation>
+								<xs:documentation>True when topicset is fixed for all times.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element ref="wstop:TopicSet">
+							<xs:annotation>
+								<xs:documentation>Set of topics supported.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element ref="wsnt:TopicExpressionDialect" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+							Defines the XPath expression syntax supported for matching topic expressions. <br/>
+							The following TopicExpressionDialects are mandatory for an ONVIF compliant device :
+							<ul type="disc">
+										<li>http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete</li>
+										<li>http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet.</li>
+									</ul>
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MessageContentFilterDialect" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+						Defines the XPath function set supported for message content filtering.<br/> 
+						The following MessageContentFilterDialects should be returned if a device supports the message content filtering:
+							<ul type="disc">
+										<li>http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.</li>
+									</ul>
+						A device that does not support any MessageContentFilterDialect returns a single empty url.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ProducerPropertiesFilterDialect" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+						Optional ProducerPropertiesDialects. Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a> for advanced filtering.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MessageContentSchemaLocation" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>
+							The Message Content Description Language allows referencing
+							of vendor-specific types. In order to ease the integration of such types into a client application,
+							the GetEventPropertiesResponse shall list all URI locations to schema files whose types are
+							used in the description of notifications, with MessageContentSchemaLocation elements.<br/> 
+							This list shall at least contain the URI of the ONVIF schema file.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation/>
+							</xs:annotation>
+						</xs:any>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="SubscriptionPolicy">
+				<xs:annotation><xs:documentation>Optional ONVIF defined pull point subscription policies</xs:documentation></xs:annotation>
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="ChangedOnly" type="xs:boolean">
+					<xs:annotation><xs:documentation>The pullpoint should not provide Initialized nor Deleted events for Properties.</xs:documentation></xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tev:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tev:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreatePullPointSubscriptionRequest">
+		<wsdl:part name="parameters" element="tev:CreatePullPointSubscription"/>
+	</wsdl:message>
+	<wsdl:message name="CreatePullPointSubscriptionResponse">
+		<wsdl:part name="parameters" element="tev:CreatePullPointSubscriptionResponse"/>
+	</wsdl:message>
+	<wsdl:message name="PullMessagesRequest">
+		<wsdl:part name="parameters" element="tev:PullMessages"/>
+	</wsdl:message>
+	<wsdl:message name="PullMessagesResponse">
+		<wsdl:part name="parameters" element="tev:PullMessagesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="PullMessagesFaultResponse">
+		<wsdl:part name="parameters" element="tev:PullMessagesFaultResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SeekRequest">
+		<wsdl:part name="parameters" element="tev:Seek"/>
+	</wsdl:message>
+	<wsdl:message name="SeekResponse">
+		<wsdl:part name="parameters" element="tev:SeekResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetSynchronizationPointRequest">
+		<wsdl:part name="parameters" element="tev:SetSynchronizationPoint"/>
+	</wsdl:message>
+	<wsdl:message name="SetSynchronizationPointResponse">
+		<wsdl:part name="parameters" element="tev:SetSynchronizationPointResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetEventPropertiesRequest">
+		<wsdl:part name="parameters" element="tev:GetEventProperties"/>
+	</wsdl:message>
+	<wsdl:message name="GetEventPropertiesResponse">
+		<wsdl:part name="parameters" element="tev:GetEventPropertiesResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="EventPortType">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the event service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="tev:GetServiceCapabilitiesRequest" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="tev:GetServiceCapabilitiesResponse" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreatePullPointSubscription">
+			<wsdl:documentation>This method returns a PullPointSubscription that can be polled using PullMessages. 
+				This message contains the same elements as the SubscriptionRequest of the WS-BaseNotification without the ConsumerReference.<br/>
+				If no Filter is specified the pullpoint notifies all occurring events to the client.<br/>
+				This method is mandatory.</wsdl:documentation>
+			<wsdl:input message="tev:CreatePullPointSubscriptionRequest" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"/>
+			<wsdl:output message="tev:CreatePullPointSubscriptionResponse" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionResponse"/>
+			<wsdl:fault name="ResourceUnknownFault" message="wsrf-rw:ResourceUnknownFault"/>
+			<wsdl:fault name="InvalidFilterFault" message="wsntw:InvalidFilterFault"/>
+			<wsdl:fault name="TopicExpressionDialectUnknownFault" message="wsntw:TopicExpressionDialectUnknownFault"/>
+			<wsdl:fault name="InvalidTopicExpressionFault" message="wsntw:InvalidTopicExpressionFault"/>
+			<wsdl:fault name="TopicNotSupportedFault" message="wsntw:TopicNotSupportedFault"/>
+			<wsdl:fault name="InvalidProducerPropertiesExpressionFault" message="wsntw:InvalidProducerPropertiesExpressionFault"/>
+			<wsdl:fault name="InvalidMessageContentExpressionFault" message="wsntw:InvalidMessageContentExpressionFault"/>
+			<wsdl:fault name="UnacceptableInitialTerminationTimeFault" message="wsntw:UnacceptableInitialTerminationTimeFault"/>
+			<wsdl:fault name="UnrecognizedPolicyRequestFault" message="wsntw:UnrecognizedPolicyRequestFault"/>
+			<wsdl:fault name="UnsupportedPolicyRequestFault" message="wsntw:UnsupportedPolicyRequestFault"/>
+			<wsdl:fault name="NotifyMessageNotSupportedFault" message="wsntw:NotifyMessageNotSupportedFault"/>
+			<wsdl:fault name="SubscribeCreationFailedFault" message="wsntw:SubscribeCreationFailedFault"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetEventProperties">
+			<wsdl:documentation>The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
+				This specification does not require the implementation of the WS-ResourceProperty interface.
+				Instead, the subsequent direct interface shall be implemented by an ONVIF compliant device
+				in order to provide information about the FilterDialects, Schema files and topics supported by
+				the device.</wsdl:documentation>
+			<wsdl:input message="tev:GetEventPropertiesRequest" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"/>
+			<wsdl:output message="tev:GetEventPropertiesResponse" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:portType name="PullPointSubscription">
+		<wsdl:operation name="PullMessages">
+			<wsdl:documentation>
+				This method pulls one or more messages from a PullPoint.
+				The device shall provide the following PullMessages command for all SubscriptionManager
+				endpoints returned by the CreatePullPointSubscription command. This method shall not wait until
+				the requested number of messages is available but return as soon as at least one message is available.<br/>
+				The command shall at least support a Timeout of one minute. In case a device supports retrieval of less messages 
+				than requested it shall return these without generating a fault.</wsdl:documentation>
+			<wsdl:input message="tev:PullMessagesRequest" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"/>
+			<wsdl:output message="tev:PullMessagesResponse" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesResponse"/>
+			<wsdl:fault name="PullMessagesFaultResponse" message="tev:PullMessagesFaultResponse" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessages/Fault/PullMessagesFaultResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="Seek">
+			<wsdl:documentation>
+				This method readjusts the pull pointer into the past.
+				A device supporting persistent notification storage shall provide the
+				following Seek command for all SubscriptionManager endpoints returned by
+				the CreatePullPointSubscription command. The optional Reverse argument can
+				be used to reverse the pull direction of the PullMessages command.<br/>
+				The UtcTime argument will be matched against the UtcTime attribute on a
+				NotificationMessage.
+			</wsdl:documentation>
+			<wsdl:input message="tev:SeekRequest" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"/>
+			<wsdl:output message="tev:SeekResponse" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetSynchronizationPoint">
+			<wsdl:documentation>Properties inform a client about property creation, changes and
+				deletion in a uniform way. When a client wants to synchronize its properties with the
+				properties of the device, it can request a synchronization point which repeats the current
+				status of all properties to which a client has subscribed. The PropertyOperation of all
+				produced notifications is set to “Initialized”. The Synchronization Point is
+				requested directly from the SubscriptionManager which was returned in either the
+				SubscriptionResponse or in the CreatePullPointSubscriptionResponse. The property update is
+				transmitted via the notification transportation of the notification interface. This method is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="tev:SetSynchronizationPointRequest" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"/>
+			<wsdl:output message="tev:SetSynchronizationPointResponse" wsaw:Action="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="Unsubscribe">
+			<wsdl:documentation>The device shall provide the following Unsubscribe command for all SubscriptionManager endpoints returned by the CreatePullPointSubscription command.<br/>
+				This command shall terminate the lifetime of a pull point.
+			</wsdl:documentation>
+			<wsdl:input  name="UnsubscribeRequest" message="wsntw:UnsubscribeRequest" />
+			<wsdl:output name="UnsubscribeResponse" message="wsntw:UnsubscribeResponse" />
+			<wsdl:fault  name="ResourceUnknownFault" message="wsrf-rw:ResourceUnknownFault" />
+			<wsdl:fault  name="UnableToDestroySubscriptionFault" message="wsntw:UnableToDestroySubscriptionFault" /> 
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="PullPointSubscriptionBinding" type="tev:PullPointSubscription">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="PullMessages">
+			<soap:operation soapAction="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="PullMessagesFaultResponse">
+				<soap:fault name="PullMessagesFaultResponse" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+		<wsdl:operation name="Seek">
+			<soap:operation soapAction="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetSynchronizationPoint">
+			<soap:operation soapAction="http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="Unsubscribe">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"/>
+			<wsdl:input name="UnsubscribeRequest">
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output name="UnsubscribeResponse">
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnableToDestroySubscriptionFault">
+				<soap:fault name="UnableToDestroySubscriptionFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+	</wsdl:binding>
+	<wsdl:binding name="EventBinding" type="tev:EventPortType">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreatePullPointSubscription">
+			<soap:operation soapAction="http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="InvalidFilterFault">
+				<soap:fault name="InvalidFilterFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="TopicExpressionDialectUnknownFault">
+				<soap:fault name="TopicExpressionDialectUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="InvalidTopicExpressionFault">
+				<soap:fault name="InvalidTopicExpressionFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="TopicNotSupportedFault">
+				<soap:fault name="TopicNotSupportedFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="InvalidProducerPropertiesExpressionFault">
+				<soap:fault name="InvalidProducerPropertiesExpressionFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="InvalidMessageContentExpressionFault">
+				<soap:fault name="InvalidMessageContentExpressionFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnacceptableInitialTerminationTimeFault">
+				<soap:fault name="UnacceptableInitialTerminationTimeFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnrecognizedPolicyRequestFault">
+				<soap:fault name="UnrecognizedPolicyRequestFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnsupportedPolicyRequestFault">
+				<soap:fault name="UnsupportedPolicyRequestFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="NotifyMessageNotSupportedFault">
+				<soap:fault name="NotifyMessageNotSupportedFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="SubscribeCreationFailedFault">
+				<soap:fault name="SubscribeCreationFailedFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+		<wsdl:operation name="GetEventProperties">
+			<soap:operation soapAction="http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+	<wsdl:binding name="SubscriptionManagerBinding" type="wsntw:SubscriptionManager">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="Renew">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"/>
+			<wsdl:input name="RenewRequest">
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output name="RenewResponse">
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnacceptableTerminationTimeFault">
+				<soap:fault name="UnacceptableTerminationTimeFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+		<wsdl:operation name="Unsubscribe">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"/>
+			<wsdl:input name="UnsubscribeRequest">
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output name="UnsubscribeResponse">
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnableToDestroySubscriptionFault">
+				<soap:fault name="UnableToDestroySubscriptionFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+	</wsdl:binding>
+	<wsdl:binding name="NotificationProducerBinding" type="wsntw:NotificationProducer">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="Subscribe">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="InvalidFilterFault">
+				<soap:fault name="InvalidFilterFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="TopicExpressionDialectUnknownFault">
+				<soap:fault name="TopicExpressionDialectUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="InvalidTopicExpressionFault">
+				<soap:fault name="InvalidTopicExpressionFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="TopicNotSupportedFault">
+				<soap:fault name="TopicNotSupportedFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="InvalidProducerPropertiesExpressionFault">
+				<soap:fault name="InvalidProducerPropertiesExpressionFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="InvalidMessageContentExpressionFault">
+				<soap:fault name="InvalidMessageContentExpressionFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnacceptableInitialTerminationTimeFault">
+				<soap:fault name="UnacceptableInitialTerminationTimeFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnrecognizedPolicyRequestFault">
+				<soap:fault name="UnrecognizedPolicyRequestFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnsupportedPolicyRequestFault">
+				<soap:fault name="UnsupportedPolicyRequestFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="NotifyMessageNotSupportedFault">
+				<soap:fault name="NotifyMessageNotSupportedFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="SubscribeCreationFailedFault">
+				<soap:fault name="SubscribeCreationFailedFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+		<wsdl:operation name="GetCurrentMessage">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="TopicExpressionDialectUnknownFault">
+				<soap:fault name="TopicExpressionDialectUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="InvalidTopicExpressionFault">
+				<soap:fault name="InvalidTopicExpressionFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="TopicNotSupportedFault">
+				<soap:fault name="TopicNotSupportedFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="NoCurrentMessageOnTopicFault">
+				<soap:fault name="NoCurrentMessageOnTopicFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="MultipleTopicsSpecifiedFault">
+				<soap:fault name="MultipleTopicsSpecifiedFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+	</wsdl:binding>
+	<wsdl:binding name="NotificationConsumerBinding" type="wsntw:NotificationConsumer">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="Notify">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+		</wsdl:operation>
+	</wsdl:binding>
+	<wsdl:binding name="PullPointBinding" type="wsntw:PullPoint">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetMessages">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"/>
+			<wsdl:input name="GetMessagesRequest">
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output name="GetMessagesResponse">
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnableToGetMessagesFault">
+				<soap:fault name="UnableToGetMessagesFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+		<wsdl:operation name="DestroyPullPoint">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"/>
+			<wsdl:input name="DestroyPullPointRequest">
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output name="DestroyPullPointResponse">
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnableToDestroyPullPointFault">
+				<soap:fault name="UnableToDestroyPullPointFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+		<wsdl:operation name="Notify">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+		</wsdl:operation>
+	</wsdl:binding>
+	<wsdl:binding name="CreatePullPointBinding" type="wsntw:CreatePullPoint">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="CreatePullPoint">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"/>
+			<wsdl:input name="CreatePullPointRequest">
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output name="CreatePullPointResponse">
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="UnableToCreatePullPointFault">
+				<soap:fault name="UnableToCreatePullPointFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+	</wsdl:binding>
+	<wsdl:binding name="PausableSubscriptionManagerBinding" type="wsntw:PausableSubscriptionManager">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="Renew">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"/>
+			<wsdl:input name="RenewRequest">
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output name="RenewResponse">
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnacceptableTerminationTimeFault">
+				<soap:fault name="UnacceptableTerminationTimeFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+		<wsdl:operation name="Unsubscribe">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"/>
+			<wsdl:input name="UnsubscribeRequest">
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output name="UnsubscribeResponse">
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="UnableToDestroySubscriptionFault">
+				<soap:fault name="UnableToDestroySubscriptionFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+		<wsdl:operation name="PauseSubscription">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="PauseFailedFault">
+				<soap:fault name="PauseFailedFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+		<wsdl:operation name="ResumeSubscription">
+			<soap:operation soapAction="http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+			<wsdl:fault name="ResourceUnknownFault">
+				<soap:fault name="ResourceUnknownFault" use="literal"/>
+			</wsdl:fault>
+			<wsdl:fault name="ResumeFailedFault">
+				<soap:fault name="ResumeFailedFault" use="literal"/>
+			</wsdl:fault>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/media/wsdl/media.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/media/wsdl/media.wsdl
new file mode 100644
index 0000000..8489936
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/media/wsdl/media.wsdl
@@ -0,0 +1,3692 @@
+<?xml version="1.0" encoding="utf-8"?>
+<?xml-stylesheet type="text/xsl" href="../../../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2015 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:trt="http://www.onvif.org/ver10/media/wsdl" targetNamespace="http://www.onvif.org/ver10/media/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/media/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="17.06">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../../../ver10/schema/onvif.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="trt:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the media service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:element name="ProfileCapabilities" type="trt:ProfileCapabilities">
+						<xs:annotation>
+							<xs:documentation>Media profile capabilities.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="StreamingCapabilities" type="trt:StreamingCapabilities">
+						<xs:annotation>
+							<xs:documentation>Streaming capabilities.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="SnapshotUri" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates if GetSnapshotUri is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Rotation" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates whether or not Rotation feature is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="VideoSourceMode" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates the support for changing video source mode.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="OSD" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates if OSD is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="TemporaryOSDText" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates the support for temporary osd text configuration. </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="EXICompression" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates the support for the Efficient XML Interchange (EXI) binary XML format.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="trt:Capabilities"/>
+			<!--===============================-->
+			<xs:complexType name="ProfileCapabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="MaximumNumberOfProfiles" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Maximum number of profiles supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="StreamingCapabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="RTPMulticast" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for RTP multicast.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RTP_TCP" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for RTP over TCP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RTP_RTSP_TCP" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for RTP/RTSP/TCP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="NonAggregateControl" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for non aggregate RTSP control.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="NoRTSPStreaming" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation> Indicates the device does not support live media streaming via RTSP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:element name="GetVideoSources">
+				<xs:complexType>
+					<xs:sequence>
+				   </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoSourcesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSources" type="tt:VideoSource" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of existing Video Sources</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioSources">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioSourcesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioSources" type="tt:AudioSource" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of existing Audio Sources</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioOutputs">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioOutputsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AudioOutputs" type="tt:AudioOutput" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of existing Audio Outputs</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreateProfile">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Name" type="tt:Name">
+							<xs:annotation>
+								<xs:documentation>friendly name of the profile to be created</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Token" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateProfileResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Profile" type="tt:Profile">
+							<xs:annotation>
+								<xs:documentation>returns the new created profile</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetProfile">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>this command requests a specific profile</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetProfileResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Profile" type="tt:Profile">
+							<xs:annotation>
+								<xs:documentation>returns the requested media profile</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetProfiles">
+				<xs:complexType>
+					<xs:sequence>
+				
+      </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetProfilesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Profiles" type="tt:Profile" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>lists all profiles that exist in the media service </xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddVideoEncoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to the profile where the configuration should be added</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the VideoEncoderConfiguration to add</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddVideoEncoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+				   </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveVideoEncoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the media profile from which the
+VideoEncoderConfiguration shall be removed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveVideoEncoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+    </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddVideoSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to the profile where the configuration should be added</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the VideoSourceConfiguration to add</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddVideoSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveVideoSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the media profile from which the
+VideoSourceConfiguration shall be removed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveVideoSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddAudioEncoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to the profile where the configuration should be added</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the AudioEncoderConfiguration to add</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddAudioEncoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveAudioEncoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the media profile from which the
+AudioEncoderConfiguration shall be removed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveAudioEncoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddAudioSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to the profile where the configuration should be added</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the AudioSourceConfiguration to add</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddAudioSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveAudioSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the media profile from which the
+AudioSourceConfiguration shall be removed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveAudioSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddPTZConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to the profile where the configuration should be added</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the PTZConfiguration to add</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddPTZConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemovePTZConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the media profile from which the
+PTZConfiguration shall be removed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemovePTZConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddVideoAnalyticsConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to the profile where the configuration should be added</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the VideoAnalyticsConfiguration to add</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddVideoAnalyticsConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveVideoAnalyticsConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the media profile from which the
+VideoAnalyticsConfiguration shall be removed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveVideoAnalyticsConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddMetadataConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to the profile where the configuration should be added</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the MetadataConfiguration to add</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddMetadataConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveMetadataConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the media profile from which the
+MetadataConfiguration shall be removed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveMetadataConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddAudioOutputConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to the profile where the configuration should be added</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the AudioOutputConfiguration to add</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddAudioOutputConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+                   </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveAudioOutputConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a reference to the media profile from which the
+AudioOutputConfiguration shall be removed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveAudioOutputConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+                    </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AddAudioDecoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>This element contains a reference to the profile where the configuration should be added.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>This element contains a reference to the AudioDecoderConfiguration to add.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AddAudioDecoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+                    </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemoveAudioDecoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>This element contains a  reference to the media profile from which the AudioDecoderConfiguration shall be removed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemoveAudioDecoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+                    </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeleteProfile">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>This element contains a  reference to the profile that should be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteProfileResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<!--===============================-->
+			<!--===============================-->
+			<xs:element name="GetVideoEncoderConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+      </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoEncoderConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:VideoEncoderConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>This element contains a list of video encoder configurations.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoSourceConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoSourceConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:VideoSourceConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>This element contains a list of video source configurations.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioEncoderConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioEncoderConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:AudioEncoderConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>This element contains a list of audio encoder configurations.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioSourceConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+      </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioSourceConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:AudioSourceConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>This element contains a list of audio source configurations.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoAnalyticsConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+      </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoAnalyticsConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:VideoAnalyticsConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>This element contains a list of VideoAnalytics configurations.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetMetadataConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+      </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetMetadataConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:MetadataConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>This element contains a list of metadata configurations</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<!--===============================-->
+			<xs:element name="GetAudioOutputConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+				   </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioOutputConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:AudioOutputConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>This element contains a list of audio output configurations</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioDecoderConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+				   </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioDecoderConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:AudioDecoderConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>This element contains a list of audio decoder configurations</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested video source configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoSourceConfiguration">
+							<xs:annotation>
+								<xs:documentation>The requested video source configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoEncoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested video encoder configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoEncoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoEncoderConfiguration">
+							<xs:annotation>
+								<xs:documentation>The requested video encoder configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested audio source configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioSourceConfiguration">
+							<xs:annotation>
+								<xs:documentation>The requested audio source configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioEncoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested audio encoder configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioEncoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioEncoderConfiguration">
+							<xs:annotation>
+								<xs:documentation>The requested audio encoder configuration</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoAnalyticsConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested video analytics configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoAnalyticsConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoAnalyticsConfiguration">
+							<xs:annotation>
+								<xs:documentation>The requested video analytics configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetMetadataConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested metadata configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetMetadataConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:MetadataConfiguration">
+							<xs:annotation>
+								<xs:documentation>The requested metadata configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<!--===============================-->
+			<xs:element name="GetAudioOutputConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested audio output configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioOutputConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioOutputConfiguration">
+							<xs:annotation>
+								<xs:documentation>The requested audio output configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioDecoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested audio decoder configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioDecoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioDecoderConfiguration">
+							<xs:annotation>
+								<xs:documentation>The requested audio decoder configuration</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCompatibleVideoEncoderConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of an existing media profile the configurations shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCompatibleVideoEncoderConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:VideoEncoderConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of video encoder configurations that are compatible with the specified media profile.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCompatibleVideoSourceConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of an existing media profile the configurations shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCompatibleVideoSourceConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:VideoSourceConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of video source configurations that are compatible with the specified media profile.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCompatibleAudioEncoderConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of an existing media profile the configurations shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCompatibleAudioEncoderConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:AudioEncoderConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of audio encoder configurations that are compatible with the specified media profile.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCompatibleAudioSourceConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of an existing media profile the configurations shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCompatibleAudioSourceConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:AudioSourceConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of audio source configurations that are compatible with the specified media profile.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCompatibleVideoAnalyticsConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of an existing media profile the configurations shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCompatibleVideoAnalyticsConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:VideoAnalyticsConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of video analytics configurations that are compatible with the specified media profile.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCompatibleMetadataConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of an existing media profile the configurations shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCompatibleMetadataConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:MetadataConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of metadata configurations that are compatible with the specified media profile.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<!--===============================-->
+			<xs:element name="GetCompatibleAudioOutputConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of an existing media profile the configurations shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCompatibleAudioOutputConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:AudioOutputConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of audio output configurations that are compatible with the specified media profile.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCompatibleAudioDecoderConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of an existing media profile the configurations shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCompatibleAudioDecoderConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configurations" type="tt:AudioDecoderConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Contains a list of audio decoder configurations that are compatible with the specified media profile. </xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<!--===============================-->
+			<!--===============================-->
+			<!--===============================-->
+			<!--===============================-->
+			<!--===============================-->
+			<xs:element name="SetVideoEncoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoEncoderConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified video encoder configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element is obsolete and should always be assumed to be true.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetVideoEncoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetVideoSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoSourceConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified video source configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element is obsolete and should always be assumed to be true.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetVideoSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetAudioEncoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioEncoderConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified audio encoder configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element is obsolete and should always be assumed to be true.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAudioEncoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetAudioSourceConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioSourceConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified audio source configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element is obsolete and should always be assumed to be true.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAudioSourceConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetVideoAnalyticsConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:VideoAnalyticsConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified video analytics configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element is obsolete and should always be assumed to be true.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetVideoAnalyticsConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetMetadataConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:MetadataConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified metadata configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element is obsolete and should always be assumed to be true.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetMetadataConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<!--===============================-->
+			<xs:element name="SetAudioOutputConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioOutputConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified audio output configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element is obsolete and should always be assumed to be true.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAudioOutputConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+				   </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetAudioDecoderConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:AudioDecoderConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified audio decoder configuration. The configuration shall exist in the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The ForcePersistence element is obsolete and should always be assumed to be true.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetAudioDecoderConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+				   </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoSourceConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional video source configurationToken that specifies an existing configuration that the options are intended for.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoSourceConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="tt:VideoSourceConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation>This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetVideoEncoderConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional video encoder configuration token that specifies an existing configuration that the options are intended for.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoEncoderConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="tt:VideoEncoderConfigurationOptions"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioSourceConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional audio source configuration token that specifies an existing configuration that the options are intended for.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioSourceConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="tt:AudioSourceConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation>This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioEncoderConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional audio encoder configuration token that specifies an existing configuration that the options are intended for.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioEncoderConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="tt:AudioEncoderConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation>This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetMetadataConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional metadata configuration token that specifies an existing configuration that the options are intended for.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetMetadataConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="tt:MetadataConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation>This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioOutputConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional audio output configuration token that specifies an existing configuration that the options are intended for.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioOutputConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="tt:AudioOutputConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation>This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAudioDecoderConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAudioDecoderConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="tt:AudioDecoderConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation>This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetGuaranteedNumberOfVideoEncoderInstances">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the video source configuration</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetGuaranteedNumberOfVideoEncoderInstancesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="TotalNumber" type="xs:int">
+							<xs:annotation>
+								<xs:documentation>The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="JPEG" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="H264" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MPEG4" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetStreamUri">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StreamSetup" type="tt:StreamSetup">
+							<xs:annotation>
+								<xs:documentation>Stream Setup that should be used with the uri</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetStreamUriResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="MediaUri" type="tt:MediaUri">
+							<xs:annotation>
+								<xs:documentation/>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="StartMulticastStreaming">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of the Profile that is used to define the multicast stream.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="StartMulticastStreamingResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="StopMulticastStreaming">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of the Profile that is used to define the multicast stream.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="StopMulticastStreamingResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetSynchronizationPoint">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a Profile reference for which a Synchronization Point is requested.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetSynchronizationPointResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSnapshotUri">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSnapshotUriResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="MediaUri" type="tt:MediaUri">
+							<xs:annotation>
+								<xs:documentation/>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--================ Video Source Mode ===============-->
+			<xs:element name="GetVideoSourceModes">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a video source reference for which a video source mode is requested.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetVideoSourceModesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceModes" type="trt:VideoSourceMode" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Return the information for specified video source mode.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetVideoSourceMode">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains a video source reference for which a video source mode is requested.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="VideoSourceModeToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Indicate video source mode.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetVideoSourceModeResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Reboot" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:simpleType name="EncodingTypes">
+				<xs:annotation>
+					<xs:documentation>Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.</xs:documentation>
+				</xs:annotation>
+				<xs:list itemType="xs:string"/>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="VideoSourceMode"> 
+				<xs:sequence>
+					<xs:element name="MaxFramerate" type="xs:float">
+						<xs:annotation>
+							<xs:documentation>Max frame rate in frames per second for this video source mode.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="MaxResolution" type="tt:VideoResolution">
+						<xs:annotation>
+							<xs:documentation>Max horizontal and vertical resolution for this video source mode.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Encodings" type="trt:EncodingTypes">
+						<xs:annotation>
+							<xs:documentation>Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Reboot" type="xs:boolean">
+						<xs:annotation>
+							<xs:documentation>After setting the mode if a device starts to reboot this value is true. If a device change the mode without rebooting this value is false. If true, configured parameters may not be guaranteed by the device after rebooting.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Description" type="tt:Description" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Informative description of this video source mode. This field should be described in English.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="trt:VideoSourceModeExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:attribute name="token" type="tt:ReferenceToken" use="required">
+					<xs:annotation>
+						<xs:documentation>Indicate token for video source mode.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Enabled" type="xs:boolean"> 
+					<xs:annotation>
+						<xs:documentation>Indication of whether this mode is active. If active this value is true. In case of non-indication, it means as false. The value of true shall be had by only one video source mode.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="VideoSourceModeExtension"> 
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+			</xs:complexType>
+
+			<!--===============================-->
+			<!--============OSD Schema Begin================-->
+			<xs:element name="GetOSDs">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken" minOccurs="0" maxOccurs="1">
+							<xs:annotation>
+								<xs:documentation>Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetOSDsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OSDs" type="tt:OSDConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>This element contains a list of requested OSDs.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetOSD">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OSDToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>The GetOSD command fetches the OSD configuration if the OSD token is known.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetOSDResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OSD" type="tt:OSDConfiguration">
+							<xs:annotation>
+								<xs:documentation>The requested OSD configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetOSD">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OSD" type="tt:OSDConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contains the modified OSD configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetOSDResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetOSDOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetOSDOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OSDOptions" type="tt:OSDConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation/>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreateOSD">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OSD" type="tt:OSDConfiguration">
+							<xs:annotation>
+								<xs:documentation>Contain the initial OSD configuration for create.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateOSDResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OSDToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Returns Token of the newly created OSD</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeleteOSD">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OSDToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>This element contains a reference to the OSD configuration that should be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteOSDResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--============OSD Schema End================-->
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="trt:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="trt:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourcesRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoSources"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourcesResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoSourcesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourcesRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioSources"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourcesResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioSourcesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputsRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioOutputs"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputsResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioOutputsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateProfileRequest">
+		<wsdl:part name="parameters" element="trt:CreateProfile"/>
+	</wsdl:message>
+	<wsdl:message name="CreateProfileResponse">
+		<wsdl:part name="parameters" element="trt:CreateProfileResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetProfileRequest">
+		<wsdl:part name="parameters" element="trt:GetProfile"/>
+	</wsdl:message>
+	<wsdl:message name="GetProfileResponse">
+		<wsdl:part name="parameters" element="trt:GetProfileResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetProfilesRequest">
+		<wsdl:part name="parameters" element="trt:GetProfiles"/>
+	</wsdl:message>
+	<wsdl:message name="GetProfilesResponse">
+		<wsdl:part name="parameters" element="trt:GetProfilesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddVideoEncoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:AddVideoEncoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="AddVideoEncoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:AddVideoEncoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveVideoEncoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:RemoveVideoEncoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveVideoEncoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:RemoveVideoEncoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddVideoSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:AddVideoSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="AddVideoSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:AddVideoSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveVideoSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:RemoveVideoSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveVideoSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:RemoveVideoSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddAudioEncoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:AddAudioEncoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="AddAudioEncoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:AddAudioEncoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveAudioEncoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:RemoveAudioEncoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveAudioEncoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:RemoveAudioEncoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddAudioSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:AddAudioSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="AddAudioSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:AddAudioSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveAudioSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:RemoveAudioSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveAudioSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:RemoveAudioSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddPTZConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:AddPTZConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="AddPTZConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:AddPTZConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemovePTZConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:RemovePTZConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="RemovePTZConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:RemovePTZConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddVideoAnalyticsConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:AddVideoAnalyticsConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="AddVideoAnalyticsConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:AddVideoAnalyticsConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveVideoAnalyticsConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:RemoveVideoAnalyticsConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveVideoAnalyticsConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:RemoveVideoAnalyticsConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddMetadataConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:AddMetadataConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="AddMetadataConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:AddMetadataConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveMetadataConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:RemoveMetadataConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveMetadataConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:RemoveMetadataConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddAudioOutputConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:AddAudioOutputConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="AddAudioOutputConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:AddAudioOutputConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveAudioOutputConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:RemoveAudioOutputConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveAudioOutputConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:RemoveAudioOutputConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AddAudioDecoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:AddAudioDecoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="AddAudioDecoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:AddAudioDecoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveAudioDecoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:RemoveAudioDecoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="RemoveAudioDecoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:RemoveAudioDecoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteProfileRequest">
+		<wsdl:part name="parameters" element="trt:DeleteProfile"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteProfileResponse">
+		<wsdl:part name="parameters" element="trt:DeleteProfileResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoSourceConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoSourceConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoEncoderConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoEncoderConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoEncoderConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoEncoderConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioSourceConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioSourceConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioEncoderConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioEncoderConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioEncoderConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioEncoderConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoAnalyticsConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoAnalyticsConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoAnalyticsConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoAnalyticsConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetMetadataConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetMetadataConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetMetadataConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetMetadataConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioOutputConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioOutputConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioDecoderConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioDecoderConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioDecoderConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioDecoderConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoEncoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoEncoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoEncoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoEncoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioEncoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioEncoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioEncoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioEncoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoAnalyticsConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoAnalyticsConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoAnalyticsConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoAnalyticsConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetMetadataConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:GetMetadataConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetMetadataConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:GetMetadataConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioOutputConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioOutputConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioDecoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioDecoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioDecoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioDecoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleVideoEncoderConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetCompatibleVideoEncoderConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleVideoEncoderConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetCompatibleVideoEncoderConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleVideoSourceConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetCompatibleVideoSourceConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleVideoSourceConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetCompatibleVideoSourceConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleAudioEncoderConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetCompatibleAudioEncoderConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleAudioEncoderConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetCompatibleAudioEncoderConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleAudioSourceConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetCompatibleAudioSourceConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleAudioSourceConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetCompatibleAudioSourceConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleVideoAnalyticsConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetCompatibleVideoAnalyticsConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleVideoAnalyticsConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetCompatibleVideoAnalyticsConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleMetadataConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetCompatibleMetadataConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleMetadataConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetCompatibleMetadataConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleAudioOutputConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetCompatibleAudioOutputConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleAudioOutputConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetCompatibleAudioOutputConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleAudioDecoderConfigurationsRequest">
+		<wsdl:part name="parameters" element="trt:GetCompatibleAudioDecoderConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleAudioDecoderConfigurationsResponse">
+		<wsdl:part name="parameters" element="trt:GetCompatibleAudioDecoderConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:SetVideoSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:SetVideoSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoEncoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:SetVideoEncoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoEncoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:SetVideoEncoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioSourceConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:SetAudioSourceConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioSourceConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:SetAudioSourceConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioEncoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:SetAudioEncoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioEncoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:SetAudioEncoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoAnalyticsConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:SetVideoAnalyticsConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoAnalyticsConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:SetVideoAnalyticsConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetMetadataConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:SetMetadataConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetMetadataConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:SetMetadataConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioOutputConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:SetAudioOutputConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioOutputConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:SetAudioOutputConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioDecoderConfigurationRequest">
+		<wsdl:part name="parameters" element="trt:SetAudioDecoderConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetAudioDecoderConfigurationResponse">
+		<wsdl:part name="parameters" element="trt:SetAudioDecoderConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoSourceConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoSourceConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoEncoderConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoEncoderConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoEncoderConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoEncoderConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioSourceConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioSourceConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioSourceConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioEncoderConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioEncoderConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioEncoderConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioEncoderConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetMetadataConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="trt:GetMetadataConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetMetadataConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="trt:GetMetadataConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioOutputConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioOutputConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioOutputConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioDecoderConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="trt:GetAudioDecoderConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetAudioDecoderConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="trt:GetAudioDecoderConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetGuaranteedNumberOfVideoEncoderInstancesRequest">
+		<wsdl:part name="parameters" element="trt:GetGuaranteedNumberOfVideoEncoderInstances"/>
+	</wsdl:message>
+	<wsdl:message name="GetGuaranteedNumberOfVideoEncoderInstancesResponse">
+		<wsdl:part name="parameters" element="trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetStreamUriRequest">
+		<wsdl:part name="parameters" element="trt:GetStreamUri"/>
+	</wsdl:message>
+	<wsdl:message name="GetStreamUriResponse">
+		<wsdl:part name="parameters" element="trt:GetStreamUriResponse"/>
+	</wsdl:message>
+	<wsdl:message name="StartMulticastStreamingRequest">
+		<wsdl:part name="parameters" element="trt:StartMulticastStreaming"/>
+	</wsdl:message>
+	<wsdl:message name="StartMulticastStreamingResponse">
+		<wsdl:part name="parameters" element="trt:StartMulticastStreamingResponse"/>
+	</wsdl:message>
+	<wsdl:message name="StopMulticastStreamingRequest">
+		<wsdl:part name="parameters" element="trt:StopMulticastStreaming"/>
+	</wsdl:message>
+	<wsdl:message name="StopMulticastStreamingResponse">
+		<wsdl:part name="parameters" element="trt:StopMulticastStreamingResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetSynchronizationPointRequest">
+		<wsdl:part name="parameters" element="trt:SetSynchronizationPoint"/>
+	</wsdl:message>
+	<wsdl:message name="SetSynchronizationPointResponse">
+		<wsdl:part name="parameters" element="trt:SetSynchronizationPointResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSnapshotUriRequest">
+		<wsdl:part name="parameters" element="trt:GetSnapshotUri"/>
+	</wsdl:message>
+	<wsdl:message name="GetSnapshotUriResponse">
+		<wsdl:part name="parameters" element="trt:GetSnapshotUriResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceModesRequest">
+		<wsdl:part name="parameters" element="trt:GetVideoSourceModes"/>
+	</wsdl:message>
+	<wsdl:message name="GetVideoSourceModesResponse">
+		<wsdl:part name="parameters" element="trt:GetVideoSourceModesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoSourceModeRequest">
+		<wsdl:part name="parameters" element="trt:SetVideoSourceMode"/>
+	</wsdl:message>
+	<wsdl:message name="SetVideoSourceModeResponse">
+		<wsdl:part name="parameters" element="trt:SetVideoSourceModeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetOSDsRequest">
+		<wsdl:part name="parameters" element="trt:GetOSDs"/>
+	</wsdl:message>
+	<wsdl:message name="GetOSDsResponse">
+		<wsdl:part name="parameters" element="trt:GetOSDsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetOSDRequest">
+		<wsdl:part name="parameters" element="trt:GetOSD"/>
+	</wsdl:message>
+	<wsdl:message name="GetOSDResponse">
+		<wsdl:part name="parameters" element="trt:GetOSDResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetOSDOptionsRequest">
+		<wsdl:part name="parameters" element="trt:GetOSDOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetOSDOptionsResponse">
+		<wsdl:part name="parameters" element="trt:GetOSDOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetOSDRequest">
+		<wsdl:part name="parameters" element="trt:SetOSD"/>
+	</wsdl:message>
+	<wsdl:message name="SetOSDResponse">
+		<wsdl:part name="parameters" element="trt:SetOSDResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateOSDRequest">
+		<wsdl:part name="parameters" element="trt:CreateOSD"/>
+	</wsdl:message>
+	<wsdl:message name="CreateOSDResponse">
+		<wsdl:part name="parameters" element="trt:CreateOSDResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteOSDRequest">
+		<wsdl:part name="parameters" element="trt:DeleteOSD"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteOSDResponse">
+		<wsdl:part name="parameters" element="trt:DeleteOSDResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="Media">
+		<!--===============================-->
+		<!--===============================-->
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the media service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="trt:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="trt:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSources">
+			<wsdl:documentation>This command lists all available physical video inputs of the device.</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoSourcesRequest"/>
+			<wsdl:output message="trt:GetVideoSourcesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSources">
+			<wsdl:documentation>This command lists all available physical audio inputs of the device.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioSourcesRequest"/>
+			<wsdl:output message="trt:GetAudioSourcesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputs">
+			<wsdl:documentation>This command lists all available physical audio outputs of the device.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioOutputsRequest"/>
+			<wsdl:output message="trt:GetAudioOutputsResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="CreateProfile">
+			<wsdl:documentation>This operation creates a new empty media profile. The media profile shall be created in the
+device and shall be persistent (remain after reboot). A created profile shall be deletable and a device shall set the “fixed” attribute to false in the
+returned Profile.</wsdl:documentation>
+			<wsdl:input message="trt:CreateProfileRequest"/>
+			<wsdl:output message="trt:CreateProfileResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetProfile">
+			<wsdl:documentation>If the profile token is already known, a profile can be fetched through the GetProfile command.</wsdl:documentation>
+			<wsdl:input message="trt:GetProfileRequest"/>
+			<wsdl:output message="trt:GetProfileResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetProfiles">
+			<wsdl:documentation>Any endpoint can ask for the existing media profiles of a device using the GetProfiles
+command. Pre-configured or dynamically configured profiles can be retrieved using this
+command. This command lists all configured profiles in a device. The client does not need to
+know the media profile in order to use the command.</wsdl:documentation>
+			<wsdl:input message="trt:GetProfilesRequest"/>
+			<wsdl:output message="trt:GetProfilesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddVideoEncoderConfiguration">
+			<wsdl:documentation>This operation adds a VideoEncoderConfiguration to an existing media profile. If a
+configuration exists in the media profile, it will be replaced. The change shall be persistent. A device shall
+support adding a compatible VideoEncoderConfiguration to a Profile containing a VideoSourceConfiguration and shall
+support streaming video data of such a profile.
+			</wsdl:documentation>
+			<wsdl:input message="trt:AddVideoEncoderConfigurationRequest"/>
+			<wsdl:output message="trt:AddVideoEncoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveVideoEncoderConfiguration">
+			<wsdl:documentation>This operation removes a VideoEncoderConfiguration from an existing media profile. If the
+media profile does not contain a VideoEncoderConfiguration, the operation has no effect. The removal shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:RemoveVideoEncoderConfigurationRequest"/>
+			<wsdl:output message="trt:RemoveVideoEncoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddVideoSourceConfiguration">
+			<wsdl:documentation>This operation adds a VideoSourceConfiguration to an existing media profile. If such a
+configuration exists in the media profile, it will be replaced. The change shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:AddVideoSourceConfigurationRequest"/>
+			<wsdl:output message="trt:AddVideoSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveVideoSourceConfiguration">
+			<wsdl:documentation>This operation removes a VideoSourceConfiguration from an existing media profile. If the
+media profile does not contain a VideoSourceConfiguration, the operation has no effect. The removal shall be persistent. Video source configurations should only be removed after removing a
+VideoEncoderConfiguration from the media profile.</wsdl:documentation>
+			<wsdl:input message="trt:RemoveVideoSourceConfigurationRequest"/>
+			<wsdl:output message="trt:RemoveVideoSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddAudioEncoderConfiguration">
+			<wsdl:documentation>This operation adds an AudioEncoderConfiguration to an existing media profile. If a 
+configuration exists in the media profile, it will be replaced. The change shall be persistent. A device shall
+support adding a compatible AudioEncoderConfiguration to a profile containing an AudioSourceConfiguration and shall
+support streaming audio data of such a profile.
+			</wsdl:documentation>
+			<wsdl:input message="trt:AddAudioEncoderConfigurationRequest"/>
+			<wsdl:output message="trt:AddAudioEncoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveAudioEncoderConfiguration">
+			<wsdl:documentation>This operation removes an AudioEncoderConfiguration from an existing media profile. If the
+media profile does not contain an AudioEncoderConfiguration, the operation has no effect.
+The removal shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:RemoveAudioEncoderConfigurationRequest"/>
+			<wsdl:output message="trt:RemoveAudioEncoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddAudioSourceConfiguration">
+			<wsdl:documentation>This operation adds an AudioSourceConfiguration to an existing media profile. If a
+configuration exists in the media profile, it will be replaced. The change shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:AddAudioSourceConfigurationRequest"/>
+			<wsdl:output message="trt:AddAudioSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveAudioSourceConfiguration">
+			<wsdl:documentation>This operation removes an AudioSourceConfiguration from an existing media profile. If the
+media profile does not contain an AudioSourceConfiguration, the operation has no effect. The
+removal shall be persistent. Audio source configurations should only be removed after removing an
+AudioEncoderConfiguration from the media profile.</wsdl:documentation>
+			<wsdl:input message="trt:RemoveAudioSourceConfigurationRequest"/>
+			<wsdl:output message="trt:RemoveAudioSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddPTZConfiguration">
+			<wsdl:documentation>This operation adds a PTZConfiguration to an existing media profile. If a configuration exists
+in the media profile, it will be replaced. The change shall be persistent. Adding a PTZConfiguration to a media profile means that streams using that media profile can
+contain PTZ status (in the metadata), and that the media profile can be used for controlling
+PTZ movement.</wsdl:documentation>
+			<wsdl:input message="trt:AddPTZConfigurationRequest"/>
+			<wsdl:output message="trt:AddPTZConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemovePTZConfiguration">
+			<wsdl:documentation>This operation removes a PTZConfiguration from an existing media profile. If the media profile
+does not contain a PTZConfiguration, the operation has no effect. The removal shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:RemovePTZConfigurationRequest"/>
+			<wsdl:output message="trt:RemovePTZConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddVideoAnalyticsConfiguration">
+			<wsdl:documentation>This operation adds a VideoAnalytics configuration to an existing media profile. If a
+configuration exists in the media profile, it will be replaced. The change shall be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that streams using that media
+profile can contain video analytics data (in the metadata) as defined by the submitted configuration reference. A profile containing only a video analytics configuration but no video source configuration is incomplete. Therefore, a client should first add a video source configuration to a profile before adding a video analytics configuration. The device can deny adding of a video analytics
+configuration before a video source configuration.</wsdl:documentation>
+			<wsdl:input message="trt:AddVideoAnalyticsConfigurationRequest"/>
+			<wsdl:output message="trt:AddVideoAnalyticsConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveVideoAnalyticsConfiguration">
+			<wsdl:documentation>This operation removes a VideoAnalyticsConfiguration from an existing media profile. If the media profile does not contain a VideoAnalyticsConfiguration, the operation has no effect.
+The removal shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:RemoveVideoAnalyticsConfigurationRequest"/>
+			<wsdl:output message="trt:RemoveVideoAnalyticsConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddMetadataConfiguration">
+			<wsdl:documentation>This operation adds a Metadata configuration to an existing media profile. If a configuration exists in the media profile, it will be replaced. The change shall be persistent. Adding a MetadataConfiguration to a Profile means that streams using that profile contain metadata. Metadata can consist of events, PTZ status, and/or video analytics data.</wsdl:documentation>
+			<wsdl:input message="trt:AddMetadataConfigurationRequest"/>
+			<wsdl:output message="trt:AddMetadataConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveMetadataConfiguration">
+			<wsdl:documentation>This operation removes a MetadataConfiguration from an existing media profile. If the media profile does not contain a MetadataConfiguration, the operation has no effect. The removal shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:RemoveMetadataConfigurationRequest"/>
+			<wsdl:output message="trt:RemoveMetadataConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddAudioOutputConfiguration">
+			<wsdl:documentation>This operation adds an AudioOutputConfiguration to an existing media profile. If a configuration exists in the media profile, it will be replaced. The change shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:AddAudioOutputConfigurationRequest"/>
+			<wsdl:output message="trt:AddAudioOutputConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveAudioOutputConfiguration">
+			<wsdl:documentation>This operation removes an AudioOutputConfiguration from an existing media profile. If the media profile does not contain an AudioOutputConfiguration, the operation has no effect. The removal shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:RemoveAudioOutputConfigurationRequest"/>
+			<wsdl:output message="trt:RemoveAudioOutputConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AddAudioDecoderConfiguration">
+			<wsdl:documentation>This operation adds an AudioDecoderConfiguration to an existing media profile. If a configuration exists in the media profile, it shall be replaced. The change shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:AddAudioDecoderConfigurationRequest"/>
+			<wsdl:output message="trt:AddAudioDecoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemoveAudioDecoderConfiguration">
+			<wsdl:documentation>This operation removes an AudioDecoderConfiguration from an existing media profile. If the media profile does not contain an AudioDecoderConfiguration, the operation has no effect. The removal shall be persistent.</wsdl:documentation>
+			<wsdl:input message="trt:RemoveAudioDecoderConfigurationRequest"/>
+			<wsdl:output message="trt:RemoveAudioDecoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteProfile">
+			<wsdl:documentation>This operation deletes a profile. This change shall always be persistent. Deletion of a profile is only possible for non-fixed profiles</wsdl:documentation>
+			<wsdl:input message="trt:DeleteProfileRequest"/>
+			<wsdl:output message="trt:DeleteProfileResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceConfigurations">
+			<wsdl:documentation>This operation lists all existing video source configurations for a device. The client need not know anything about the video source configurations in order to use the command.</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoSourceConfigurationsRequest"/>
+			<wsdl:output message="trt:GetVideoSourceConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoEncoderConfigurations">
+			<wsdl:documentation>This operation lists all existing video encoder configurations of a device. This command lists all configured video encoder configurations in a device. The client need not know anything apriori about the video encoder configurations in order to use the command.</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoEncoderConfigurationsRequest"/>
+			<wsdl:output message="trt:GetVideoEncoderConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfigurations">
+			<wsdl:documentation>This operation lists all existing audio source configurations of a device. This command lists all audio source configurations in a device. The client need not know anything apriori about the audio source configurations in order to use the command.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioSourceConfigurationsRequest"/>
+			<wsdl:output message="trt:GetAudioSourceConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioEncoderConfigurations">
+			<wsdl:documentation>This operation lists all existing device audio encoder configurations. The client need not know anything apriori about the audio encoder configurations in order to use the command.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioEncoderConfigurationsRequest"/>
+			<wsdl:output message="trt:GetAudioEncoderConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoAnalyticsConfigurations">
+			<wsdl:documentation>This operation lists all video analytics configurations of a device. This command lists all configured video analytics in a device. The client need not know anything apriori about the video analytics in order to use the command.</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoAnalyticsConfigurationsRequest"/>
+			<wsdl:output message="trt:GetVideoAnalyticsConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetMetadataConfigurations">
+			<wsdl:documentation>This operation lists all existing metadata configurations. The client need not know anything apriori about the metadata in order to use the command.</wsdl:documentation>
+			<wsdl:input message="trt:GetMetadataConfigurationsRequest"/>
+			<wsdl:output message="trt:GetMetadataConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfigurations">
+			<wsdl:documentation>This command lists all existing AudioOutputConfigurations of a device. The NVC need not know anything apriori about the audio configurations to use this command.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioOutputConfigurationsRequest"/>
+			<wsdl:output message="trt:GetAudioOutputConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioDecoderConfigurations">
+			<wsdl:documentation>This command lists all existing AudioDecoderConfigurations of a device. The NVC need not know anything apriori about the audio decoder configurations in order to
+use this command.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioDecoderConfigurationsRequest"/>
+			<wsdl:output message="trt:GetAudioDecoderConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoSourceConfiguration">
+			<wsdl:documentation>If the video source configuration token is already known, the video source configuration can be fetched through the GetVideoSourceConfiguration command.</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoSourceConfigurationRequest"/>
+			<wsdl:output message="trt:GetVideoSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoEncoderConfiguration">
+			<wsdl:documentation>If the video encoder configuration token is already known, the encoder configuration can be fetched through the GetVideoEncoderConfiguration command.</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoEncoderConfigurationRequest"/>
+			<wsdl:output message="trt:GetVideoEncoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfiguration">
+			<wsdl:documentation>The GetAudioSourceConfiguration command fetches the audio source configurations if the audio source configuration token is already known. An</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioSourceConfigurationRequest"/>
+			<wsdl:output message="trt:GetAudioSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioEncoderConfiguration">
+			<wsdl:documentation>The GetAudioEncoderConfiguration command fetches the encoder configuration if the audio encoder configuration token is known.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioEncoderConfigurationRequest"/>
+			<wsdl:output message="trt:GetAudioEncoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoAnalyticsConfiguration">
+			<wsdl:documentation>The GetVideoAnalyticsConfiguration command fetches the video analytics configuration if the video analytics token is known.</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoAnalyticsConfigurationRequest"/>
+			<wsdl:output message="trt:GetVideoAnalyticsConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetMetadataConfiguration">
+			<wsdl:documentation>The GetMetadataConfiguration command fetches the metadata configuration if the metadata token is known.</wsdl:documentation>
+			<wsdl:input message="trt:GetMetadataConfigurationRequest"/>
+			<wsdl:output message="trt:GetMetadataConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfiguration">
+			<wsdl:documentation>If the audio output configuration token is already known, the output configuration can be fetched through the GetAudioOutputConfiguration command.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioOutputConfigurationRequest"/>
+			<wsdl:output message="trt:GetAudioOutputConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioDecoderConfiguration">
+			<wsdl:documentation>If the audio decoder configuration token is already known, the decoder configuration can be fetched through the GetAudioDecoderConfiguration command.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioDecoderConfigurationRequest"/>
+			<wsdl:output message="trt:GetAudioDecoderConfigurationResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetCompatibleVideoEncoderConfigurations">
+			<wsdl:documentation>This operation lists all the video encoder configurations of the device that are compatible with a certain media profile. Each of the returned configurations shall be a valid input parameter for the AddVideoEncoderConfiguration command on the media profile. The result will vary depending on the capabilities, configurations and settings in the device.</wsdl:documentation>
+			<wsdl:input message="trt:GetCompatibleVideoEncoderConfigurationsRequest"/>
+			<wsdl:output message="trt:GetCompatibleVideoEncoderConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleVideoSourceConfigurations">
+			<wsdl:documentation>This operation requests all the video source configurations of the device that are compatible
+with a certain media profile. Each of the returned configurations shall be a valid input
+parameter for the AddVideoSourceConfiguration command on the media profile. The result
+will vary depending on the capabilities, configurations and settings in the device.</wsdl:documentation>
+			<wsdl:input message="trt:GetCompatibleVideoSourceConfigurationsRequest"/>
+			<wsdl:output message="trt:GetCompatibleVideoSourceConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleAudioEncoderConfigurations">
+			<wsdl:documentation>This operation requests all audio encoder configurations of a device that are compatible with a certain media profile. Each of the returned configurations shall be a valid input parameter for the AddAudioSourceConfiguration command on the media profile. The result varies depending on the capabilities, configurations and settings in the device.</wsdl:documentation>
+			<wsdl:input message="trt:GetCompatibleAudioEncoderConfigurationsRequest"/>
+			<wsdl:output message="trt:GetCompatibleAudioEncoderConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleAudioSourceConfigurations">
+			<wsdl:documentation>This operation requests all audio source configurations of the device that are compatible with a certain media profile. Each of the returned configurations shall be a valid input parameter for the AddAudioEncoderConfiguration command on the media profile. The result varies depending on the capabilities, configurations and settings in the device.</wsdl:documentation>
+			<wsdl:input message="trt:GetCompatibleAudioSourceConfigurationsRequest"/>
+			<wsdl:output message="trt:GetCompatibleAudioSourceConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleVideoAnalyticsConfigurations">
+			<wsdl:documentation>This operation requests all video analytic configurations of the device that are compatible with a certain media profile. Each of the returned configurations shall be a valid input parameter for the AddVideoAnalyticsConfiguration command on the media profile. The result varies depending on the capabilities, configurations and settings in the device.</wsdl:documentation>
+			<wsdl:input message="trt:GetCompatibleVideoAnalyticsConfigurationsRequest"/>
+			<wsdl:output message="trt:GetCompatibleVideoAnalyticsConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleMetadataConfigurations">
+			<wsdl:documentation>This operation requests all the metadata configurations of the device that are compatible with a certain media profile. Each of the returned configurations shall be a valid input parameter for the AddMetadataConfiguration command on the media profile. The result varies depending on the capabilities, configurations and settings in the device.</wsdl:documentation>
+			<wsdl:input message="trt:GetCompatibleMetadataConfigurationsRequest"/>
+			<wsdl:output message="trt:GetCompatibleMetadataConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleAudioOutputConfigurations">
+			<wsdl:documentation>This command lists all audio output configurations of a device that are compatible with a certain media profile. Each returned configuration shall be a valid input for the 
+AddAudioOutputConfiguration command.</wsdl:documentation>
+			<wsdl:input message="trt:GetCompatibleAudioOutputConfigurationsRequest"/>
+			<wsdl:output message="trt:GetCompatibleAudioOutputConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleAudioDecoderConfigurations">
+			<wsdl:documentation>This operation lists all the audio decoder configurations of the device that are compatible with a certain media profile. Each of the returned configurations shall be a valid input parameter for the AddAudioDecoderConfiguration command on the media profile.</wsdl:documentation>
+			<wsdl:input message="trt:GetCompatibleAudioDecoderConfigurationsRequest"/>
+			<wsdl:output message="trt:GetCompatibleAudioDecoderConfigurationsResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="SetVideoSourceConfiguration">
+			<wsdl:documentation>This operation modifies a video source configuration. The ForcePersistence flag indicates if the changes shall remain after reboot of the device. Running streams using this configuration may be immediately updated according to the new settings. The changes are not guaranteed to take effect unless the client requests a new stream URI and restarts any affected stream. NVC methods for changing a running stream are out of scope for this specification.</wsdl:documentation>
+			<wsdl:input message="trt:SetVideoSourceConfigurationRequest"/>
+			<wsdl:output message="trt:SetVideoSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetVideoEncoderConfiguration">
+			<wsdl:documentation>This operation modifies a video encoder configuration. The ForcePersistence flag indicates if the changes shall remain after reboot of the device. Changes in the Multicast settings shall always be persistent. Running streams using this configuration may be immediately updated according to the new settings. The changes are not guaranteed to take effect unless the client requests a new stream URI and restarts any affected stream. NVC methods for changing a running stream are out of scope for this specification. <br/>SessionTimeout is provided as a hint for keeping rtsp session by a device. If necessary the device may adapt parameter values for SessionTimeout elements without returning an error. For the time between keep alive calls the client shall adhere to the timeout value signaled via RTSP.</wsdl:documentation>
+			<wsdl:input message="trt:SetVideoEncoderConfigurationRequest"/>
+			<wsdl:output message="trt:SetVideoEncoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioSourceConfiguration">
+			<wsdl:documentation>This operation modifies an audio source configuration. The ForcePersistence flag indicates if
+the changes shall remain after reboot of the device. Running streams using this configuration
+may be immediately updated according to the new settings. The changes are not guaranteed
+to take effect unless the client requests a new stream URI and restarts any affected stream
+NVC methods for changing a running stream are out of scope for this specification.</wsdl:documentation>
+			<wsdl:input message="trt:SetAudioSourceConfigurationRequest"/>
+			<wsdl:output message="trt:SetAudioSourceConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioEncoderConfiguration">
+			<wsdl:documentation>This operation modifies an audio encoder configuration. The ForcePersistence flag indicates if
+the changes shall remain after reboot of the device. Running streams using this configuration may be immediately updated
+according to the new settings. The changes are not guaranteed to take effect unless the client
+requests a new stream URI and restarts any affected streams. NVC methods for changing a
+running stream are out of scope for this specification.</wsdl:documentation>
+			<wsdl:input message="trt:SetAudioEncoderConfigurationRequest"/>
+			<wsdl:output message="trt:SetAudioEncoderConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetVideoAnalyticsConfiguration">
+			<wsdl:documentation>A video analytics configuration is modified using this command. The ForcePersistence flag
+indicates if the changes shall remain after reboot of the device or not. Running streams using
+this configuration shall be immediately updated according to the new settings. Otherwise
+inconsistencies can occur between the scene description processed by the rule engine and
+the notifications produced by analytics engine and rule engine which reference the very same
+video analytics configuration token.</wsdl:documentation>
+			<wsdl:input message="trt:SetVideoAnalyticsConfigurationRequest"/>
+			<wsdl:output message="trt:SetVideoAnalyticsConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetMetadataConfiguration">
+			<wsdl:documentation>This operation modifies a metadata configuration. The ForcePersistence flag indicates if the
+changes shall remain after reboot of the device. Changes in the Multicast settings shall
+always be persistent. Running streams using this configuration may be updated immediately
+according to the new settings. The changes are not guaranteed to take effect unless the client
+requests a new stream URI and restarts any affected streams. NVC methods for changing a
+running stream are out of scope for this specification.</wsdl:documentation>
+			<wsdl:input message="trt:SetMetadataConfigurationRequest"/>
+			<wsdl:output message="trt:SetMetadataConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioOutputConfiguration">
+			<wsdl:documentation>This operation modifies an audio output configuration. The ForcePersistence flag indicates if
+the changes shall remain after reboot of the device.</wsdl:documentation>
+			<wsdl:input message="trt:SetAudioOutputConfigurationRequest"/>
+			<wsdl:output message="trt:SetAudioOutputConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioDecoderConfiguration">
+			<wsdl:documentation>This operation modifies an audio decoder configuration. The ForcePersistence flag indicates if
+the changes shall remain after reboot of the device.</wsdl:documentation>
+			<wsdl:input message="trt:SetAudioDecoderConfigurationRequest"/>
+			<wsdl:output message="trt:SetAudioDecoderConfigurationResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceConfigurationOptions">
+			<wsdl:documentation>This operation returns the available options  (supported values and ranges for video source configuration parameters) when the video source parameters are
+reconfigured If a video source configuration is specified, the options shall concern that
+particular configuration. If a media profile is specified, the options shall be compatible with
+that media profile.</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoSourceConfigurationOptionsRequest"/>
+			<wsdl:output message="trt:GetVideoSourceConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoEncoderConfigurationOptions">
+			<wsdl:documentation>This operation returns the available options (supported values and ranges for video encoder 
+				configuration parameters) when the video encoder parameters are reconfigured. <br/>
+				For JPEG, MPEG4 and H264 extension elements have been defined that provide additional information. A device must provide the 
+				XxxOption information for all encodings supported and should additionally provide the corresponding XxxOption2 information.<br/>
+				This response contains the available video encoder configuration options. If a video encoder configuration is specified, 
+				the options shall concern that particular configuration. If a media profile is specified, the options shall be 
+				compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
+			</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoEncoderConfigurationOptionsRequest"/>
+			<wsdl:output message="trt:GetVideoEncoderConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfigurationOptions">
+			<wsdl:documentation>This operation returns the available options (supported values and ranges for audio source configuration parameters) when the audio source parameters are
+reconfigured. If an audio source configuration is specified, the options shall concern that
+particular configuration. If a media profile is specified, the options shall be compatible with
+that media profile.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioSourceConfigurationOptionsRequest"/>
+			<wsdl:output message="trt:GetAudioSourceConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioEncoderConfigurationOptions">
+			<wsdl:documentation>This operation returns the available options  (supported values and ranges for audio encoder configuration parameters) when the audio encoder parameters are
+reconfigured.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioEncoderConfigurationOptionsRequest"/>
+			<wsdl:output message="trt:GetAudioEncoderConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetMetadataConfigurationOptions">
+			<wsdl:documentation>This operation returns the available options (supported values and ranges for metadata configuration parameters) for changing the metadata configuration.</wsdl:documentation>
+			<wsdl:input message="trt:GetMetadataConfigurationOptionsRequest"/>
+			<wsdl:output message="trt:GetMetadataConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfigurationOptions">
+			<wsdl:documentation>This operation returns the available options (supported values and ranges for audio output configuration parameters) for configuring an audio output.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioOutputConfigurationOptionsRequest"/>
+			<wsdl:output message="trt:GetAudioOutputConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioDecoderConfigurationOptions">
+			<wsdl:documentation>This command list the audio decoding capabilities for a given profile and configuration of a
+device.</wsdl:documentation>
+			<wsdl:input message="trt:GetAudioDecoderConfigurationOptionsRequest"/>
+			<wsdl:output message="trt:GetAudioDecoderConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetGuaranteedNumberOfVideoEncoderInstances">
+			<wsdl:documentation>The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
+minimum number of guaranteed video encoder instances (applications) per Video Source
+Configuration.</wsdl:documentation>
+			<wsdl:input message="trt:GetGuaranteedNumberOfVideoEncoderInstancesRequest"/>
+			<wsdl:output message="trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetStreamUri">
+			<wsdl:documentation>This operation requests a URI that can be used to initiate a live media stream using RTSP as
+the control protocol. The returned URI shall remain valid indefinitely even if the profile is
+changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set
+accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
+				The correct syntax for the StreamSetup element for these media stream setups defined in 5.1.1 of the streaming specification are as follows:
+				<ol>
+					<li>RTP unicast over UDP: StreamType = "RTP_unicast", TransportProtocol = "UDP"</li>
+					<li>RTP over RTSP over HTTP over TCP: StreamType = "RTP_unicast", TransportProtocol = "HTTP"</li>
+					<li>RTP over RTSP over TCP: StreamType = "RTP_unicast", TransportProtocol = "RTSP"</li>
+				</ol>
+				<br/>
+If a multicast stream is requested the VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration element inside the corresponding 
+media profile must be configured with valid multicast settings.<br/>
+For full compatibility with other ONVIF services a device should not generate Uris longer than
+128 octets.</wsdl:documentation>
+			<wsdl:input message="trt:GetStreamUriRequest"/>
+			<wsdl:output message="trt:GetStreamUriResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="StartMulticastStreaming">
+			<wsdl:documentation>This command starts multicast streaming using a specified media profile of a device.
+Streaming continues until StopMulticastStreaming is called for the same Profile. The
+streaming shall continue after a reboot of the device until a StopMulticastStreaming request is
+received. The multicast address, port and TTL are configured in the
+VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
+respectively.</wsdl:documentation>
+			<wsdl:input message="trt:StartMulticastStreamingRequest"/>
+			<wsdl:output message="trt:StartMulticastStreamingResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="StopMulticastStreaming">
+			<wsdl:documentation>This command stop multicast streaming using a specified media profile of a device</wsdl:documentation>
+			<wsdl:input message="trt:StopMulticastStreamingRequest"/>
+			<wsdl:output message="trt:StopMulticastStreamingResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetSynchronizationPoint">
+			<wsdl:documentation>Synchronization points allow clients to decode and correctly use all data after the
+synchronization point.
+For example, if a video stream is configured with a large I-frame distance and a client loses a
+single packet, the client does not display video until the next I-frame is transmitted. In such
+cases, the client can request a Synchronization Point which enforces the device to add an I-Frame as soon as possible. Clients can request Synchronization Points for profiles. The device
+shall add synchronization points for all streams associated with this profile.
+Similarly, a synchronization point is used to get an update on full PTZ or event status through
+the metadata stream.
+If a video stream is associated with the profile, an I-frame shall be added to this video stream.
+If a PTZ metadata stream is associated to the profile,
+the PTZ position shall be repeated within the metadata stream.</wsdl:documentation>
+			<wsdl:input message="trt:SetSynchronizationPointRequest"/>
+			<wsdl:output message="trt:SetSynchronizationPointResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSnapshotUri">
+			<wsdl:documentation>A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
+device. The returned URI shall remain valid indefinitely even if the profile is changed. The
+ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
+(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be used for
+acquiring a JPEG image through a HTTP GET operation. The image encoding will always be
+JPEG regardless of the encoding setting in the media profile. The Jpeg settings
+(like resolution or quality) may be taken from the profile if suitable. The provided
+image will be updated automatically and independent from calls to GetSnapshotUri.</wsdl:documentation>
+			<wsdl:input message="trt:GetSnapshotUriRequest"/>
+			<wsdl:output message="trt:GetSnapshotUriResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoSourceModes">
+			<wsdl:documentation>A device returns the information for current video source mode and settable video source modes of specified video source. A device that indicates a capability of  VideoSourceModes shall support this command.</wsdl:documentation>
+			<wsdl:input message="trt:GetVideoSourceModesRequest"/>
+			<wsdl:output message="trt:GetVideoSourceModesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetVideoSourceMode">
+			<wsdl:documentation>SetVideoSourceMode changes the media profile structure relating to video source for the specified video source mode. A device that indicates a capability of VideoSourceModes shall support this command. The behavior after changing the mode is not defined in this specification.</wsdl:documentation>
+			<wsdl:input message="trt:SetVideoSourceModeRequest"/>
+			<wsdl:output message="trt:SetVideoSourceModeResponse"/>
+		</wsdl:operation>
+		<!--==============OSD Operation Begin=================-->
+		<wsdl:operation name="GetOSDs">
+			<wsdl:documentation>Get the OSDs.</wsdl:documentation>
+			<wsdl:input message="trt:GetOSDsRequest"/>
+			<wsdl:output message="trt:GetOSDsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetOSD">
+			<wsdl:documentation>Get the OSD.</wsdl:documentation>
+			<wsdl:input message="trt:GetOSDRequest"/>
+			<wsdl:output message="trt:GetOSDResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetOSDOptions">
+			<wsdl:documentation>Get the OSD Options.</wsdl:documentation>
+			<wsdl:input message="trt:GetOSDOptionsRequest"/>
+			<wsdl:output message="trt:GetOSDOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetOSD">
+			<wsdl:documentation>Set the OSD</wsdl:documentation>
+			<wsdl:input message="trt:SetOSDRequest"/>
+			<wsdl:output message="trt:SetOSDResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateOSD">
+			<wsdl:documentation>Create the OSD.</wsdl:documentation>
+			<wsdl:input message="trt:CreateOSDRequest"/>
+			<wsdl:output message="trt:CreateOSDResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteOSD">
+			<wsdl:documentation>Delete the OSD.</wsdl:documentation>
+			<wsdl:input message="trt:DeleteOSDRequest"/>
+			<wsdl:output message="trt:DeleteOSDResponse"/>
+		</wsdl:operation>
+		<!--==============OSD Operation End=================-->
+	</wsdl:portType>
+	<wsdl:binding name="MediaBinding" type="trt:Media">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<!--===============================-->
+		<!--===============================-->
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSources">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdlGetVideoSources/"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<!--===============================-->
+		<wsdl:operation name="GetAudioSources">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioSources"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetAudioOutputs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="CreateProfile">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/CreateProfile"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetProfile">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdlGetProfile/"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetProfiles">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetProfiles"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="AddVideoEncoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="AddVideoSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="AddAudioEncoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="AddAudioSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="AddPTZConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="AddVideoAnalyticsConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="AddMetadataConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="AddAudioOutputConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="AddAudioDecoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="RemoveVideoEncoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="RemoveVideoSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="RemoveAudioEncoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="RemoveAudioSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="RemovePTZConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="RemoveVideoAnalyticsConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="RemoveMetadataConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="RemoveAudioOutputConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="RemoveAudioDecoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="DeleteProfile">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/DeleteProfile"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<!--===============================-->
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoEncoderConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioEncoderConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoAnalyticsConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetMetadataConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioDecoderConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoEncoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioEncoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoAnalyticsConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetMetadataConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioDecoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetCompatibleVideoEncoderConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleVideoSourceConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleAudioEncoderConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleAudioSourceConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleVideoAnalyticsConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleMetadataConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleAudioOutputConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleAudioDecoderConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="SetVideoSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetVideoEncoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioSourceConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioEncoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetVideoAnalyticsConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetMetadataConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioOutputConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetAudioDecoderConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetVideoEncoderConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioSourceConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioEncoderConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetMetadataConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioOutputConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAudioDecoderConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetGuaranteedNumberOfVideoEncoderInstances">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<!--===============================-->
+		<!--===============================-->
+		<wsdl:operation name="GetStreamUri">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetStreamUri"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="StartMulticastStreaming">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="StopMulticastStreaming">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="SetSynchronizationPoint">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetSnapshotUri">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetVideoSourceModes">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="SetVideoSourceMode">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<!--==============OSD Operation Begin=================-->
+		<wsdl:operation name="GetOSDs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetOSDs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetOSD">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetOSD"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetOSDOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetOSD">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/SetOSD"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateOSD">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/CreateOSD"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteOSD">
+			<soap:operation soapAction="http://www.onvif.org/ver10/media/wsdl/DeleteOSD"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--==============OSD Operation End=================-->
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/network/wsdl/remotediscovery.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/network/wsdl/remotediscovery.wsdl
new file mode 100644
index 0000000..0feb1cd
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/network/wsdl/remotediscovery.wsdl
@@ -0,0 +1,93 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xsl" href="../../../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2010 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:dn="http://www.onvif.org/ver10/network/wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.onvif.org/ver10/network/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/network/wsdl" xmlns:d="http://schemas.xmlsoap.org/ws/2005/04/discovery" elementFormDefault="qualified">
+			<xs:import namespace="http://schemas.xmlsoap.org/ws/2005/04/discovery" schemaLocation="http://schemas.xmlsoap.org/ws/2005/04/discovery/ws-discovery.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="Hello" type="d:HelloType"/>
+			<xs:element name="HelloResponse" type="d:ResolveType"/>
+			<xs:element name="Probe" type="d:ProbeType"/>
+			<xs:element name="ProbeResponse" type="d:ProbeMatchesType"/>
+			<xs:element name="Bye" type="d:ByeType"/>
+			<xs:element name="ByeResponse" type="d:ResolveType"/>
+			<!--===============================-->
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="HelloRequest">
+		<wsdl:part name="parameters" element="dn:Hello"/>
+	</wsdl:message>
+	<wsdl:message name="HelloResponse">
+		<wsdl:part name="parameters" element="dn:HelloResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ProbeRequest">
+		<wsdl:part name="parameters" element="dn:Probe"/>
+	</wsdl:message>
+	<wsdl:message name="ProbeResponse">
+		<wsdl:part name="parameters" element="dn:ProbeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ByeRequest">
+		<wsdl:part name="parameters" element="dn:Bye"/>
+	</wsdl:message>
+	<wsdl:message name="ByeResponse">
+		<wsdl:part name="parameters" element="dn:ByeResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="RemoteDiscoveryPort">
+		<wsdl:operation name="Hello">
+			<wsdl:input message="dn:HelloRequest" dn:Action="http://schemas.xmlsoap.org/ws/2005/04/discovery/Hello"/>
+			<wsdl:output message="dn:HelloResponse" dn:Action="http://schemas.xmlsoap.org/ws/2005/04/discovery/Probe"/>
+		</wsdl:operation>
+		<wsdl:operation name="Bye">
+			<wsdl:input message="dn:ByeRequest" dn:Action="http://schemas.xmlsoap.org/ws/2005/04/discovery/Bye"/>
+			<wsdl:output message="dn:ByeResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:portType name="DiscoveryLookupPort">
+		<wsdl:operation name="Probe">
+			<wsdl:input message="dn:ProbeRequest" dn:Action="http://schemas.xmlsoap.org/ws/2005/04/discovery/Probe"/>
+			<wsdl:output message="dn:ProbeResponse" dn:Action="http://schemas.xmlsoap.org/ws/2005/04/discovery/ProbeMatches"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="RemoteDiscoveryBinding" type="dn:RemoteDiscoveryPort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="Hello">
+			<soap:operation soapAction="http://www.onvif.org/ver10/network/wsdl/Hello"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="Bye">
+			<soap:operation soapAction="http://www.onvif.org/ver10/network/wsdl/Bye"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+	<wsdl:binding name="DiscoveryLookupBinding" type="dn:DiscoveryLookupPort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="Probe">
+			<soap:operation soapAction="http://www.onvif.org/ver10/network/wsdl/Probe"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/receiver.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/receiver.wsdl
new file mode 100644
index 0000000..a0293fa
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/receiver.wsdl
@@ -0,0 +1,398 @@
+<?xml version="1.0" encoding="utf-8"?>
+<?xml-stylesheet type="text/xsl" href="../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2010 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:trv="http://www.onvif.org/ver10/receiver/wsdl" targetNamespace="http://www.onvif.org/ver10/receiver/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/receiver/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="2.1.1">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../ver10/schema/onvif.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="trv:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the receiver service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="RTP_Multicast" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates that the device can receive RTP multicast streams.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RTP_TCP" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates that the device can receive RTP/TCP streams</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RTP_RTSP_TCP" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates that the device can receive RTP/RTSP/TCP streams.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SupportedReceivers" type="xs:int" use="required">
+					<xs:annotation>
+						<xs:documentation>The maximum number of receivers supported by the device.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaximumRTSPURILength" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>The maximum allowed length for RTSP URIs (Minimum and default value is 128 octet).</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="trv:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="GetReceivers">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetReceiversResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Receivers" type="tt:Receiver" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>A list of all receivers that currently exist on the device.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetReceiver">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ReceiverToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>The token of the receiver to be retrieved.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetReceiverResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Receiver" type="tt:Receiver">
+							<xs:annotation>
+								<xs:documentation>The details of the receiver.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateReceiver">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:ReceiverConfiguration">
+							<xs:annotation>
+								<xs:documentation>The initial configuration for the new receiver.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateReceiverResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Receiver" type="tt:Receiver">
+							<xs:annotation>
+								<xs:documentation>The details of the receiver that was created.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteReceiver">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ReceiverToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>The token of the receiver to be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteReceiverResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ConfigureReceiver">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ReceiverToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>The token of the receiver to be configured.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Configuration" type="tt:ReceiverConfiguration">
+							<xs:annotation>
+								<xs:documentation>The new configuration for the receiver.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ConfigureReceiverResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetReceiverMode">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ReceiverToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>The token of the receiver to be changed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Mode" type="tt:ReceiverMode">
+							<xs:annotation>
+								<xs:documentation>The new receiver mode. Options available are:</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetReceiverModeResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetReceiverState">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ReceiverToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>The token of the receiver to be queried.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetReceiverStateResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ReceiverState" type="tt:ReceiverStateInformation">
+							<xs:annotation>
+								<xs:documentation>Description of the current receiver state.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="trv:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="trv:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetReceiversRequest">
+		<wsdl:part name="parameters" element="trv:GetReceivers"/>
+	</wsdl:message>
+	<wsdl:message name="GetReceiversResponse">
+		<wsdl:part name="parameters" element="trv:GetReceiversResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetReceiverRequest">
+		<wsdl:part name="parameters" element="trv:GetReceiver"/>
+	</wsdl:message>
+	<wsdl:message name="GetReceiverResponse">
+		<wsdl:part name="parameters" element="trv:GetReceiverResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateReceiverRequest">
+		<wsdl:part name="parameters" element="trv:CreateReceiver"/>
+	</wsdl:message>
+	<wsdl:message name="CreateReceiverResponse">
+		<wsdl:part name="parameters" element="trv:CreateReceiverResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteReceiverRequest">
+		<wsdl:part name="parameters" element="trv:DeleteReceiver"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteReceiverResponse">
+		<wsdl:part name="parameters" element="trv:DeleteReceiverResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ConfigureReceiverRequest">
+		<wsdl:part name="parameters" element="trv:ConfigureReceiver"/>
+	</wsdl:message>
+	<wsdl:message name="ConfigureReceiverResponse">
+		<wsdl:part name="parameters" element="trv:ConfigureReceiverResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetReceiverModeRequest">
+		<wsdl:part name="parameters" element="trv:SetReceiverMode"/>
+	</wsdl:message>
+	<wsdl:message name="SetReceiverModeResponse">
+		<wsdl:part name="parameters" element="trv:SetReceiverModeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetReceiverStateRequest">
+		<wsdl:part name="parameters" element="trv:GetReceiverState"/>
+	</wsdl:message>
+	<wsdl:message name="GetReceiverStateResponse">
+		<wsdl:part name="parameters" element="trv:GetReceiverStateResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="ReceiverPort">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the receiver service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="trv:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="trv:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetReceivers">
+			<wsdl:documentation>
+				Lists all receivers currently present on a device. This operation is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="trv:GetReceiversRequest"/>
+			<wsdl:output message="trv:GetReceiversResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetReceiver">
+			<wsdl:documentation>
+				Retrieves the details of a specific receiver. This operation is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="trv:GetReceiverRequest"/>
+			<wsdl:output message="trv:GetReceiverResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateReceiver">
+			<wsdl:documentation>
+				Creates a new receiver. This operation is mandatory, although the service may
+				raise a fault if the receiver cannot be created.
+			</wsdl:documentation>
+			<wsdl:input message="trv:CreateReceiverRequest"/>
+			<wsdl:output message="trv:CreateReceiverResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteReceiver">
+			<wsdl:documentation>
+				Deletes an existing receiver. A receiver may be deleted only if it is not
+				currently in use; otherwise a fault shall be raised.
+				This operation is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="trv:DeleteReceiverRequest"/>
+			<wsdl:output message="trv:DeleteReceiverResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="ConfigureReceiver">
+			<wsdl:documentation>
+				Configures an existing receiver. This operation is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="trv:ConfigureReceiverRequest"/>
+			<wsdl:output message="trv:ConfigureReceiverResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetReceiverMode">
+			<wsdl:documentation>
+				Sets the mode of the receiver without affecting the rest of its configuration.
+				This operation is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="trv:SetReceiverModeRequest"/>
+			<wsdl:output message="trv:SetReceiverModeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetReceiverState">
+			<wsdl:documentation>
+				Determines whether the receiver is currently disconnected, connected or
+				attempting to connect.
+				This operation is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="trv:GetReceiverStateRequest"/>
+			<wsdl:output message="trv:GetReceiverStateResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="ReceiverBinding" type="trv:ReceiverPort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetReceivers">
+			<soap:operation soapAction="http://www.onvif.org/ver10/receiver/wsdl/GetReceivers"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetReceiver">
+			<soap:operation soapAction="http://www.onvif.org/ver10/receiver/wsdl/GetReceiver"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateReceiver">
+			<soap:operation soapAction="http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteReceiver">
+			<soap:operation soapAction="http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="ConfigureReceiver">
+			<soap:operation soapAction="http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetReceiverMode">
+			<soap:operation soapAction="http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetReceiverState">
+			<soap:operation soapAction="http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/recording.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/recording.wsdl
new file mode 100644
index 0000000..c5f4e80
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/recording.wsdl
@@ -0,0 +1,1137 @@
+<?xml version="1.0" encoding="utf-8"?>
+<?xml-stylesheet type="text/xsl" href="../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2018 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:trc="http://www.onvif.org/ver10/recording/wsdl" targetNamespace="http://www.onvif.org/ver10/recording/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/recording/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="18.06">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../ver10/schema/onvif.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="trc:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the recording service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="DynamicRecordings" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication if the device supports dynamic creation and deletion of recordings</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="DynamicTracks" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication if the device supports dynamic creation and deletion of tracks</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Encoding" type="trc:EncodingTypes">
+					<xs:annotation>
+						<xs:documentation>Indication which encodings are supported for recording. The list may contain one or more enumeration values of tt:VideoEncoding and tt:AudioEncoding. For encodings that are neither defined in tt:VideoEncoding nor tt:AudioEncoding the device shall use the <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA</a> defintions. Note, that a device without audio support shall not return audio encodings.  </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxRate" type="xs:float">
+					<xs:annotation>
+						<xs:documentation>Maximum supported bit rate for all tracks of a recording in kBit/s.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxTotalRate" type="xs:float">
+					<xs:annotation>
+						<xs:documentation>Maximum supported bit rate for all recordings in kBit/s.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxRecordings" type="xs:float">
+					<xs:annotation>
+						<xs:documentation>Maximum number of recordings supported. (Integer values only.)</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaxRecordingJobs" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Maximum total number of supported recording jobs by the device.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Options" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication if the device supports the GetRecordingOptions command.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MetadataRecording" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication if the device supports recording metadata.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SupportedExportFileFormats" type="tt:StringAttrList">
+					<xs:annotation>
+						<xs:documentation> 
+						Indication that the device supports ExportRecordedData command for the listed export file formats.
+						The list shall return at least one export file format value. The value of 'ONVIF' refers to
+						ONVIF Export File Format specification.
+						</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:simpleType name="EncodingTypes">
+				<xs:list itemType="xs:string"/>
+			</xs:simpleType>
+			<xs:element name="Capabilities" type="trc:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="CreateRecording">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingConfiguration" type="tt:RecordingConfiguration">
+							<xs:annotation>
+								<xs:documentation>Initial configuration for the recording.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateRecordingResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference">
+							<xs:annotation>
+								<xs:documentation>The reference to the created recording.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteRecording">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference">
+							<xs:annotation>
+								<xs:documentation>The reference of the recording to be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteRecordingResponse">
+				<xs:complexType>
+					<xs:sequence>
+			          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordings">
+				<xs:complexType>
+					<xs:sequence>
+			          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingItem" type="tt:GetRecordingsResponseItem" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of recording items.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRecordingConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference">
+							<xs:annotation>
+								<xs:documentation>Token of the recording that shall be changed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="RecordingConfiguration" type="tt:RecordingConfiguration">
+							<xs:annotation>
+								<xs:documentation>The new configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRecordingConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+			          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference">
+							<xs:annotation>
+								<xs:documentation>Token of the configuration to be retrieved.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingConfiguration" type="tt:RecordingConfiguration">
+							<xs:annotation>
+								<xs:documentation>Configuration of the recording.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateTrack">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference">
+							<xs:annotation>
+								<xs:documentation>Identifies the recording to which a track shall be added.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="TrackConfiguration" type="tt:TrackConfiguration">
+							<xs:annotation>
+								<xs:documentation>The configuration of the new track.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateTrackResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="TrackToken" type="tt:TrackReference">
+							<xs:annotation>
+								<xs:documentation>The TrackToken shall identify the newly created track. The
+							TrackToken shall be unique within the recoding to which
+							the new track belongs.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteTrack">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference">
+							<xs:annotation>
+								<xs:documentation>Token of the recording the track belongs to.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="TrackToken" type="tt:TrackReference">
+							<xs:annotation>
+								<xs:documentation>Token of the track to be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteTrackResponse">
+				<xs:complexType>
+					<xs:sequence>
+			          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetTrackConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference">
+							<xs:annotation>
+								<xs:documentation>Token of the recording the track belongs to.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="TrackToken" type="tt:TrackReference">
+							<xs:annotation>
+								<xs:documentation>Token of the track.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetTrackConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="TrackConfiguration" type="tt:TrackConfiguration">
+							<xs:annotation>
+								<xs:documentation>Configuration of the track.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetTrackConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference">
+							<xs:annotation>
+								<xs:documentation>Token of the recording the track belongs to.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="TrackToken" type="tt:TrackReference">
+							<xs:annotation>
+								<xs:documentation>Token of the track to be modified.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="TrackConfiguration" type="tt:TrackConfiguration">
+							<xs:annotation>
+								<xs:documentation>New configuration for the track.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetTrackConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateRecordingJob">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobConfiguration" type="tt:RecordingJobConfiguration">
+							<xs:annotation>
+								<xs:documentation>The initial configuration of the new recording job.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateRecordingJobResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobToken" type="tt:RecordingJobReference">
+							<xs:annotation>
+								<xs:documentation>The JobToken shall identify the created recording job.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="JobConfiguration" type="tt:RecordingJobConfiguration">
+							<xs:annotation>
+								<xs:documentation>
+							The JobConfiguration structure shall be the configuration as it is used by the device. This may be different from the
+							JobConfiguration passed to CreateRecordingJob.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteRecordingJob">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobToken" type="tt:RecordingJobReference">
+							<xs:annotation>
+								<xs:documentation>The token of the job to be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteRecordingJobResponse">
+				<xs:complexType>
+					<xs:sequence>
+			          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingJobs">
+				<xs:complexType>
+					<xs:sequence>
+			          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingJobsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobItem" type="tt:GetRecordingJobsResponseItem" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of recording jobs.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRecordingJobConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobToken" type="tt:RecordingJobReference">
+							<xs:annotation>
+								<xs:documentation>Token of the job to be modified.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="JobConfiguration" type="tt:RecordingJobConfiguration">
+							<xs:annotation>
+								<xs:documentation>New configuration of the recording job.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRecordingJobConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobConfiguration" type="tt:RecordingJobConfiguration">
+							<xs:annotation>
+								<xs:documentation>The JobConfiguration structure shall be the configuration
+							as it is used by the device. This may be different from the JobConfiguration passed to SetRecordingJobConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingJobConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobToken" type="tt:RecordingJobReference">
+							<xs:annotation>
+								<xs:documentation>Token of the recording job.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingJobConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobConfiguration" type="tt:RecordingJobConfiguration">
+							<xs:annotation>
+								<xs:documentation>Current configuration of the recording job.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRecordingJobMode">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobToken" type="tt:RecordingJobReference">
+							<xs:annotation>
+								<xs:documentation>Token of the recording job.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Mode" type="tt:RecordingJobMode">
+							<xs:annotation>
+								<xs:documentation>The new mode for the recording job.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetRecordingJobModeResponse">
+				<xs:complexType>
+					<xs:sequence>
+			          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingJobState">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="JobToken" type="tt:RecordingJobReference">
+							<xs:annotation>
+								<xs:documentation>Token of the recording job.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingJobStateResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="State" type="tt:RecordingJobStateInformation">
+							<xs:annotation>
+								<xs:documentation>The current state of the recording job.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference">
+							<xs:annotation>
+								<xs:documentation>Token of the recording.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="trc:RecordingOptions">
+							<xs:annotation>
+								<xs:documentation>Configuration of the recording.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+
+			<!--===============================-->
+			<xs:element name="ExportRecordedData">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StartPoint" type="xs:dateTime" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional parameter that specifies start time for the exporting.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="EndPoint" type="xs:dateTime" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Optional parameter that specifies end time for the exporting.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="SearchScope" type="tt:SearchScope">
+							<xs:annotation>
+								<xs:documentation>Indicates the selection criterion on the existing recordings. .</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="FileFormat" type="xs:string">
+							<xs:annotation>
+								<xs:documentation>Indicates which export file format to be used.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="StorageDestination" type="tt:StorageReferencePath">
+							<xs:annotation>
+								<xs:documentation>Indicates the target storage and relative directory path.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ExportRecordedDataResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OperationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Unique operation token for client to associate the relevant events.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="FileNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>List of exported file names. The device can also use AsyncronousOperationStatus event to publish this list.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Extension" minOccurs="0">
+							<xs:complexType>
+								<xs:sequence>
+									<xs:any namespace="##any" processContents="lax">	 <!-- first Vendor then ONVIF -->
+										<xs:annotation>
+											<xs:documentation>Extensibility point.</xs:documentation>
+										</xs:annotation>
+									</xs:any>
+								</xs:sequence>
+							</xs:complexType>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+
+			<xs:element name="StopExportRecordedData">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OperationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Unique ExportRecordedData operation token</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="StopExportRecordedDataResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Progress" type="xs:float">
+							<xs:annotation>
+								<xs:documentation>Progress percentage of ExportRecordedData operation.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="FileProgressStatus" type="tt:ArrayOfFileProgress">
+							<xs:annotation>
+								<xs:documentation> </xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax">	 <!-- first Vendor then ONVIF -->
+							<xs:annotation>
+								<xs:documentation>Extensibility point.</xs:documentation>
+							</xs:annotation>
+						</xs:any>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+
+			<xs:element name="GetExportRecordedDataState">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="OperationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Unique ExportRecordedData operation token</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetExportRecordedDataStateResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Progress" type="xs:float">
+							<xs:annotation>
+								<xs:documentation>Progress percentage of ExportRecordedData operation.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="FileProgressStatus" type="tt:ArrayOfFileProgress">
+							<xs:annotation>
+								<xs:documentation> </xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:any namespace="##any" processContents="lax">	 <!-- first Vendor then ONVIF -->
+							<xs:annotation>
+								<xs:documentation>Extensibility point.</xs:documentation>
+							</xs:annotation>
+						</xs:any>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+
+			<!--===============================-->
+			<xs:complexType name="RecordingOptions">
+				<xs:sequence>
+					<xs:element name="Job" type="trc:JobOptions"/>
+					<xs:element name="Track" type="trc:TrackOptions"/>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+			</xs:complexType>
+			<xs:complexType name="JobOptions">
+				<xs:attribute name="Spare" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Number of spare jobs that can be created for the recording.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="CompatibleSources" type="tt:StringAttrList">
+					<xs:annotation>
+						<xs:documentation>A device that supports recording of a restricted set of Media/Media2 Service Profiles returns the list of profiles that can be recorded on the given Recording.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:complexType name="TrackOptions">
+				<xs:attribute name="SpareTotal" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Total spare number of tracks that can be added to this recording.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SpareVideo" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Number of spare Video tracks that can be added to this recording.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SpareAudio" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Number of spare Aduio tracks that can be added to this recording.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SpareMetadata" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Number of spare Metadata tracks that can be added to this recording.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="trc:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="trc:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateRecordingRequest">
+		<wsdl:part name="parameters" element="trc:CreateRecording"/>
+	</wsdl:message>
+	<wsdl:message name="CreateRecordingResponse">
+		<wsdl:part name="parameters" element="trc:CreateRecordingResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteRecordingRequest">
+		<wsdl:part name="parameters" element="trc:DeleteRecording"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteRecordingResponse">
+		<wsdl:part name="parameters" element="trc:DeleteRecordingResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingsRequest">
+		<wsdl:part name="parameters" element="trc:GetRecordings"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingsResponse">
+		<wsdl:part name="parameters" element="trc:GetRecordingsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetRecordingConfigurationRequest">
+		<wsdl:part name="parameters" element="trc:SetRecordingConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetRecordingConfigurationResponse">
+		<wsdl:part name="parameters" element="trc:SetRecordingConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingConfigurationRequest">
+		<wsdl:part name="parameters" element="trc:GetRecordingConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingConfigurationResponse">
+		<wsdl:part name="parameters" element="trc:GetRecordingConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingOptionsRequest">
+		<wsdl:part name="parameters" element="trc:GetRecordingOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingOptionsResponse">
+		<wsdl:part name="parameters" element="trc:GetRecordingOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateTrackRequest">
+		<wsdl:part name="parameters" element="trc:CreateTrack"/>
+	</wsdl:message>
+	<wsdl:message name="CreateTrackResponse">
+		<wsdl:part name="parameters" element="trc:CreateTrackResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteTrackRequest">
+		<wsdl:part name="parameters" element="trc:DeleteTrack"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteTrackResponse">
+		<wsdl:part name="parameters" element="trc:DeleteTrackResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetTrackConfigurationRequest">
+		<wsdl:part name="parameters" element="trc:GetTrackConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetTrackConfigurationResponse">
+		<wsdl:part name="parameters" element="trc:GetTrackConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetTrackConfigurationRequest">
+		<wsdl:part name="parameters" element="trc:SetTrackConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetTrackConfigurationResponse">
+		<wsdl:part name="parameters" element="trc:SetTrackConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateRecordingJobRequest">
+		<wsdl:part name="parameters" element="trc:CreateRecordingJob"/>
+	</wsdl:message>
+	<wsdl:message name="CreateRecordingJobResponse">
+		<wsdl:part name="parameters" element="trc:CreateRecordingJobResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteRecordingJobRequest">
+		<wsdl:part name="parameters" element="trc:DeleteRecordingJob"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteRecordingJobResponse">
+		<wsdl:part name="parameters" element="trc:DeleteRecordingJobResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingJobsRequest">
+		<wsdl:part name="parameters" element="trc:GetRecordingJobs"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingJobsResponse">
+		<wsdl:part name="parameters" element="trc:GetRecordingJobsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetRecordingJobConfigurationRequest">
+		<wsdl:part name="parameters" element="trc:SetRecordingJobConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetRecordingJobConfigurationResponse">
+		<wsdl:part name="parameters" element="trc:SetRecordingJobConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingJobConfigurationRequest">
+		<wsdl:part name="parameters" element="trc:GetRecordingJobConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingJobConfigurationResponse">
+		<wsdl:part name="parameters" element="trc:GetRecordingJobConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetRecordingJobModeRequest">
+		<wsdl:part name="parameters" element="trc:SetRecordingJobMode"/>
+	</wsdl:message>
+	<wsdl:message name="SetRecordingJobModeResponse">
+		<wsdl:part name="parameters" element="trc:SetRecordingJobModeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingJobStateRequest">
+		<wsdl:part name="parameters" element="trc:GetRecordingJobState"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingJobStateResponse">
+		<wsdl:part name="parameters" element="trc:GetRecordingJobStateResponse"/>
+	</wsdl:message>
+
+	<wsdl:message name="ExportRecordedDataRequest">
+		<wsdl:part name="parameters" element="trc:ExportRecordedData"/>
+	</wsdl:message>
+	<wsdl:message name="ExportRecordedDataResponse">
+		<wsdl:part name="parameters" element="trc:ExportRecordedDataResponse"/>
+	</wsdl:message>
+	<wsdl:message name="StopExportRecordedDataRequest">
+		<wsdl:part name="parameters" element="trc:StopExportRecordedData"/>
+	</wsdl:message>
+	<wsdl:message name="StopExportRecordedDataResponse">
+		<wsdl:part name="parameters" element="trc:StopExportRecordedDataResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetExportRecordedDataStateRequest">
+		<wsdl:part name="parameters" element="trc:GetExportRecordedDataState"/>
+	</wsdl:message>
+	<wsdl:message name="GetExportRecordedDataStateResponse">
+		<wsdl:part name="parameters" element="trc:GetExportRecordedDataStateResponse"/>
+	</wsdl:message>
+	
+	<wsdl:portType name="RecordingPort">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the recording service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="trc:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="trc:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateRecording">
+			<wsdl:documentation>CreateRecording shall create a new recording. The new recording shall be created with a track 
+                                for each supported TrackType see Recording Control Spec. <br/>
+				This method is optional. It shall be available if the Recording/DynamicRecordings capability is TRUE. <br/>
+				When successfully completed, CreateRecording shall have created three tracks with the following configurations: <ul>
+					<li>
+				TrackToken TrackType</li>
+					<li>
+					VIDEO001 Video</li>
+					<li>
+						AUDIO001 Audio</li>
+					<li>
+					META001 Metadata</li>
+				</ul>
+				All TrackConfigurations shall have the MaximumRetentionTime set to 0 (unlimited), and the
+				Description set to the empty string.
+			</wsdl:documentation>
+			<wsdl:input message="trc:CreateRecordingRequest"/>
+			<wsdl:output message="trc:CreateRecordingResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteRecording">
+			<wsdl:documentation>DeleteRecording shall delete a recording object. Whenever a recording is deleted, the device
+				shall delete all the tracks that are part of the recording, and it shall delete all the Recording
+				Jobs that record into the recording. For each deleted recording job, the device shall also
+				delete all the receiver objects associated with the recording job that are automatically created
+				using the AutoCreateReceiver field of the recording job configuration structure and are not
+				used in any other recording job.<br/>
+				This method is optional. It shall be available if the Recording/DynamicRecordings capability is TRUE.
+			</wsdl:documentation>
+			<wsdl:input message="trc:DeleteRecordingRequest"/>
+			<wsdl:output message="trc:DeleteRecordingResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordings">
+			<wsdl:documentation>GetRecordings shall return a description of all the recordings in the device. This description
+				shall include a list of all the tracks for each recording.</wsdl:documentation>
+			<wsdl:input message="trc:GetRecordingsRequest"/>
+			<wsdl:output message="trc:GetRecordingsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetRecordingConfiguration">
+			<wsdl:documentation>SetRecordingConfiguration shall change the configuration of a recording.</wsdl:documentation>
+			<wsdl:input message="trc:SetRecordingConfigurationRequest"/>
+			<wsdl:output message="trc:SetRecordingConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingConfiguration">
+			<wsdl:documentation>GetRecordingConfiguration shall retrieve the recording configuration for a recording.</wsdl:documentation>
+			<wsdl:input message="trc:GetRecordingConfigurationRequest"/>
+			<wsdl:output message="trc:GetRecordingConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingOptions">
+			<wsdl:documentation>GetRecordingOptions returns information for a recording identified by the RecordingToken. The information includes the number of additonal tracks as well as recording jobs that can be configured.</wsdl:documentation>
+			<wsdl:input message="trc:GetRecordingOptionsRequest"/>
+			<wsdl:output message="trc:GetRecordingOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateTrack">
+			<wsdl:documentation>This method shall create a new track within a recording.<br/>
+				This method is optional. It shall be available if the Recording/DynamicTracks capability is TRUE.<br/>
+				A TrackToken in itself does not uniquely identify a specific track. Tracks within different
+				recordings may have the same TrackToken.
+			</wsdl:documentation>
+			<wsdl:input message="trc:CreateTrackRequest"/>
+			<wsdl:output message="trc:CreateTrackResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteTrack">
+			<wsdl:documentation>DeleteTrack shall remove a track from a recording. All the data in the track shall be deleted.<br/>
+				This method is optional. It shall be available if the Recording/DynamicTracks capability is
+				TRUE.</wsdl:documentation>
+			<wsdl:input message="trc:DeleteTrackRequest"/>
+			<wsdl:output message="trc:DeleteTrackResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetTrackConfiguration">
+			<wsdl:documentation>GetTrackConfiguration shall retrieve the configuration for a specific track.</wsdl:documentation>
+			<wsdl:input message="trc:GetTrackConfigurationRequest"/>
+			<wsdl:output message="trc:GetTrackConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetTrackConfiguration">
+			<wsdl:documentation>SetTrackConfiguration shall change the configuration of a track.</wsdl:documentation>
+			<wsdl:input message="trc:SetTrackConfigurationRequest"/>
+			<wsdl:output message="trc:SetTrackConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateRecordingJob">
+			<wsdl:documentation>CreateRecordingJob shall create a new recording job.<br/>
+				The JobConfiguration returned from CreateRecordingJob shall be identical to the
+				JobConfiguration passed into CreateRecordingJob, except for the ReceiverToken and the
+				AutoCreateReceiver. In the returned structure, the ReceiverToken shall be present and valid
+				and the AutoCreateReceiver field shall be omitted.
+			</wsdl:documentation>
+			<wsdl:input message="trc:CreateRecordingJobRequest"/>
+			<wsdl:output message="trc:CreateRecordingJobResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteRecordingJob">
+			<wsdl:documentation>DeleteRecordingJob removes a recording job. It shall also implicitly delete all the receiver
+				objects associated with the recording job that are automatically created using the
+				AutoCreateReceiver field of the recording job configuration structure and are not used in any
+				other recording job.</wsdl:documentation>
+			<wsdl:input message="trc:DeleteRecordingJobRequest"/>
+			<wsdl:output message="trc:DeleteRecordingJobResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingJobs">
+			<wsdl:documentation>GetRecordingJobs shall return a list of all the recording jobs in the device.</wsdl:documentation>
+			<wsdl:input message="trc:GetRecordingJobsRequest"/>
+			<wsdl:output message="trc:GetRecordingJobsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetRecordingJobConfiguration">
+			<wsdl:documentation>SetRecordingJobConfiguration shall change the configuration for a recording job.<br/>
+				SetRecordingJobConfiguration shall implicitly delete any receiver objects that were created
+				automatically if they are no longer used as a result of changing the recording job configuration.
+			</wsdl:documentation>
+			<wsdl:input message="trc:SetRecordingJobConfigurationRequest"/>
+			<wsdl:output message="trc:SetRecordingJobConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingJobConfiguration">
+			<wsdl:documentation>GetRecordingJobConfiguration shall return the current configuration for a recording job.</wsdl:documentation>
+			<wsdl:input message="trc:GetRecordingJobConfigurationRequest"/>
+			<wsdl:output message="trc:GetRecordingJobConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetRecordingJobMode">
+			<wsdl:documentation>SetRecordingJobMode shall change the mode of the recording job. Using this method shall be
+				equivalent to retrieving the recording job configuration, and writing it back with a different
+				mode.</wsdl:documentation>
+			<wsdl:input message="trc:SetRecordingJobModeRequest"/>
+			<wsdl:output message="trc:SetRecordingJobModeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingJobState">
+			<wsdl:documentation>GetRecordingJobState returns the state of a recording job. It includes an aggregated state,
+				and state for each track of the recording job.</wsdl:documentation>
+			<wsdl:input message="trc:GetRecordingJobStateRequest"/>
+			<wsdl:output message="trc:GetRecordingJobStateResponse"/>
+		</wsdl:operation>
+
+		<wsdl:operation name="ExportRecordedData">
+			<wsdl:documentation>
+			Exports the selected recordings (from existing recorded data) to the given storage target based on the requested file format. 
+			</wsdl:documentation>
+			<wsdl:input message="trc:ExportRecordedDataRequest"/>
+			<wsdl:output message="trc:ExportRecordedDataResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="StopExportRecordedData">
+			<wsdl:documentation>
+			Stops the selected ExportRecordedData operation. 
+			</wsdl:documentation>
+			<wsdl:input message="trc:StopExportRecordedDataRequest"/>
+			<wsdl:output message="trc:StopExportRecordedDataResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetExportRecordedDataState">
+			<wsdl:documentation>
+			Retrieves the status of selected ExportRecordedData operation. 
+			</wsdl:documentation>
+			<wsdl:input message="trc:GetExportRecordedDataStateRequest"/>
+			<wsdl:output message="trc:GetExportRecordedDataStateResponse"/>
+		</wsdl:operation>
+		
+	</wsdl:portType>
+	<wsdl:binding name="RecordingBinding" type="trc:RecordingPort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateRecording">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/CreateRecording"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteRecording">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/DeleteRecording"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordings">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/GetRecordings"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetRecordingConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateTrack">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/CreateTrack"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteTrack">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/DeleteTrack"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetTrackConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/GetTrackConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetTrackConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/SetTrackConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateRecordingJob">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJob"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteRecordingJob">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJob"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingJobs">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobs"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetRecordingJobConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingJobConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetRecordingJobMode">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobMode"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRecordingJobState">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobState"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+
+		<wsdl:operation name="ExportRecordedData">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/ExportRecordedData"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="StopExportRecordedData">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedData"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetExportRecordedDataState">
+			<soap:operation soapAction="http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataState"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		
+	</wsdl:binding>
+	<!--===============================-->
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/replay.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/replay.wsdl
new file mode 100644
index 0000000..7bb6659
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/replay.wsdl
@@ -0,0 +1,221 @@
+<?xml version="1.0" encoding="utf-8"?>
+<?xml-stylesheet type="text/xsl" href="../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2018 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:trp="http://www.onvif.org/ver10/replay/wsdl" targetNamespace="http://www.onvif.org/ver10/replay/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/replay/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="18.06">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../ver10/schema/onvif.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="trp:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the replay service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	 <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="ReversePlayback" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicator that the Device supports reverse playback as defined in the ONVIF Streaming Specification. </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="SessionTimeoutRange" type="tt:FloatAttrList">
+					<xs:annotation>
+						<xs:documentation>The list contains two elements defining the minimum and maximum valid values supported as session timeout in seconds. </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RTP_RTSP_TCP" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for RTP/RTSP/TCP.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RTSPWebSocketUri" type="xs:anyURI">
+					<xs:annotation>
+						<xs:documentation>If playback streaming over WebSocket is supported, this shall return the RTSP WebSocket URI as described in Streaming Specification Section 5.1.1.5.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="trp:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="GetReplayUri">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StreamSetup" type="tt:StreamSetup">
+							<xs:annotation>
+								<xs:documentation>Specifies the connection parameters to be used for the stream. The URI that is returned may depend on these parameters.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="RecordingToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>The identifier of the recording to be streamed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetReplayUriResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Uri" type="xs:anyURI">
+							<xs:annotation>
+								<xs:documentation>The URI to which the client should connect in order to stream the recording.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetReplayConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:ReplayConfiguration">
+							<xs:annotation>
+								<xs:documentation>Description of the new replay configuration parameters.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetReplayConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetReplayConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetReplayConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Configuration" type="tt:ReplayConfiguration">
+							<xs:annotation>
+								<xs:documentation>The current replay configuration parameters.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="trp:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="trp:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetReplayUriRequest">
+		<wsdl:part name="parameters" element="trp:GetReplayUri"/>
+	</wsdl:message>
+	<wsdl:message name="GetReplayUriResponse">
+		<wsdl:part name="parameters" element="trp:GetReplayUriResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetReplayConfigurationRequest">
+		<wsdl:part name="parameters" element="trp:SetReplayConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetReplayConfigurationResponse">
+		<wsdl:part name="parameters" element="trp:SetReplayConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetReplayConfigurationRequest">
+		<wsdl:part name="parameters" element="trp:GetReplayConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetReplayConfigurationResponse">
+		<wsdl:part name="parameters" element="trp:GetReplayConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="ReplayPort">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the replay service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="trp:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="trp:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetReplayUri">
+			<wsdl:documentation>
+				Requests a URI that can be used to initiate playback of a recorded stream
+				using RTSP as the control protocol. The URI is valid only as it is
+				specified in the response.
+				This operation is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="trp:GetReplayUriRequest"/>
+			<wsdl:output message="trp:GetReplayUriResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetReplayConfiguration">
+			<wsdl:documentation>
+				Returns the current configuration of the replay service.
+				This operation is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="trp:GetReplayConfigurationRequest"/>
+			<wsdl:output message="trp:GetReplayConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetReplayConfiguration">
+			<wsdl:documentation>
+				Changes the current configuration of the replay service.
+				This operation is mandatory.
+			</wsdl:documentation>
+			<wsdl:input message="trp:SetReplayConfigurationRequest"/>
+			<wsdl:output message="trp:SetReplayConfigurationResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="ReplayBinding" type="trp:ReplayPort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetReplayUri">
+			<soap:operation soapAction="http://www.onvif.org/ver10/replay/wsdl/GetReplayUri"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetReplayConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetReplayConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration"/>
+			<wsdl:input>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body parts="parameters" use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/schema/common.xsd b/gsoap/bin/www.onvif.org/onvif/ver10/schema/common.xsd
new file mode 100644
index 0000000..050a564
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/schema/common.xsd
@@ -0,0 +1,305 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--W3C XML Schema generated by XMLSpy v2017 (x64) (http://www.altova.com)-->
+<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" targetNamespace="http://www.onvif.org/ver10/schema" elementFormDefault="qualified" version="18.06">
+	<!--===============================-->
+	<!--         Generic Types         -->
+	<!--===============================-->
+	<xs:simpleType name="ReferenceToken">
+		<xs:annotation>
+			<xs:documentation>Unique identifier for a physical or logical resource.
+			Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
+			Length up to 64 characters.</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:maxLength value="64"/>
+		</xs:restriction>
+	</xs:simpleType>
+    <!--===============================-->
+    <!--    Start PTZ Related Types    -->
+    <!--===============================-->
+	<xs:complexType name="Vector2D">
+		<xs:attribute name="x" type="xs:float" use="required"/>
+		<xs:attribute name="y" type="xs:float" use="required"/>
+		<xs:attribute name="space" type="xs:anyURI" use="optional">
+			<xs:annotation>
+				<xs:documentation>
+  				Pan/tilt coordinate space selector. The following options are defined:<ul>
+						<li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
+						<li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
+						<li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
+						<li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
+					</ul>
+				</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+	</xs:complexType>
+	<xs:complexType name="Vector1D">
+		<xs:attribute name="x" type="xs:float" use="required"/>
+		<xs:attribute name="space" type="xs:anyURI" use="optional">
+			<xs:annotation>
+				<xs:documentation>
+				Zoom coordinate space selector. The following options are defined:<ul style="">
+						<li> http://www.onvif.org/ver10/tptz/ZoomSpaces/PositionGenericSpace</li>
+						<li> http://www.onvif.org/ver10/tptz/ZoomSpaces/TranslationGenericSpace</li>
+						<li> http://www.onvif.org/ver10/tptz/ZoomSpaces/VelocityGenericSpace</li>
+						<li> http://www.onvif.org/ver10/tptz/ZoomSpaces/ZoomGenericSpeedSpace</li>
+					</ul>
+				</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+	</xs:complexType>
+	<xs:complexType name="PTZVector">
+		<xs:sequence>
+			<xs:element name="PanTilt" type="tt:Vector2D" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Pan and tilt position. The x component corresponds to pan and the y component to tilt.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Zoom" type="tt:Vector1D" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+            A zoom position.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<xs:complexType name="PTZStatus">
+		<xs:sequence>
+			<xs:element name="Position" type="tt:PTZVector" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+            Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MoveStatus" type="tt:PTZMoveStatus" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+            Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Error" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+            States a current PTZ error.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="UtcTime" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>
+            Specifies the UTC time when this status was generated.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	<!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<xs:complexType name="PTZMoveStatus">
+		<xs:sequence>
+			<xs:element name="PanTilt" type="tt:MoveStatus" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Zoom" type="tt:MoveStatus" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<xs:simpleType name="MoveStatus">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="IDLE"/>
+			<xs:enumeration value="MOVING"/>
+			<xs:enumeration value="UNKNOWN"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<!--  Event and Analytics Types    -->
+	<!--===============================-->
+	<xs:complexType name="Vector">
+		<xs:attribute name="x" type="xs:float"/>
+		<xs:attribute name="y" type="xs:float"/>
+	</xs:complexType>
+	<xs:complexType name="Rectangle">
+		<xs:attribute name="bottom" type="xs:float"/>
+		<xs:attribute name="top" type="xs:float"/>
+		<xs:attribute name="right" type="xs:float"/>
+		<xs:attribute name="left" type="xs:float"/>
+	</xs:complexType>
+	<xs:complexType name="Polygon">
+		<xs:sequence>
+			<xs:element name="Point" type="tt:Vector" minOccurs="3" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<xs:element name="Polygon" type="tt:Polygon"/>
+	<xs:complexType name="Color">
+		<xs:attribute name="X" type="xs:float" use="required"/>
+		<xs:attribute name="Y" type="xs:float" use="required"/>
+		<xs:attribute name="Z" type="xs:float" use="required"/>
+		<xs:attribute name="Colorspace" type="xs:anyURI"/>
+	</xs:complexType>
+	<xs:complexType name="ColorCovariance">
+		<xs:attribute name="XX" type="xs:float" use="required"/>
+		<xs:attribute name="YY" type="xs:float" use="required"/>
+		<xs:attribute name="ZZ" type="xs:float" use="required"/>
+		<xs:attribute name="XY" type="xs:float"/>
+		<xs:attribute name="XZ" type="xs:float"/>
+		<xs:attribute name="YZ" type="xs:float"/>
+		<xs:attribute name="Colorspace" type="xs:anyURI"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--       Scene Description Types -->
+	<!--===============================-->
+	<xs:complexType name="Transformation">
+		<xs:sequence>
+			<xs:element name="Translate" type="tt:Vector" minOccurs="0"/>
+			<xs:element name="Scale" type="tt:Vector" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:TransformationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<xs:complexType name="TransformationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>	<!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--  Location/Orientation Types   -->
+	<!--===============================-->
+	<xs:complexType name="GeoLocation">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:attribute name="lon" type="xs:double">
+			<xs:annotation>
+				<xs:documentation>East west location as angle.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="lat" type="xs:double">
+			<xs:annotation>
+				<xs:documentation>North south location as angle.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="elevation" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>Hight in meters above sea level.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="GeoOrientation">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:attribute name="roll" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>Rotation around the x axis.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="pitch" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>Rotation around the y axis.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="yaw" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>Rotation around the z axis.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="LocalLocation">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:attribute name="x" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>East west location as angle.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="y" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>North south location as angle.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="z" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>Offset in meters from the sea level.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="LocalOrientation">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:attribute name="pan" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>Rotation around the y axis.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="tilt" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>Rotation around the z axis.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="roll" type="xs:float">
+			<xs:annotation>
+				<xs:documentation>Rotation around the x axis.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="Entity">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Device"/>
+			<xs:enumeration value="VideoSource"/>
+			<xs:enumeration value="AudioSource"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="LocationEntity">
+		<xs:sequence>
+			<xs:element name="GeoLocation" type="tt:GeoLocation" minOccurs="0">
+				<xs:annotation><xs:documentation>Location on earth.</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:element name="GeoOrientation" type="tt:GeoOrientation" minOccurs="0">
+				<xs:annotation><xs:documentation>Orientation relative to earth.</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:element name="LocalLocation" type="tt:LocalLocation" minOccurs="0">
+				<xs:annotation><xs:documentation>Indoor location offset.</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:element name="LocalOrientation" type="tt:LocalOrientation" minOccurs="0">
+				<xs:annotation><xs:documentation>Indoor orientation offset.</xs:documentation></xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:attribute name="Entity" type="xs:string">
+			<xs:annotation><xs:documentation>Entity type the entry refers to, use a value from the tt:Entity enumeration.</xs:documentation></xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="Token" type="tt:ReferenceToken">
+			<xs:annotation><xs:documentation>Optional entity token.</xs:documentation></xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="Fixed" type="xs:boolean">
+			<xs:annotation><xs:documentation>If this value is true the entity cannot be deleted.</xs:documentation></xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="GeoSource" type="xs:anyURI">
+			<xs:annotation><xs:documentation>Optional reference to the XAddr of another devices DeviceManagement service.</xs:documentation></xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="AutoGeo" type="xs:boolean">
+			<xs:annotation><xs:documentation>If set the geo location is obtained internally.</xs:documentation></xs:annotation>
+		</xs:attribute>
+	</xs:complexType>
+	<!--===============================-->
+</xs:schema>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/schema/onvif.xsd b/gsoap/bin/www.onvif.org/onvif/ver10/schema/onvif.xsd
new file mode 100644
index 0000000..a2da7d8
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/schema/onvif.xsd
@@ -0,0 +1,8819 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--<?xml-stylesheet type="text/xsl" href="onvif-schema-viewer.xsl"?>-->
+<!--
+Copyright (c) 2008-2018 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<xs:schema xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:xop="http://www.w3.org/2004/08/xop/include" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" targetNamespace="http://www.onvif.org/ver10/schema" elementFormDefault="qualified" version="18.06">
+	<xs:include schemaLocation="common.xsd"/>
+	<xs:import namespace="http://www.w3.org/2005/05/xmlmime" schemaLocation="http://www.w3.org/2005/05/xmlmime"/>
+	<xs:import namespace="http://www.w3.org/2003/05/soap-envelope" schemaLocation="http://www.w3.org/2003/05/soap-envelope"/>
+	<xs:import namespace="http://docs.oasis-open.org/wsn/b-2" schemaLocation="http://docs.oasis-open.org/wsn/b-2.xsd"/>
+	<xs:import namespace="http://www.w3.org/2004/08/xop/include" schemaLocation="http://www.w3.org/2004/08/xop/include"/>
+	<!--===============================-->
+	<!--         Generic Types         -->
+	<!--===============================-->
+	<xs:complexType name="DeviceEntity">
+		<xs:annotation>
+			<xs:documentation>Base class for physical entities like inputs and outputs.</xs:documentation>
+		</xs:annotation>
+		<xs:attribute name="token" type="tt:ReferenceToken" use="required">
+			<xs:annotation>
+				<xs:documentation>Unique identifier referencing the physical entity.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="Name">
+		<xs:annotation>
+			<xs:documentation>User readable name. Length up to 64 characters.</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:maxLength value="64"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="IntRectangle">
+		<xs:annotation>
+			<xs:documentation>Rectangle defined by lower left corner position and size. Units are pixel.</xs:documentation>
+		</xs:annotation>
+		<xs:attribute name="x" type="xs:int" use="required"/>
+		<xs:attribute name="y" type="xs:int" use="required"/>
+		<xs:attribute name="width" type="xs:int" use="required"/>
+		<xs:attribute name="height" type="xs:int" use="required"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IntRectangleRange">
+		<xs:annotation>
+			<xs:documentation>Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="XRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Range of X-axis.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="YRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Range of Y-axis.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WidthRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Range of width.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="HeightRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Range of height.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IntRange">
+		<xs:annotation>
+			<xs:documentation>Range of values greater equal Min value and less equal Max value.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Min" type="xs:int"/>
+			<xs:element name="Max" type="xs:int"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FloatRange">
+		<xs:annotation>
+			<xs:documentation>Range of values greater equal Min value and less equal Max value.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Min" type="xs:float"/>
+			<xs:element name="Max" type="xs:float"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DurationRange">
+		<xs:annotation>
+			<xs:documentation>Range of duration greater equal Min duration and less equal Max duration.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Min" type="xs:duration"/>
+			<xs:element name="Max" type="xs:duration"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IntList">
+		<xs:annotation>
+			<xs:documentation>List of values.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Items" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="IntAttrList">
+		<xs:list itemType="xs:int"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="FloatAttrList">
+		<xs:list itemType="xs:float"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="StringAttrList">
+		<xs:list itemType="xs:string"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="ReferenceTokenList">
+		<xs:list itemType="tt:ReferenceToken"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="FloatList">
+		<xs:sequence>
+			<xs:element name="Items" type="xs:float" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnyHolder">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--      End, Generic Types       -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--      Media Related Types      -->
+	<!--===============================-->
+	<xs:complexType name="VideoSource">
+		<xs:annotation>
+			<xs:documentation>Representation of a physical video input.</xs:documentation>
+		</xs:annotation>
+		<xs:complexContent>
+			<xs:extension base="tt:DeviceEntity">
+				<xs:sequence>
+					<xs:element name="Framerate" type="xs:float">
+						<xs:annotation>
+							<xs:documentation>Frame rate in frames per second.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Resolution" type="tt:VideoResolution">
+						<xs:annotation>
+							<xs:documentation>Horizontal and vertical resolution</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Imaging" type="tt:ImagingSettings" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Optional configuration of the image sensor.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tt:VideoSourceExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoSourceExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Imaging" type="tt:ImagingSettings20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:VideoSourceExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoSourceExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AudioSource">
+		<xs:annotation>
+			<xs:documentation>Representation of a physical audio input.</xs:documentation>
+		</xs:annotation>
+		<xs:complexContent>
+			<xs:extension base="tt:DeviceEntity">
+				<xs:sequence>
+					<xs:element name="Channels" type="xs:int">
+						<xs:annotation>
+							<xs:documentation>number of available audio channels. (1: mono, 2: stereo) </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Profile">
+		<xs:annotation>
+			<xs:documentation>
+			A media profile consists of a set of media configurations. Media profiles are used by a client
+			to configure properties of a media stream from an NVT.<br/>
+			An NVT shall provide at least one media profile at boot. An NVT should provide “ready to use”
+			profiles for the most common media configurations that the device offers.<br/>
+			A profile consists of a set of interconnected configuration entities. Configurations are provided
+			by the NVT and can be either static or created dynamically by the NVT. For example, the
+			dynamic configurations can be created by the NVT depending on current available encoding
+			resources.
+		</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Name" type="tt:Name">
+				<xs:annotation>
+					<xs:documentation>User readable name of the profile.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="VideoSourceConfiguration" type="tt:VideoSourceConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the Video input.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AudioSourceConfiguration" type="tt:AudioSourceConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the Audio input.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="VideoEncoderConfiguration" type="tt:VideoEncoderConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the Video encoder.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AudioEncoderConfiguration" type="tt:AudioEncoderConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the Audio encoder.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="VideoAnalyticsConfiguration" type="tt:VideoAnalyticsConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the video analytics module and rule engine.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PTZConfiguration" type="tt:PTZConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the pan tilt zoom unit.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MetadataConfiguration" type="tt:MetadataConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the metadata stream.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ProfileExtension" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Extensions defined in ONVIF 2.0</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:attribute name="token" type="tt:ReferenceToken" use="required">
+			<xs:annotation>
+				<xs:documentation>Unique identifier of the profile.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="fixed" type="xs:boolean">
+			<xs:annotation>
+				<xs:documentation>A value of true signals that the profile cannot be deleted. Default is false.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ProfileExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="AudioOutputConfiguration" type="tt:AudioOutputConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the Audio output.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AudioDecoderConfiguration" type="tt:AudioDecoderConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional configuration of the Audio decoder.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ProfileExtension2" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ProfileExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:element name="VideoSourceConfiguration" type="tt:VideoSourceConfiguration"/>
+	<xs:element name="AudioSourceConfiguration" type="tt:AudioSourceConfiguration"/>
+	<xs:element name="VideoEncoderConfiguration" type="tt:VideoEncoderConfiguration"/>
+	<xs:element name="AudioEncoderConfiguration" type="tt:AudioEncoderConfiguration"/>
+	<xs:element name="VideoAnalyticsConfiguration" type="tt:VideoAnalyticsConfiguration"/>
+	<xs:element name="PTZConfiguration" type="tt:PTZConfiguration"/>
+	<xs:element name="MetadataConfiguration" type="tt:MetadataConfiguration"/>
+	<xs:element name="AudioOutputConfiguration" type="tt:AudioOutputConfiguration"/>
+	<xs:element name="AudioDecoderConfiguration" type="tt:AudioDecoderConfiguration"/>
+	<!--===============================-->
+	<xs:complexType name="ConfigurationEntity">
+		<xs:annotation>
+			<xs:documentation>Base type defining the common properties of a configuration.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Name" type="tt:Name">
+				<xs:annotation>
+					<xs:documentation>User readable name. Length up to 64 characters.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="UseCount" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p></xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:attribute name="token" type="tt:ReferenceToken" use="required">
+			<xs:annotation>
+				<xs:documentation>Token that uniquely references this configuration. Length up to 64 characters.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+	</xs:complexType>
+	<!--===============================-->
+	<!--   VideoSourceConfiguration   -->
+	<!--===============================-->
+	<xs:complexType name="VideoSourceConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="SourceToken" type="tt:ReferenceToken">
+						<xs:annotation>
+							<xs:documentation>Reference to the physical input.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Bounds" type="tt:IntRectangle">
+						<xs:annotation>
+							<xs:documentation>Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					<xs:element name="Extension" type="tt:VideoSourceConfigurationExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:attribute name="ViewMode" type="xs:string">
+					<xs:annotation>
+						<xs:documentation>Readonly parameter signalling Source configuration's view mode, for devices supporting different view modes as defined in tt:viewModes.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoSourceConfigurationExtension">
+		<xs:sequence>
+			<xs:element name="Rotate" type="tt:Rotate" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional element to configure rotation of captured image.
+						What resolutions a device supports shall be unaffected by the Rotate parameters.<br/>
+						If a device is configured with Rotate=AUTO, the device shall take control over the Degree parameter and automatically update it so that a client can query current rotation.<br/>
+						The device shall automatically apply the same rotation to its pan/tilt control direction depending on the following condition: 
+						if Reverse=AUTO in PTControlDirection or if the device doesn’t support Reverse in PTControlDirection
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:VideoSourceConfigurationExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoSourceConfigurationExtension2">
+		<xs:sequence>
+			<xs:element name="LensDescription" type="tt:LensDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation><xs:documentation>Optional element describing the geometric lens distortion. Multiple instances for future variable lens support.</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:element name="SceneOrientation" type="tt:SceneOrientation" minOccurs="0" maxOccurs="1">
+				<xs:annotation><xs:documentation>Optional element describing the scene orientation in the camera’s field of view.</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Rotate">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:RotateMode">
+				<xs:annotation>
+					<xs:documentation>Parameter to enable/disable Rotation feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Degree" type="xs:int" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional parameter to configure how much degree of clockwise rotation of image  for On mode. Omitting this parameter for On mode means 180 degree rotation.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:RotateExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RotateExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="RotateMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="OFF">
+				<xs:annotation><xs:documentation>Enable the Rotate feature. Degree of rotation is specified Degree parameter.</xs:documentation></xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="ON">
+			<xs:annotation><xs:documentation>Disable the Rotate feature.</xs:documentation></xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="AUTO">
+				<xs:annotation><xs:documentation>Rotate feature is automatically activated by the device.</xs:documentation></xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="LensProjection">
+		<xs:sequence>
+			<xs:element name="Angle" type="xs:float">
+				<xs:annotation><xs:documentation>Angle of incidence.</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:element name="Radius" type="xs:float">
+				<xs:annotation><xs:documentation>Mapping radius as a consequence of the emergent angle.</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:element name="Transmittance" type="xs:float" minOccurs="0">
+				<xs:annotation><xs:documentation>Optional ray absorption at the given angle due to vignetting. A value of one means no absorption.</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="LensOffset">
+		<xs:attribute name="x" type="xs:float">
+			<xs:annotation><xs:documentation>Optional horizontal offset of the lens center in normalized coordinates.</xs:documentation></xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="y" type="xs:float">
+			<xs:annotation><xs:documentation>Optional vertical offset of the lens center in normalized coordinates.</xs:documentation></xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="LensDescription">
+		<xs:sequence>
+			<xs:element name="Offset" type="tt:LensOffset">
+				<xs:annotation><xs:documentation>Offset of the lens center to the imager center in normalized coordinates.</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:element name="Projection" type="tt:LensProjection" maxOccurs="unbounded">
+				<xs:annotation><xs:documentation>Radial description of the projection characteristics. The resulting curve is defined by the B-Spline interpolation 
+					over the given elements. The element for Radius zero shall not be provided. The projection points shall be ordered with ascending Radius. 
+					Items outside the last projection Radius shall be assumed to be invisible (black).</xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:element name="XFactor" type="xs:float">
+				<xs:annotation><xs:documentation>Compensation of the x coordinate needed for the ONVIF normalized coordinate system. </xs:documentation></xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:attribute name="FocalLength" type="xs:float">
+			<xs:annotation><xs:documentation>Optional focal length of the optical system.</xs:documentation></xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoSourceConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="BoundsRange" type="tt:IntRectangleRange">
+				<xs:annotation>
+					<xs:documentation>
+						Supported range for the capturing area.
+						Device that does not support cropped streaming shall express BoundsRange option as mentioned below
+						BoundsRange->XRange and BoundsRange->YRange with same Min/Max values HeightRange and WidthRange Min/Max values same as VideoSource Height and Width Limits.
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="VideoSourceTokensAvailable" type="tt:ReferenceToken" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of physical inputs.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:VideoSourceConfigurationOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:attribute name="MaximumNumberOfProfiles" type="xs:int">
+			<xs:annotation>
+				<xs:documentation>Maximum number of profiles.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoSourceConfigurationOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Rotate" type="tt:RotateOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Options of parameters for Rotation feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:VideoSourceConfigurationOptionsExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoSourceConfigurationOptionsExtension2">
+		<xs:sequence>
+			<xs:element name="SceneOrientationMode" type="tt:SceneOrientationMode" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Scene orientation modes supported by the device for this configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RotateOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:RotateMode" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Supported options of Rotate mode parameter.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DegreeList" type="tt:IntList" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>List of supported degree value for rotation.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:RotateOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RotateOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--    Scene Orientation    -->
+	<!--===============================-->
+	<xs:simpleType name="SceneOrientationMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="MANUAL" />
+			<xs:enumeration value="AUTO" />
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="SceneOrientationOption">
+		<xs:restriction base="xs:string">
+			<xs:annotation>
+				<xs:documentation>
+					Defines the acceptable values for the Orientation element of the SceneOrientation type
+				</xs:documentation>
+			</xs:annotation>
+			<xs:enumeration value="Below" />
+			<xs:enumeration value="Horizon" />
+			<xs:enumeration value="Above" />
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="SceneOrientation">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:SceneOrientationMode">
+				<xs:annotation>
+					<xs:documentation>
+						Parameter to assign the way the camera determines the scene orientation.
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>      
+			<xs:element name="Orientation" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+						Assigned or determined scene orientation based on the Mode. When assigning the Mode to AUTO, this field 
+						is optional and will be ignored by the device. When assigning the Mode to MANUAL, this field is required 
+						and the device will return an InvalidArgs fault if missing. 
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="ViewModes">
+		<xs:annotation>
+			<xs:documentation>Source view modes supported by device.</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="tt:Fisheye">
+				<xs:annotation>	
+					<xs:documentation>Undewarped viewmode from device supporting fisheye lens.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="tt:360Panorama">
+				<xs:annotation>
+					<xs:documentation>360 degree panoramic view.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="tt:180Panorama">
+				<xs:annotation>
+					<xs:documentation>180 degree panoramic view.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="tt:Quad">
+				<xs:annotation>
+					<xs:documentation>View mode combining four streams in single Quad, eg., applicable for devices supporting four heads.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="tt:Original">
+				<xs:annotation>
+					<xs:documentation>Unaltered view from the sensor.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="tt:LeftHalf">
+				<xs:annotation>
+					<xs:documentation>Viewmode combining the left side sensors, applicable for devices supporting multiple sensors.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="tt:RightHalf">
+				<xs:annotation>	
+					<xs:documentation>Viewmode combining the right side sensors, applicable for devices supporting multiple sensors.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="tt:Dewarp">
+				<xs:annotation>
+					<xs:documentation>Dewarped view mode for device supporting fisheye lens.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<!--   VideoEncoderConfiguration   -->
+	<!--===============================-->
+	<xs:complexType name="VideoEncoderConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="Encoding" type="tt:VideoEncoding">
+						<xs:annotation>
+							<xs:documentation>Used video codec, either Jpeg, H.264 or Mpeg4</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Resolution" type="tt:VideoResolution">
+						<xs:annotation>
+							<xs:documentation>Configured video resolution</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Quality" type="xs:float">
+						<xs:annotation>
+							<xs:documentation>Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="RateControl" type="tt:VideoRateControl" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Optional element to configure rate control related parameters.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="MPEG4" type="tt:Mpeg4Configuration" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Optional element to configure Mpeg4 related parameters.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="H264" type="tt:H264Configuration" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Optional element to configure H.264 related parameters.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Multicast" type="tt:MulticastConfiguration">
+						<xs:annotation>
+							<xs:documentation>Defines the multicast settings that could be used for video streaming.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="SessionTimeout" type="xs:duration">
+						<xs:annotation>
+							<xs:documentation>The rtsp session timeout for the related video stream</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="VideoEncoding">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="JPEG"/>
+			<xs:enumeration value="MPEG4"/>
+			<xs:enumeration value="H264"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="Mpeg4Profile">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="SP"/>
+			<xs:enumeration value="ASP"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="H264Profile">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Baseline"/>
+			<xs:enumeration value="Main"/>
+			<xs:enumeration value="Extended"/>
+			<xs:enumeration value="High"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="VideoResolution">
+		<xs:sequence>
+			<xs:element name="Width" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Number of the columns of the Video image.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Height" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Number of the lines of the Video image.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoRateControl">
+		<xs:sequence>
+			<xs:element name="FrameRateLimit" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="EncodingInterval" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="BitrateLimit" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>the maximum output bitrate in kbps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Mpeg4Configuration">
+		<xs:sequence>
+			<xs:element name="GovLength" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Mpeg4Profile" type="tt:Mpeg4Profile">
+				<xs:annotation>
+					<xs:documentation>the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="H264Configuration">
+		<xs:sequence>
+			<xs:element name="GovLength" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="H264Profile" type="tt:H264Profile">
+				<xs:annotation>
+					<xs:documentation>the H.264 profile, either baseline, main, extended or high</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoEncoderConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="QualityRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Range of the quality values. A high value means higher quality.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="JPEG" type="tt:JpegOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional JPEG encoder settings ranges (See also Extension element).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MPEG4" type="tt:Mpeg4Options" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional MPEG-4 encoder settings ranges (See also Extension element).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="H264" type="tt:H264Options" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional H.264 encoder settings ranges (See also Extension element).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:VideoEncoderOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoEncoderOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="JPEG" type="tt:JpegOptions2" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional JPEG encoder settings ranges.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MPEG4" type="tt:Mpeg4Options2" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional MPEG-4 encoder settings ranges.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="H264" type="tt:H264Options2" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional H.264 encoder settings ranges.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:VideoEncoderOptionsExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoEncoderOptionsExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="JpegOptions">
+		<xs:sequence>
+			<xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported image sizes.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FrameRateRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported frame rate in fps (frames per second).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="EncodingIntervalRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="JpegOptions2">
+		<xs:complexContent>
+			<xs:extension base="tt:JpegOptions">
+				<xs:sequence>
+					<xs:element name="BitrateRange" type="tt:IntRange">
+						<xs:annotation>
+							<xs:documentation>Supported range of encoded bitrate in kbps.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Mpeg4Options">
+		<xs:sequence>
+			<xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported image sizes.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="GovLengthRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported group of Video frames length. This value typically corresponds to the I-Frame distance.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FrameRateRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported frame rate in fps (frames per second).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="EncodingIntervalRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Mpeg4ProfilesSupported" type="tt:Mpeg4Profile" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported MPEG-4 profiles.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Mpeg4Options2">
+		<xs:complexContent>
+			<xs:extension base="tt:Mpeg4Options">
+				<xs:sequence>
+					<xs:element name="BitrateRange" type="tt:IntRange">
+						<xs:annotation>
+							<xs:documentation>Supported range of encoded bitrate in kbps.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="H264Options">
+		<xs:sequence>
+			<xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported image sizes.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="GovLengthRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported group of Video frames length. This value typically corresponds to the I-Frame distance.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FrameRateRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported frame rate in fps (frames per second).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="EncodingIntervalRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="H264ProfilesSupported" type="tt:H264Profile" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported H.264 profiles.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="H264Options2">
+		<xs:complexContent>
+			<xs:extension base="tt:H264Options">
+				<xs:sequence>
+					<xs:element name="BitrateRange" type="tt:IntRange">
+						<xs:annotation>
+							<xs:documentation>Supported range of encoded bitrate in kbps.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<!--   VideoEncoder2Configuration   -->
+	<!--===============================-->
+	<xs:simpleType name="VideoEncodingMimeNames">
+		<xs:annotation>
+			<xs:documentation>ONVIF prominent MIME type names as referenced by IANA. See also <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="JPEG"/>
+			<xs:enumeration value="MPV4-ES"/>
+			<xs:enumeration value="H264"/>
+			<xs:enumeration value="H265"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="VideoEncodingProfiles">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Simple"/>			<!-- MPEG4 SP -->
+			<xs:enumeration value="AdvancedSimple"/>	<!-- MPEG4 ASP -->
+			<xs:enumeration value="Baseline"/>			<!-- H264 Baseline -->
+			<xs:enumeration value="Main"/>				<!-- H264 Main, H.265 Main -->
+			<xs:enumeration value="Main10"/>			<!-- H265 Main 10 -->
+			<xs:enumeration value="Extended"/>			<!-- H264 Extended -->
+			<xs:enumeration value="High"/>				<!-- H264 High -->
+		</xs:restriction>
+	</xs:simpleType>
+	<xs:complexType name="VideoEncoder2Configuration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="Encoding" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>Mime name of the supported video format. For name definitions see tt:VideoEncodingMimeNames and <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Resolution" type="tt:VideoResolution2">
+						<xs:annotation>
+							<xs:documentation>Configured video resolution</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="RateControl" type="tt:VideoRateControl2" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Optional element to configure rate control related parameters.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Multicast" type="tt:MulticastConfiguration" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Defines the multicast settings that could be used for video streaming.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Quality" type="xs:float">
+						<xs:annotation>
+							<xs:documentation>Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+				</xs:sequence>
+				<xs:attribute name="GovLength" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Profile" type="xs:string">
+					<xs:annotation>
+						<xs:documentation>The encoder profile as defined in tt:VideoEncodingProfiles.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoResolution2">
+		<xs:sequence>
+			<xs:element name="Width" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Number of the columns of the Video image.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Height" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Number of the lines of the Video image.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoRateControl2">
+		<xs:sequence>
+			<xs:element name="FrameRateLimit" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>Desired frame rate in fps. The actual rate may be lower due to e.g. performance limitations.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="BitrateLimit" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>the maximum output bitrate in kbps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:attribute name="ConstantBitRate" type="xs:boolean">
+			<xs:annotation>
+				<xs:documentation>Enforce constant bitrate.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoEncoder2ConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="Encoding" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Mime name of the supported Video format. For name definitions see tt:VideoEncodingMimeNames and <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="QualityRange" type="tt:FloatRange">
+				<xs:annotation>
+					<xs:documentation>Range of the quality values. A high value means higher quality.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ResolutionsAvailable" type="tt:VideoResolution2" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported image sizes.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="BitrateRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported range of encoded bitrate in kbps.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:attribute name="GovLengthRange" type="tt:IntAttrList">
+			<xs:annotation>
+				<xs:documentation>Exactly two values, which define the Lower and Upper bounds for the supported group of Video frames length. These values typically correspond to the I-Frame distance.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="FrameRatesSupported" type="tt:FloatAttrList">
+			<xs:annotation>
+				<xs:documentation>List of supported target frame rates in fps (frames per second). The list shall be sorted with highest values first.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="ProfilesSupported" type="tt:StringAttrList">
+			<xs:annotation>
+				<xs:documentation>List of supported encoder profiles as defined in tt::VideoEncodingProfiles.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="ConstantBitRateSupported" type="xs:boolean">
+			<xs:annotation>
+				<xs:documentation>Signal whether enforcing constant bitrate is supported.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--    AudioSourceConfiguration   -->
+	<!--===============================-->
+	<xs:complexType name="AudioSourceConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="SourceToken" type="tt:ReferenceToken">
+						<xs:annotation>
+							<xs:documentation>Token of the Audio Source the configuration applies to</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AudioSourceConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="InputTokensAvailable" type="tt:ReferenceToken" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Tokens of the audio source the configuration can be used for.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:AudioSourceOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AudioSourceOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--   AudioEncoderConfiguration   -->
+	<!--===============================-->
+	<xs:complexType name="AudioEncoderConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="Encoding" type="tt:AudioEncoding">
+						<xs:annotation>
+							<xs:documentation>Audio codec used for encoding the audio input (either G.711, G.726 or AAC)</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Bitrate" type="xs:int">
+						<xs:annotation>
+							<xs:documentation>The output bitrate in kbps.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="SampleRate" type="xs:int">
+						<xs:annotation>
+							<xs:documentation>The output sample rate in kHz.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Multicast" type="tt:MulticastConfiguration">
+						<xs:annotation>
+							<xs:documentation>Defines the multicast settings that could be used for video streaming.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="SessionTimeout" type="xs:duration">
+						<xs:annotation>
+							<xs:documentation>The rtsp session timeout for the related audio stream</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="AudioEncoding">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="G711"/>
+			<xs:enumeration value="G726"/>
+			<xs:enumeration value="AAC"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="AudioEncoderConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="Options" type="tt:AudioEncoderConfigurationOption" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>list of supported AudioEncoderConfigurations</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AudioEncoderConfigurationOption">
+		<xs:sequence>
+			<xs:element name="Encoding" type="tt:AudioEncoding">
+				<xs:annotation>
+					<xs:documentation>The enoding used for audio data (either G.711, G.726 or AAC)</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="BitrateList" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported bitrates in kbps for the specified Encoding</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SampleRateList" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported Sample Rates in kHz for the specified Encoding</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--   AudioEncoder2Configuration   -->
+	<!--===============================-->
+	<xs:simpleType name="AudioEncodingMimeNames">
+		<xs:annotation>
+			<xs:documentation>ONVIF prominent MIME type names as referenced by IANA. See also <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a> .</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="PCMU"/>		<!-- G.711 uLaw -->
+			<xs:enumeration value="G726"/>
+			<xs:enumeration value="MP4A-LATM"/>		<!-- AAC -->
+		</xs:restriction>
+	</xs:simpleType>
+
+	<xs:complexType name="AudioEncoder2Configuration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="Encoding" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>Mime name of the supported audio format. For definitions see tt:AudioEncodingMimeNames and <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Multicast" type="tt:MulticastConfiguration" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Optional multicast configuration of the audio stream.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Bitrate" type="xs:int">
+						<xs:annotation>
+							<xs:documentation>The output bitrate in kbps.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="SampleRate" type="xs:int">
+						<xs:annotation>
+							<xs:documentation>The output sample rate in kHz.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<!-- Options used for both Audio encoder and decoder -->
+	<xs:complexType name="AudioEncoder2ConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="Encoding" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Mime name of the supported audio format. For definitions see tt:AudioEncodingMimeNames and <a href='http://www.iana.org/assignments/media-types/media-types.xhtml'>IANA Media Types</a>.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="BitrateList" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported bitrates in kbps for the specified Encoding</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SampleRateList" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported Sample Rates in kHz for the specified Encoding</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--  VideoAnalyticsConfiguration  -->
+	<!--===============================-->
+	<xs:complexType name="VideoAnalyticsConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="AnalyticsEngineConfiguration" type="tt:AnalyticsEngineConfiguration"/>
+					<xs:element name="RuleEngineConfiguration" type="tt:RuleEngineConfiguration"/>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<!--    MetadataConfiguration      -->
+	<!--===============================-->
+	<xs:complexType name="MetadataConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="PTZStatus" type="tt:PTZFilter" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>optional element to configure which PTZ related data is to include in the metadata stream</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Events" type="tt:EventSubscription" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Optional element to configure the streaming of events. A client might be interested in receiving all, 
+								none or some of the events produced by the device:<ul>
+									<li>To get all events: Include the Events element but do not include a filter.</li>
+									<li>To get no events: Do not include the Events element.</li>
+									<li>To get only some events: Include the Events element and include a filter in the element.</li>
+								</ul>
+							</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Analytics" type="xs:boolean" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Defines whether the streamed metadata will include metadata from the analytics engines (video, cell motion, audio etc.)</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Multicast" type="tt:MulticastConfiguration">
+						<xs:annotation>
+							<xs:documentation>Defines the multicast settings that could be used for video streaming.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="SessionTimeout" type="xs:duration">
+						<xs:annotation>
+							<xs:documentation>The rtsp session timeout for the related audio stream (when using Media2 Service, this value is deprecated and ignored)</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					<xs:element name="AnalyticsEngineConfiguration" type="tt:AnalyticsEngineConfiguration" minOccurs="0"/>
+					<xs:element name="Extension" type="tt:MetadataConfigurationExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:attribute name="CompressionType" type="xs:string">
+					<xs:annotation>
+						<xs:documentation>Optional parameter to configure compression type of Metadata payload. Use values from enumeration MetadataCompressionType.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="GeoLocation" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Optional parameter to configure if the metadata stream shall contain the Geo Location coordinates of each target.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MetadataConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZFilter">
+		<xs:sequence>
+			<xs:element name="Status" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Position" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>True if the metadata stream shall contain the PTZ position</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="EventSubscription">
+		<xs:annotation>
+			<xs:documentation>Subcription handling in the same way as base notification subscription.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Filter" type="wsnt:FilterType" minOccurs="0"/>
+			<xs:element name="SubscriptionPolicy" minOccurs="0">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MetadataConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="PTZStatusFilterOptions" type="tt:PTZStatusFilterOptions"/>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name ="Extension" type="tt:MetadataConfigurationOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:attribute name="GeoLocation" type="xs:boolean">
+			<xs:annotation>
+				<xs:documentation>True if the device is able to stream the Geo Located positions of each target.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MetadataConfigurationOptionsExtension">
+		<xs:sequence>
+			<xs:element name="CompressionType" type="xs:string" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported metadata compression type. Its options shall be chosen from tt:MetadataCompressionType.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:MetadataConfigurationOptionsExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MetadataConfigurationOptionsExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="MetadataCompressionType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="None"/>
+			<xs:enumeration value="GZIP"/>
+			<xs:enumeration value="EXI"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="PTZStatusFilterOptions">
+		<xs:sequence>
+			<xs:element name="PanTiltStatusSupported" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>True if the device is able to stream pan or tilt status information.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ZoomStatusSupported" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>True if the device is able to stream zoom status inforamtion.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="PanTiltPositionSupported" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>True if the device is able to stream the pan or tilt position.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ZoomPositionSupported" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>True if the device is able to stream zoom position information.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZStatusFilterOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZStatusFilterOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          VideoOutput            -->
+	<!--===============================-->
+	<xs:complexType name="VideoOutput">
+		<xs:annotation>
+			<xs:documentation>Representation of a physical video outputs.</xs:documentation>
+		</xs:annotation>
+		<xs:complexContent>
+			<xs:extension base="tt:DeviceEntity">
+				<xs:sequence>
+					<xs:element name="Layout" type="tt:Layout"/>
+					<xs:element name="Resolution" type="tt:VideoResolution" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Resolution of the display in Pixel.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="RefreshRate" type="xs:float" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Refresh rate of the display in Hertz.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="AspectRatio" type="xs:float" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Aspect ratio of the display as physical extent of width divided by height.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tt:VideoOutputExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoOutputExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          VideoOutputConfiguration            -->
+	<!--===============================-->
+	<xs:complexType name="VideoOutputConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="OutputToken" type="tt:ReferenceToken">
+						<xs:annotation>
+							<xs:documentation>Token of the Video Output the configuration applies to</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          VideoOutputConfigurationOptions            -->
+	<!--===============================-->
+	<xs:complexType name="VideoOutputConfigurationOptions">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          VideoDecoderConfigurationOptions            -->
+	<!--===============================-->
+	<xs:complexType name="VideoDecoderConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="JpegDecOptions" type="tt:JpegDecOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device is able to decode Jpeg streams this element describes the supported codecs and configurations</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="H264DecOptions" type="tt:H264DecOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device is able to decode H.264 streams this element describes the supported codecs and configurations</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Mpeg4DecOptions" type="tt:Mpeg4DecOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:VideoDecoderConfigurationOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="H264DecOptions">
+		<xs:sequence>
+			<xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported H.264 Video Resolutions</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedH264Profiles" type="tt:H264Profile" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported H264 Profiles (either baseline, main, extended or high) </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedInputBitrate" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported H.264 bitrate range in kbps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedFrameRate" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported H.264 framerate range in fps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="JpegDecOptions">
+		<xs:sequence>
+			<xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported Jpeg Video Resolutions</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedInputBitrate" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported Jpeg bitrate range in kbps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedFrameRate" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported Jpeg framerate range in fps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Mpeg4DecOptions">
+		<xs:sequence>
+			<xs:element name="ResolutionsAvailable" type="tt:VideoResolution" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported Mpeg4 Video Resolutions</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedMpeg4Profiles" type="tt:Mpeg4Profile" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported Mpeg4 Profiles (either SP or ASP) </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedInputBitrate" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported Mpeg4 bitrate range in kbps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedFrameRate" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Supported Mpeg4 framerate range in fps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoDecoderConfigurationOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          AudioOutputs            -->
+	<!--===============================-->
+	<xs:complexType name="AudioOutput">
+		<xs:annotation>
+			<xs:documentation>Representation of a physical audio outputs.</xs:documentation>
+		</xs:annotation>
+		<xs:complexContent>
+			<xs:extension base="tt:DeviceEntity">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          AudioOutputConfiguration            -->
+	<!--===============================-->
+	<xs:complexType name="AudioOutputConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="OutputToken" type="tt:ReferenceToken">
+						<xs:annotation>
+							<xs:documentation>Token of the phsycial Audio output.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="SendPrimacy" type="xs:anyURI" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+						An audio channel MAY support different types of audio transmission. While for full duplex
+						operation no special handling is required, in half duplex operation the transmission direction
+						needs to be switched.
+						The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
+						direction is currently active. An NVC can switch between different modes by setting the
+						AudioOutputConfiguration.<br/>
+						The following modes for the Send-Primacy are defined:<ul>
+									<li>www.onvif.org/ver20/HalfDuplex/Server
+						The server is allowed to send audio data to the client. The client shall not send
+						audio data via the backchannel to the NVT in this mode.</li>
+									<li>www.onvif.org/ver20/HalfDuplex/Client
+						The client is allowed to send audio data via the backchannel to the server. The
+						NVT shall not send audio data to the client in this mode.</li>
+									<li>www.onvif.org/ver20/HalfDuplex/Auto
+							It is up to the device how to deal with sending and receiving audio data.</li>
+								</ul>
+						Acoustic echo cancellation is out of ONVIF scope.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="OutputLevel" type="xs:int">
+						<xs:annotation>
+							<xs:documentation>Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          AudioOutputConfigurationOptions            -->
+	<!--===============================-->
+	<xs:complexType name="AudioOutputConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="OutputTokensAvailable" type="tt:ReferenceToken" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Tokens of the physical Audio outputs (typically one).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SendPrimacyOptions" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+				An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex
+				operation no special handling is required, in half duplex operation the transmission direction
+				needs to be switched.
+				The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
+				direction is currently active. An NVC can switch between different modes by setting the
+				AudioOutputConfiguration.<br/>
+				The following modes for the Send-Primacy are defined:<ul>
+							<li>www.onvif.org/ver20/HalfDuplex/Server
+						The server is allowed to send audio data to the client. The client shall not send
+						audio data via the backchannel to the NVT in this mode.</li>
+							<li>www.onvif.org/ver20/HalfDuplex/Client
+						The client is allowed to send audio data via the backchannel to the server. The
+						NVT shall not send audio data to the client in this mode.</li>
+							<li>www.onvif.org/ver20/HalfDuplex/Auto
+						It is up to the device how to deal with sending and receiving audio data.</li>
+						</ul>
+				Acoustic echo cancellation is out of ONVIF scope.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="OutputLevelRange" type="tt:IntRange">
+				<xs:annotation>
+					<xs:documentation>Minimum and maximum level range supported for this Output.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          AudioDecoderConfiguration           -->
+	<!--===============================-->
+	<xs:complexType name="AudioDecoderConfiguration">
+		<xs:annotation>
+			<xs:documentation>The Audio Decoder Configuration does not contain any that parameter to configure the
+decoding .A decoder shall decode every data it receives (according to its capabilities).</xs:documentation>
+		</xs:annotation>
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          AudioDecoderConfigurationOptions           -->
+	<!--===============================-->
+	<xs:complexType name="AudioDecoderConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="AACDecOptions" type="tt:AACDecOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device is able to decode AAC encoded audio this section describes the supported configurations</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="G711DecOptions" type="tt:G711DecOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device is able to decode G711 encoded audio this section describes the supported configurations</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="G726DecOptions" type="tt:G726DecOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device is able to decode G726 encoded audio this section describes the supported configurations</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:AudioDecoderConfigurationOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="G711DecOptions">
+		<xs:sequence>
+			<xs:element name="Bitrate" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported bitrates in kbps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SampleRateRange" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported sample rates in kHz</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AACDecOptions">
+		<xs:sequence>
+			<xs:element name="Bitrate" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported bitrates in kbps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SampleRateRange" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported sample rates in kHz</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="G726DecOptions">
+		<xs:sequence>
+			<xs:element name="Bitrate" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported bitrates in kbps</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SampleRateRange" type="tt:IntList">
+				<xs:annotation>
+					<xs:documentation>List of supported sample rates in kHz</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AudioDecoderConfigurationOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--          Streaming            -->
+	<!--===============================-->
+	<xs:complexType name="MulticastConfiguration">
+		<xs:sequence>
+			<xs:element name="Address" type="tt:IPAddress">
+				<xs:annotation>
+					<xs:documentation>The multicast address (if this address is set to 0 no multicast streaming is enaled)</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Port" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TTL" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AutoStart" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="StreamSetup">
+		<xs:sequence>
+			<xs:element name="Stream" type="tt:StreamType">
+				<xs:annotation>
+					<xs:documentation>Defines if a multicast or unicast stream is requested</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Transport" type="tt:Transport"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="StreamType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="RTP-Unicast"/>
+			<xs:enumeration value="RTP-Multicast"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="Transport">
+		<xs:sequence>
+			<xs:element name="Protocol" type="tt:TransportProtocol">
+				<xs:annotation>
+					<xs:documentation>Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Tunnel" type="tt:Transport" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional element to describe further tunnel options. This element is normally not needed </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="TransportProtocol">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="UDP"/>
+			<xs:enumeration value="TCP">
+				<xs:annotation>
+					<xs:documentation>This value is deprecated.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="RTSP"/>
+			<xs:enumeration value="HTTP"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="MediaUri">
+		<xs:sequence>
+			<xs:element name="Uri" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>Stable Uri to be used for requesting the media stream</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="InvalidAfterConnect" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="InvalidAfterReboot" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Timeout" type="xs:duration">
+				<xs:annotation>
+					<xs:documentation>Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--   End, Media Related Types    -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--    Discovery Related Types    -->
+	<!--===============================-->
+	<xs:simpleType name="ScopeDefinition">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Fixed"/>
+			<xs:enumeration value="Configurable"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="Scope">
+		<xs:sequence>
+			<xs:element name="ScopeDef" type="tt:ScopeDefinition">
+				<xs:annotation>
+					<xs:documentation>Indicates if the scope is fixed or configurable.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ScopeItem" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>Scope item URI.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="DiscoveryMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Discoverable"/>
+			<xs:enumeration value="NonDiscoverable"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<!-- End, Discovery Related Types  -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--     Network Related Types     -->
+	<!--===============================-->
+	<xs:complexType name="NetworkInterface">
+		<xs:complexContent>
+			<xs:extension base="tt:DeviceEntity">
+				<xs:sequence>
+					<xs:element name="Enabled" type="xs:boolean">
+						<xs:annotation>
+							<xs:documentation>Indicates whether or not an interface is enabled.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Info" type="tt:NetworkInterfaceInfo" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Network interface information</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Link" type="tt:NetworkInterfaceLink" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Link configuration.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="IPv4" type="tt:IPv4NetworkInterface" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>IPv4 network interface configuration.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="IPv6" type="tt:IPv6NetworkInterface" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>IPv6 network interface configuration.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tt:NetworkInterfaceExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkInterfaceExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="InterfaceType" type="tt:IANA-IfTypes"/>
+			<xs:element name="Dot3" type="tt:Dot3Configuration" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Extension point prepared for future 802.3 configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Dot11" type="tt:Dot11Configuration" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:NetworkInterfaceExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="NetworkInterfaceConfigPriority">
+		<xs:restriction base="xs:integer">
+			<xs:minInclusive value="0"/>
+			<xs:maxInclusive value="31"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="Dot3Configuration">
+		<xs:sequence>
+			<!-- Placeholder for 802.3 configuration -->
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkInterfaceExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkInterfaceLink">
+		<xs:sequence>
+			<xs:element name="AdminSettings" type="tt:NetworkInterfaceConnectionSetting">
+				<xs:annotation>
+					<xs:documentation>Configured link settings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="OperSettings" type="tt:NetworkInterfaceConnectionSetting">
+				<xs:annotation>
+					<xs:documentation>Current active link settings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="InterfaceType" type="tt:IANA-IfTypes">
+				<xs:annotation>
+					<xs:documentation>Integer indicating interface type, for example: 6 is ethernet.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkInterfaceConnectionSetting">
+		<xs:sequence>
+			<xs:element name="AutoNegotiation" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Auto negotiation on/off.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Speed" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Speed.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Duplex" type="tt:Duplex">
+				<xs:annotation>
+					<xs:documentation>Duplex type, Half or Full.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="Duplex">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Full"/>
+			<xs:enumeration value="Half"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="IANA-IfTypes">
+		<xs:restriction base="xs:int">
+			<xs:annotation>
+				<xs:documentation>
+				For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
+				</xs:documentation>
+			</xs:annotation>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="NetworkInterfaceInfo">
+		<xs:sequence>
+			<xs:element name="Name" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Network interface name, for example eth0.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="HwAddress" type="tt:HwAddress">
+				<xs:annotation>
+					<xs:documentation>Network interface MAC address.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MTU" type="xs:int" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Maximum transmission unit.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPv6NetworkInterface">
+		<xs:sequence>
+			<xs:element name="Enabled" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not IPv6 is enabled.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Config" type="tt:IPv6Configuration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>IPv6 configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPv4NetworkInterface">
+		<xs:sequence>
+			<xs:element name="Enabled" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not IPv4 is enabled.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Config" type="tt:IPv4Configuration">
+				<xs:annotation>
+					<xs:documentation>IPv4 configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPv4Configuration">
+		<xs:sequence>
+			<xs:element name="Manual" type="tt:PrefixedIPv4Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of manually added IPv4 addresses.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="LinkLocal" type="tt:PrefixedIPv4Address" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Link local address.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FromDHCP" type="tt:PrefixedIPv4Address" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>IPv4 address configured by using DHCP.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DHCP" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not DHCP is used.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPv6Configuration">
+		<xs:sequence>
+			<xs:element name="AcceptRouterAdvert" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether router advertisment is used.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DHCP" type="tt:IPv6DHCPConfiguration">
+				<xs:annotation>
+					<xs:documentation>DHCP configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Manual" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of manually entered IPv6 addresses.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="LinkLocal" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of link local IPv6 addresses.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FromDHCP" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of IPv6 addresses configured by using DHCP.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FromRA" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of IPv6 addresses configured by using router advertisment.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:IPv6ConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPv6ConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="IPv6DHCPConfiguration">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Auto"/>
+			<xs:enumeration value="Stateful"/>
+			<xs:enumeration value="Stateless"/>
+			<xs:enumeration value="Off"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="NetworkProtocol">
+		<xs:sequence>
+			<xs:element name="Name" type="tt:NetworkProtocolType">
+				<xs:annotation>
+					<xs:documentation>Network protocol type string.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Enabled" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates if the protocol is enabled or not.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Port" type="xs:int" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>The port that is used by the protocol.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:NetworkProtocolExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkProtocolExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="NetworkProtocolType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="HTTP"/>
+			<xs:enumeration value="HTTPS"/>
+			<xs:enumeration value="RTSP"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="NetworkHostType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="IPv4"/>
+			<xs:enumeration value="IPv6"/>
+			<xs:enumeration value="DNS"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="NetworkHost">
+		<xs:sequence>
+			<xs:element name="Type" type="tt:NetworkHostType">
+				<xs:annotation>
+					<xs:documentation>Network host type: IPv4, IPv6 or DNS.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IPv4Address" type="tt:IPv4Address" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>IPv4 address.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IPv6Address" type="tt:IPv6Address" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>IPv6 address.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DNSname" type="tt:DNSName" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>DNS name.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:NetworkHostExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkHostExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPAddress">
+		<xs:sequence>
+			<xs:element name="Type" type="tt:IPType">
+				<xs:annotation>
+					<xs:documentation>Indicates if the address is an IPv4 or IPv6 address.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IPv4Address" type="tt:IPv4Address" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>IPv4 address.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IPv6Address" type="tt:IPv6Address" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>IPv6 address</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PrefixedIPv4Address">
+		<xs:sequence>
+			<xs:element name="Address" type="tt:IPv4Address">
+				<xs:annotation>
+					<xs:documentation>IPv4 address</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PrefixLength" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Prefix/submask length</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="IPv4Address">
+		<xs:restriction base="xs:token"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="PrefixedIPv6Address">
+		<xs:sequence>
+			<xs:element name="Address" type="tt:IPv6Address">
+				<xs:annotation>
+					<xs:documentation>IPv6 address</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PrefixLength" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Prefix/submask length</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="IPv6Address">
+		<xs:restriction base="xs:token"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="HwAddress">
+		<xs:restriction base="xs:token"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="IPType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="IPv4"/>
+			<xs:enumeration value="IPv6"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="DNSName">
+		<xs:restriction base="xs:token"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="HostnameInformation">
+		<xs:sequence>
+			<xs:element name="FromDHCP" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether the hostname is obtained from DHCP or not.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Name" type="xs:token" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates the hostname.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:HostnameInformationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="HostnameInformationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DNSInformation">
+		<xs:sequence>
+			<xs:element name="FromDHCP" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not DNS information is retrieved from DHCP.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SearchDomain" type="xs:token" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Search domain.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DNSFromDHCP" type="tt:IPAddress" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of DNS addresses received from DHCP.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DNSManual" type="tt:IPAddress" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of manually entered DNS addresses.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:DNSInformationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DNSInformationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NTPInformation">
+		<xs:sequence>
+			<xs:element name="FromDHCP" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates if NTP information is to be retrieved by using DHCP.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="NTPFromDHCP" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of NTP addresses retrieved by using DHCP.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="NTPManual" type="tt:NetworkHost" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of manually entered NTP addresses.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:NTPInformationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NTPInformationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="Domain">
+		<xs:restriction base="xs:token"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="IPAddressFilterType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Allow"/>
+			<xs:enumeration value="Deny"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="DynamicDNSInformation">
+		<xs:sequence>
+			<xs:element name="Type" type="tt:DynamicDNSType">
+				<xs:annotation>
+					<xs:documentation>Dynamic DNS type.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Name" type="tt:DNSName" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>DNS name.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TTL" type="xs:duration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Time to live.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:DynamicDNSInformationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DynamicDNSInformationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="DynamicDNSType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="NoUpdate"/>
+			<xs:enumeration value="ClientUpdates"/>
+			<xs:enumeration value="ServerUpdates"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="NetworkInterfaceSetConfiguration">
+		<xs:sequence>
+			<xs:element name="Enabled" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not an interface is enabled.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Link" type="tt:NetworkInterfaceConnectionSetting" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Link configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MTU" type="xs:int" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Maximum transmission unit.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IPv4" type="tt:IPv4NetworkInterfaceSetConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>IPv4 network interface configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IPv6" type="tt:IPv6NetworkInterfaceSetConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>IPv6 network interface configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:NetworkInterfaceSetConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkInterfaceSetConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Dot3" type="tt:Dot3Configuration" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Dot11" type="tt:Dot11Configuration" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:NetworkInterfaceSetConfigurationExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPv6NetworkInterfaceSetConfiguration">
+		<xs:sequence>
+			<xs:element name="Enabled" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not IPv6 is enabled.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AcceptRouterAdvert" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether router advertisment is used.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Manual" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of manually added IPv6 addresses.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DHCP" type="tt:IPv6DHCPConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>DHCP configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPv4NetworkInterfaceSetConfiguration">
+		<xs:sequence>
+			<xs:element name="Enabled" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not IPv4 is enabled.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Manual" type="tt:PrefixedIPv4Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of manually added IPv4 addresses.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DHCP" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not DHCP is used.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkGateway">
+		<xs:sequence>
+			<xs:element name="IPv4Address" type="tt:IPv4Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>IPv4 address string.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IPv6Address" type="tt:IPv6Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>IPv6 address string.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkZeroConfiguration">
+		<xs:sequence>
+			<xs:element name="InterfaceToken" type="tt:ReferenceToken">
+				<xs:annotation>
+					<xs:documentation>Unique identifier of network interface.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Enabled" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether the zero-configuration is enabled or not.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Addresses" type="tt:IPv4Address" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>The zero-configuration IPv4 address(es)</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:NetworkZeroConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkZeroConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Additional" type="tt:NetworkZeroConfiguration" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Optional array holding the configuration for the second and possibly further interfaces.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:NetworkZeroConfigurationExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkZeroConfigurationExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPAddressFilter">
+		<xs:sequence>
+			<xs:element name="Type" type="tt:IPAddressFilterType"/>
+			<xs:element name="IPv4Address" type="tt:PrefixedIPv4Address" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="IPv6Address" type="tt:PrefixedIPv6Address" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:IPAddressFilterExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IPAddressFilterExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Dot11Configuration">
+		<xs:sequence>
+			<xs:element name="SSID" type="tt:Dot11SSIDType"/>
+			<xs:element name="Mode" type="tt:Dot11StationMode"/>
+			<xs:element name="Alias" type="tt:Name"/>
+			<xs:element name="Priority" type="tt:NetworkInterfaceConfigPriority"/>
+			<xs:element name="Security" type="tt:Dot11SecurityConfiguration"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="Dot11SSIDType">
+		<xs:restriction base="xs:hexBinary">
+			<xs:minLength value="1"/>
+			<xs:maxLength value="32"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="Dot11StationMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Ad-hoc"/>
+			<xs:enumeration value="Infrastructure"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="Dot11SecurityConfiguration">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:Dot11SecurityMode"/>
+			<xs:element name="Algorithm" type="tt:Dot11Cipher" minOccurs="0"/>
+			<xs:element name="PSK" type="tt:Dot11PSKSet" minOccurs="0"/>
+			<xs:element name="Dot1X" type="tt:ReferenceToken" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:Dot11SecurityConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Dot11SecurityConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="Dot11SecurityMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="None"/>
+			<xs:enumeration value="WEP"/>
+			<xs:enumeration value="PSK"/>
+			<xs:enumeration value="Dot1X"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="Dot11Cipher">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="CCMP"/>
+			<xs:enumeration value="TKIP"/>
+			<xs:enumeration value="Any"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="Dot11PSK">
+		<xs:restriction base="xs:hexBinary">
+			<xs:length value="32"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="Dot11PSKPassphrase">
+		<xs:restriction base="xs:string">
+			<xs:pattern value="[ -~]{8,63}"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="Dot11PSKSet">
+		<xs:sequence>
+			<xs:element name="Key" type="tt:Dot11PSK" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+					According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
+					Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Passphrase" type="tt:Dot11PSKPassphrase" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+					According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
+					each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
+					If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:Dot11PSKSetExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Dot11PSKSetExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkInterfaceSetConfigurationExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Dot11Capabilities">
+		<xs:sequence>
+			<xs:element name="TKIP" type="xs:boolean"/>
+			<xs:element name="ScanAvailableNetworks" type="xs:boolean"/>
+			<xs:element name="MultipleConfiguration" type="xs:boolean"/>
+			<xs:element name="AdHocStationMode" type="xs:boolean"/>
+			<xs:element name="WEP" type="xs:boolean"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="Dot11SignalStrength">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="None"/>
+			<xs:enumeration value="Very Bad"/>
+			<xs:enumeration value="Bad"/>
+			<xs:enumeration value="Good"/>
+			<xs:enumeration value="Very Good"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="Dot11Status">
+		<xs:sequence>
+			<xs:element name="SSID" type="tt:Dot11SSIDType"/>
+			<xs:element name="BSSID" type="xs:string" minOccurs="0"/>
+			<xs:element name="PairCipher" type="tt:Dot11Cipher" minOccurs="0"/>
+			<xs:element name="GroupCipher" type="tt:Dot11Cipher" minOccurs="0"/>
+			<xs:element name="SignalStrength" type="tt:Dot11SignalStrength" minOccurs="0"/>
+			<xs:element name="ActiveConfigAlias" type="tt:ReferenceToken"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="Dot11AuthAndMangementSuite">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="None"/>
+			<xs:enumeration value="Dot1X"/>
+			<xs:enumeration value="PSK"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="Dot11AvailableNetworks">
+		<xs:sequence>
+			<xs:element name="SSID" type="tt:Dot11SSIDType"/>
+			<xs:element name="BSSID" type="xs:string" minOccurs="0"/>
+			<xs:element name="AuthAndMangementSuite" type="tt:Dot11AuthAndMangementSuite" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>See IEEE802.11 7.3.2.25.2 for details.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PairCipher" type="tt:Dot11Cipher" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="GroupCipher" type="tt:Dot11Cipher" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="SignalStrength" type="tt:Dot11SignalStrength" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:Dot11AvailableNetworksExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Dot11AvailableNetworksExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--===============================-->
+	<!--  End, network Related Types   -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--   Capabilities Related Types  -->
+	<!--===============================-->
+	<xs:simpleType name="CapabilityCategory">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="All"/>
+			<xs:enumeration value="Analytics"/>
+			<xs:enumeration value="Device"/>
+			<xs:enumeration value="Events"/>
+			<xs:enumeration value="Imaging"/>
+			<xs:enumeration value="Media"/>
+			<xs:enumeration value="PTZ"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="Capabilities">
+		<xs:sequence>
+			<xs:element name="Analytics" type="tt:AnalyticsCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Analytics capabilities</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Device" type="tt:DeviceCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Device capabilities</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Events" type="tt:EventCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Event capabilities</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Imaging" type="tt:ImagingCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Imaging capabilities</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Media" type="tt:MediaCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Media capabilities</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PTZ" type="tt:PTZCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>PTZ capabilities</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:CapabilitiesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CapabilitiesExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="DeviceIO" type="tt:DeviceIOCapabilities" minOccurs="0"/>
+			<xs:element name="Display" type="tt:DisplayCapabilities" minOccurs="0"/>
+			<xs:element name="Recording" type="tt:RecordingCapabilities" minOccurs="0"/>
+			<xs:element name="Search" type="tt:SearchCapabilities" minOccurs="0"/>
+			<xs:element name="Replay" type="tt:ReplayCapabilities" minOccurs="0"/>
+			<xs:element name="Receiver" type="tt:ReceiverCapabilities" minOccurs="0"/>
+			<xs:element name="AnalyticsDevice" type="tt:AnalyticsDeviceCapabilities" minOccurs="0"/>
+			<xs:element name="Extensions" type="tt:CapabilitiesExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CapabilitiesExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>Analytics service URI.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RuleSupport" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not rules are supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AnalyticsModuleSupport" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not modules are supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DeviceCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>Device service URI.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Network" type="tt:NetworkCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Network capabilities.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="System" type="tt:SystemCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>System capabilities.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IO" type="tt:IOCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>I/O capabilities.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Security" type="tt:SecurityCapabilities" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Security capabilities.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:DeviceCapabilitiesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DeviceCapabilitiesExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="EventCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>Event service URI.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WSSubscriptionPolicySupport" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not WS Subscription policy is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WSPullPointSupport" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not WS Pull Point is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WSPausableSubscriptionManagerInterfaceSupport" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not WS Pausable Subscription Manager Interface is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IOCapabilities">
+		<xs:sequence>
+			<xs:element name="InputConnectors" type="xs:int" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Number of input connectors.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RelayOutputs" type="xs:int" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Number of relay outputs.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:IOCapabilitiesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IOCapabilitiesExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Auxiliary" type="xs:boolean" minOccurs="0"/>
+			<xs:element name="AuxiliaryCommands" type="tt:AuxiliaryData" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:IOCapabilitiesExtension2"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IOCapabilitiesExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MediaCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>Media service URI.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="StreamingCapabilities" type="tt:RealTimeStreamingCapabilities">
+				<xs:annotation>
+					<xs:documentation>Streaming capabilities.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:MediaCapabilitiesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MediaCapabilitiesExtension">
+		<xs:sequence>
+			<xs:element name="ProfileCapabilities" type="tt:ProfileCapabilities"/>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RealTimeStreamingCapabilities">
+		<xs:sequence>
+			<xs:element name="RTPMulticast" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not RTP multicast is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RTP_TCP" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not RTP over TCP is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RTP_RTSP_TCP" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not RTP/RTSP/TCP is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:RealTimeStreamingCapabilitiesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RealTimeStreamingCapabilitiesExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ProfileCapabilities">
+		<xs:sequence>
+			<xs:element name="MaximumNumberOfProfiles" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Maximum number of profiles.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkCapabilities">
+		<xs:sequence>
+			<xs:element name="IPFilter" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not IP filtering is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ZeroConfiguration" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not zeroconf is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IPVersion6" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not IPv6 is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DynDNS" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not  is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:NetworkCapabilitiesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkCapabilitiesExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Dot11Configuration" type="xs:boolean" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:NetworkCapabilitiesExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NetworkCapabilitiesExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SecurityCapabilities">
+		<xs:sequence>
+			<xs:element name="TLS1.1" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not TLS 1.1 is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TLS1.2" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not TLS 1.2 is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="OnboardKeyGeneration" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not onboard key generation is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AccessPolicyConfig" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not access policy configuration is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="X.509Token" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not WS-Security X.509 token is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SAMLToken" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not WS-Security SAML token is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="KerberosToken" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not WS-Security Kerberos token is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RELToken" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not WS-Security REL token is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:SecurityCapabilitiesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SecurityCapabilitiesExtension">
+		<xs:sequence>
+			<xs:element name="TLS1.0" type="xs:boolean"/>
+			<xs:element name="Extension" type="tt:SecurityCapabilitiesExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SecurityCapabilitiesExtension2">
+		<xs:sequence>
+			<xs:element name="Dot1X" type="xs:boolean"/>
+			<xs:element name="SupportedEAPMethod" type="xs:int" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RemoteUserHandling" type="xs:boolean"/>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SystemCapabilities">
+		<xs:sequence>
+			<xs:element name="DiscoveryResolve" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not WS Discovery resolve requests are supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DiscoveryBye" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not WS-Discovery Bye is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RemoteDiscovery" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not remote discovery is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SystemBackup" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not system backup is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SystemLogging" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not system logging is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FirmwareUpgrade" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not firmware upgrade is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedVersions" type="tt:OnvifVersion" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Indicates supported ONVIF version(s).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:SystemCapabilitiesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SystemCapabilitiesExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="HttpFirmwareUpgrade" type="xs:boolean" minOccurs="0"/>
+			<xs:element name="HttpSystemBackup" type="xs:boolean" minOccurs="0"/>
+			<xs:element name="HttpSystemLogging" type="xs:boolean" minOccurs="0"/>
+			<xs:element name="HttpSupportInformation" type="xs:boolean" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:SystemCapabilitiesExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SystemCapabilitiesExtension2">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OnvifVersion">
+		<xs:sequence>
+			<xs:element name="Major" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Major version number.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Minor" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>
+						Two digit minor version number.
+						If major version number is less than "16", X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number.
+						Otherwise, minor number is month of release, such as "06" for June.
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>Imaging service URI.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>PTZ service URI.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DeviceIOCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI"/>
+			<xs:element name="VideoSources" type="xs:int"/>
+			<xs:element name="VideoOutputs" type="xs:int"/>
+			<xs:element name="AudioSources" type="xs:int"/>
+			<xs:element name="AudioOutputs" type="xs:int"/>
+			<xs:element name="RelayOutputs" type="xs:int"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DisplayCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI"/>
+			<xs:element name="FixedLayout" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indication that the SetLayout command supports only predefined layouts.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI"/>
+			<xs:element name="ReceiverSource" type="xs:boolean"/>
+			<xs:element name="MediaProfileSource" type="xs:boolean"/>
+			<xs:element name="DynamicRecordings" type="xs:boolean"/>
+			<xs:element name="DynamicTracks" type="xs:boolean"/>
+			<xs:element name="MaxStringLength" type="xs:int"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SearchCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI"/>
+			<xs:element name="MetadataSearch" type="xs:boolean"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ReplayCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>The address of the replay service.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ReceiverCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>The address of the receiver service.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RTP_Multicast" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether the device can receive RTP multicast streams.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RTP_TCP" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether the device can receive RTP/TCP streams</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RTP_RTSP_TCP" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether the device can receive RTP/RTSP/TCP streams.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="SupportedReceivers" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>The maximum number of receivers supported by the device.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaximumRTSPURILength" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>The maximum allowed length for RTSP URIs.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsDeviceCapabilities">
+		<xs:sequence>
+			<xs:element name="XAddr" type="xs:anyURI"/>
+			<xs:element name="RuleSupport" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Obsolete property.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:AnalyticsDeviceExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsDeviceExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--===============================-->
+	<!--End, Capabilities Related Types-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--    System Related Types       -->
+	<!--===============================-->
+	<xs:simpleType name="SystemLogType">
+		<xs:annotation>
+			<xs:documentation>Enumeration describing the available system log modes.</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="System">
+				<xs:annotation>
+					<xs:documentation>Indicates that a system log is requested.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="Access">
+				<xs:annotation>
+					<xs:documentation>Indicates that a access log is requested.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="SystemLog">
+		<xs:sequence>
+			<xs:element name="Binary" type="tt:AttachmentData" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>The log information as attachment data.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="String" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>The log information as character data.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SupportInformation">
+		<xs:sequence>
+			<xs:element name="Binary" type="tt:AttachmentData" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>The support information as attachment data.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="String" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>The support information as character data.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="BinaryData">
+		<xs:sequence>
+			<xs:element name="Data" type="xs:base64Binary" nillable="false">
+				<xs:annotation>
+					<xs:documentation>base64 encoded binary data.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:attribute ref="xmime:contentType" use="optional"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AttachmentData">
+		<xs:sequence>
+			<xs:element ref="xop:Include"/>
+		</xs:sequence>
+		<xs:attribute ref="xmime:contentType" use="optional"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="BackupFile">
+		<xs:sequence>
+			<xs:element name="Name" type="xs:string"/>
+			<xs:element name="Data" type="tt:AttachmentData"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SystemLogUriList">
+		<xs:sequence>
+			<xs:element name="SystemLog" type="tt:SystemLogUri" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SystemLogUri">
+		<xs:sequence>
+			<xs:element name="Type" type="tt:SystemLogType"/>
+			<xs:element name="Uri" type="xs:anyURI"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="FactoryDefaultType">
+		<xs:annotation>
+			<xs:documentation>Enumeration describing the available factory default modes.</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Hard">
+				<xs:annotation>
+					<xs:documentation>Indicates that a hard factory default is requested.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="Soft">
+				<xs:annotation>
+					<xs:documentation>Indicates that a soft factory default is requested.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="SetDateTimeType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Manual">
+				<xs:annotation>
+					<xs:documentation>Indicates that the date and time are set manually.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="NTP">
+				<xs:annotation>
+					<xs:documentation>Indicates that the date and time are set through NTP</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="SystemDateTime">
+		<xs:annotation>
+			<xs:documentation>General date time inforamtion returned by the GetSystemDateTime method.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="DateTimeType" type="tt:SetDateTimeType">
+				<xs:annotation>
+					<xs:documentation>Indicates if the time is set manully or through NTP.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DaylightSavings" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Informative indicator whether daylight savings is currently on/off.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TimeZone" type="tt:TimeZone" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Timezone information in Posix format.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="UTCDateTime" type="tt:DateTime" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Current system date and time in UTC format. This field is mandatory since version 2.0.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="LocalDateTime" type="tt:DateTime" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Date and time in local format.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:SystemDateTimeExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SystemDateTimeExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DateTime">
+		<xs:sequence>
+			<xs:element name="Time" type="tt:Time"/>
+			<xs:element name="Date" type="tt:Date"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Date">
+		<xs:sequence>
+			<xs:element name="Year" type="xs:int"/>
+			<xs:element name="Month" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Range is 1 to 12.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Day" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Range is 1 to 31.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Time">
+		<xs:sequence>
+			<xs:element name="Hour" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Range is 0 to 23.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Minute" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Range is 0 to 59.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Second" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Range is 0 to 61 (typically 59).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="TimeZone">
+		<xs:annotation>
+			<xs:documentation>
+				The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
+				Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
+				CET = designation for standard time when daylight saving is not in force<br/>
+				-1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
+				CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
+				, = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
+				M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
+				/2, = the local time when the switch occurs = 2 a.m. in this case<br/>
+				M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
+				/3, = the local time when the switch occurs = 3 a.m. in this case<br/>
+			</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="TZ" type="xs:token">
+				<xs:annotation>
+					<xs:documentation>Posix timezone string.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--   End, System Related Types   -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--   RemoteUser Handling Types    -->
+	<!--===============================-->
+	<xs:complexType name="RemoteUser">
+		<xs:sequence>
+			<xs:element name="Username" type="xs:string"/>
+			<xs:element name="Password" type="xs:string" minOccurs="0"/>
+			<xs:element name="UseDerivedPassword" type="xs:boolean"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--   End, RemoteUser Handling Types    -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--   UserToken Handling Types    -->
+	<!--===============================-->
+	<xs:simpleType name="UserLevel">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Administrator"/>
+			<xs:enumeration value="Operator"/>
+			<xs:enumeration value="User"/>
+			<xs:enumeration value="Anonymous"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="User">
+		<xs:sequence>
+			<xs:element name="Username" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Username string.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Password" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Password string.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="UserLevel" type="tt:UserLevel">
+				<xs:annotation>
+					<xs:documentation>User level string.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:UserExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="UserExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!-- End, UserToken Handling Types -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--   Security Management Types   -->
+	<!--===============================-->
+	<xs:complexType name="CertificateGenerationParameters">
+		<xs:sequence>
+			<xs:element name="CertificateID" type="xs:token" minOccurs="0"/>
+			<xs:element name="Subject" type="xs:string" minOccurs="0"/>
+			<xs:element name="ValidNotBefore" type="xs:token" minOccurs="0"/>
+			<xs:element name="ValidNotAfter" type="xs:token" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:CertificateGenerationParametersExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CertificateGenerationParametersExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Certificate">
+		<xs:sequence>
+			<xs:element name="CertificateID" type="xs:token">
+				<xs:annotation>
+					<xs:documentation>Certificate id.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Certificate" type="tt:BinaryData">
+				<xs:annotation>
+					<xs:documentation>base64 encoded DER representation of certificate.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CertificateStatus">
+		<xs:sequence>
+			<xs:element name="CertificateID" type="xs:token">
+				<xs:annotation>
+					<xs:documentation>Certificate id.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Status" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not a certificate is used in a HTTPS configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CertificateWithPrivateKey">
+		<xs:sequence>
+			<xs:element name="CertificateID" type="xs:token" minOccurs="0"/>
+			<xs:element name="Certificate" type="tt:BinaryData"/>
+			<xs:element name="PrivateKey" type="tt:BinaryData"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CertificateInformation">
+		<xs:sequence>
+			<xs:element name="CertificateID" type="xs:token"/>
+			<xs:element name="IssuerDN" type="xs:string" minOccurs="0"/>
+			<xs:element name="SubjectDN" type="xs:string" minOccurs="0"/>
+			<xs:element name="KeyUsage" type="tt:CertificateUsage" minOccurs="0"/>
+			<xs:element name="ExtendedKeyUsage" type="tt:CertificateUsage" minOccurs="0"/>
+			<xs:element name="KeyLength" type="xs:int" minOccurs="0"/>
+			<xs:element name="Version" type="xs:string" minOccurs="0"/>
+			<xs:element name="SerialNum" type="xs:string" minOccurs="0"/>
+			<xs:element name="SignatureAlgorithm" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Validity" type="tt:DateTimeRange" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:CertificateInformationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CertificateUsage">
+		<xs:simpleContent>
+			<xs:extension base="xs:string">
+				<xs:attribute name="Critical" type="xs:boolean" use="required"/>
+			</xs:extension>
+		</xs:simpleContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CertificateInformationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--End, Security management Types -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--   Start Dot1X related Types   -->
+	<!--===============================-->
+	<xs:complexType name="Dot1XConfiguration">
+		<xs:sequence>
+			<xs:element name="Dot1XConfigurationToken" type="tt:ReferenceToken"/>
+			<xs:element name="Identity" type="xs:string"/>
+			<xs:element name="AnonymousID" type="xs:string" minOccurs="0"/>
+			<xs:element name="EAPMethod" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>
+				EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
+			</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="CACertificateID" type="xs:token" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="EAPMethodConfiguration" type="tt:EAPMethodConfiguration" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:Dot1XConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Dot1XConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="EAPMethodConfiguration">
+		<xs:sequence>
+			<xs:element name="TLSConfiguration" type="tt:TLSConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Confgiuration information for TLS Method.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Password" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Password for those EAP Methods that require a password. The password shall never be returned on a get method.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:EapMethodExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="EapMethodExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="TLSConfiguration">
+		<xs:sequence>
+			<xs:element name="CertificateID" type="xs:token"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="GenericEapPwdConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--End, Dot1X related Types -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--   Start IO management Types   -->
+	<!--===============================-->
+	<xs:simpleType name="RelayLogicalState">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="active"/>
+			<xs:enumeration value="inactive"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="RelayIdleState">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="closed"/>
+			<xs:enumeration value="open"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="RelayOutputSettings">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:RelayMode">
+				<xs:annotation>
+					<xs:documentation>
+					'Bistable' or 'Monostable'
+					<ul>
+							<li>Bistable – After setting the state, the relay remains in this state.</li>
+							<li>Monostable – After setting the state, the relay returns to its idle state after the specified time.</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DelayTime" type="xs:duration">
+				<xs:annotation>
+					<xs:documentation>Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IdleState" type="tt:RelayIdleState">
+				<xs:annotation>
+					<xs:documentation>
+			'open' or 'closed'
+			<ul>
+							<li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
+							<li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="RelayMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Monostable"/>
+			<xs:enumeration value="Bistable"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="RelayOutput">
+		<xs:complexContent>
+			<xs:extension base="tt:DeviceEntity">
+				<xs:sequence>
+					<xs:element name="Properties" type="tt:RelayOutputSettings"/>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="DigitalIdleState">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="closed"/>
+			<xs:enumeration value="open"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="DigitalInput">
+		<xs:complexContent>
+			<xs:extension base="tt:DeviceEntity">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first ONVIF then Vendor -->
+				</xs:sequence>
+				<xs:attribute name="IdleState" type="tt:DigitalIdleState">
+					<xs:annotation>
+						<xs:documentation>
+							Indicate the Digital IdleState status.
+						</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<!--   End, IO management Types    -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--    Start PTZ Related Types    -->
+	<!--===============================-->
+	<xs:complexType name="PTZNode">
+		<xs:complexContent>
+			<xs:extension base="tt:DeviceEntity">
+				<xs:sequence>
+					<xs:element name="Name" type="tt:Name" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                A unique identifier that is used to reference PTZ Nodes.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="SupportedPTZSpaces" type="tt:PTZSpaces">
+						<xs:annotation>
+							<xs:documentation>
+                A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="MaximumNumberOfPresets" type="xs:int">
+						<xs:annotation>
+							<xs:documentation>
+                All preset operations MUST be available for this PTZ Node if one preset is supported.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="HomeSupported" type="xs:boolean">
+						<xs:annotation>
+							<xs:documentation>
+                A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="AuxiliaryCommands" type="tt:AuxiliaryData" minOccurs="0" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>
+                A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tt:PTZNodeExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:attribute name="FixedHomePosition" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>
+							Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
+						</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="GeoMove" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>
+							Indication whether the Node supports the geo-referenced move command.
+						</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZNodeExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="SupportedPresetTour" type="tt:PTZPresetTourSupported" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+            Detail of supported Preset Tour feature.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZNodeExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZNodeExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourSupported">
+		<xs:sequence>
+			<xs:element name="MaximumNumberOfPresetTours" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PTZPresetTourOperation" type="tt:PTZPresetTourOperation" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Indicates which preset tour operations are available for this PTZ Node.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZPresetTourSupportedExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourSupportedExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="NodeToken" type="tt:ReferenceToken">
+						<xs:annotation>
+							<xs:documentation>
+                A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DefaultAbsolutePantTiltPositionSpace" type="xs:anyURI" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DefaultAbsoluteZoomPositionSpace" type="xs:anyURI" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DefaultRelativePanTiltTranslationSpace" type="xs:anyURI" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DefaultRelativeZoomTranslationSpace" type="xs:anyURI" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DefaultContinuousPanTiltVelocitySpace" type="xs:anyURI" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DefaultContinuousZoomVelocitySpace" type="xs:anyURI" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DefaultPTZSpeed" type="tt:PTZSpeed" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DefaultPTZTimeout" type="xs:duration" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="PanTiltLimits" type="tt:PanTiltLimits" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to –INF or +INF.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="ZoomLimits" type="tt:ZoomLimits" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+                The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tt:PTZConfigurationExtension" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>
+              </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+				</xs:sequence>
+				<xs:attribute name="MoveRamp" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>The optional acceleration ramp used by the device when moving.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="PresetRamp" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>The optional acceleration ramp used by the device when recalling presets.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="PresetTourRamp" type="xs:int">
+					<xs:annotation>
+						<xs:documentation>The optional acceleration ramp used by the device when executing PresetTours.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="PTControlDirection" type="tt:PTControlDirection" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional element to configure PT Control Direction related features.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZConfigurationExtension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZConfigurationExtension2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTControlDirection">
+		<xs:sequence>
+			<xs:element name="EFlip" type="tt:EFlip" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional element to configure related parameters for E-Flip.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Reverse" type="tt:Reverse" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional element to configure related parameters for reversing of PT Control Direction.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTControlDirectionExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTControlDirectionExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="EFlip">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:EFlipMode">
+				<xs:annotation>
+					<xs:documentation>Parameter to enable/disable E-Flip feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Reverse">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:ReverseMode">
+				<xs:annotation>
+					<xs:documentation>Parameter to enable/disable Reverse feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="EFlipMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="OFF"/>
+			<xs:enumeration value="ON"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="ReverseMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="OFF"/>
+			<xs:enumeration value="ON"/>
+			<xs:enumeration value="AUTO"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="PTZConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="Spaces" type="tt:PTZSpaces">
+				<xs:annotation>
+					<xs:documentation>
+            A list of supported coordinate systems including their range limitations.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PTZTimeout" type="tt:DurationRange">
+				<xs:annotation>
+					<xs:documentation>
+            A timeout Range within which Timeouts are accepted by the PTZ Node.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="PTControlDirection" type="tt:PTControlDirectionOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Supported options for PT Direction Control.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZConfigurationOptions2" minOccurs="0"/>
+		</xs:sequence>
+		<xs:attribute name="PTZRamps" type="tt:IntAttrList">
+			<xs:annotation>
+				<xs:documentation>
+					The list of acceleration ramps supported by the device. The
+					smallest acceleration value corresponds to the minimal index, the
+					highest acceleration corresponds to the maximum index.					
+				</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZConfigurationOptions2">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTControlDirectionOptions">
+		<xs:sequence>
+			<xs:element name="EFlip" type="tt:EFlipOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Supported options for EFlip feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Reverse" type="tt:ReverseOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Supported options for Reverse feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTControlDirectionOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTControlDirectionOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="EFlipOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:EFlipMode" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Options of EFlip mode parameter.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:EFlipOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="EFlipOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ReverseOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:ReverseMode" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Options of Reverse mode parameter.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ReverseOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ReverseOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PanTiltLimits">
+		<xs:sequence>
+			<xs:element name="Range" type="tt:Space2DDescription">
+				<xs:annotation>
+					<xs:documentation>
+            A range of pan tilt limits.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ZoomLimits">
+		<xs:sequence>
+			<xs:element name="Range" type="tt:Space1DDescription">
+				<xs:annotation>
+					<xs:documentation>
+            A range of zoom limit
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZSpaces">
+		<xs:sequence>
+			<xs:element name="AbsolutePanTiltPositionSpace" type="tt:Space2DDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+            The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. 
+			Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AbsoluteZoomPositionSpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+            The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. 
+			Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). 
+			There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RelativePanTiltTranslationSpace" type="tt:Space2DDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+            The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. 
+			Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, 
+			where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RelativeZoomTranslationSpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+            The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. 
+			Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, 
+			where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). 
+			There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ContinuousPanTiltVelocitySpace" type="tt:Space2DDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+            The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. 
+			Instead, the range should be defined as a range of the PTZ unit’s speed normalized to the range -1 to 1, where a positive velocity would map to clockwise 
+			rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ContinuousZoomVelocitySpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+            The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, 
+			where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PanTiltSpeedSpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+            The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. 
+			In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt 
+			movement is represented by a single non-negative scalar value.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ZoomSpeedSpace" type="tt:Space1DDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+            The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. 
+			In contrast to the velocity spaces, speed spaces do not contain any directional information. 
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZSpacesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZSpacesExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Space2DDescription">
+		<xs:sequence>
+			<xs:element name="URI" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>
+            A URI of coordinate systems.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="XRange" type="tt:FloatRange">
+				<xs:annotation>
+					<xs:documentation>
+            A range of x-axis.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="YRange" type="tt:FloatRange">
+				<xs:annotation>
+					<xs:documentation>
+            A range of y-axis.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Space1DDescription">
+		<xs:sequence>
+			<xs:element name="URI" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>
+            A URI of coordinate systems.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="XRange" type="tt:FloatRange">
+				<xs:annotation>
+					<xs:documentation>
+            A range of x-axis.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZSpeed">
+		<xs:sequence>
+			<xs:element name="PanTilt" type="tt:Vector2D" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected. </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Zoom" type="tt:Vector1D" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+            A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPreset">
+		<xs:sequence>
+			<xs:element name="Name" type="tt:Name" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+            A list of preset position name.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PTZPosition" type="tt:PTZVector" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+            A list of preset position.
+          </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:attribute name="token" type="tt:ReferenceToken">
+			<xs:annotation>
+				<xs:documentation>
+        </xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="AuxiliaryData">
+		<xs:restriction base="xs:string">
+			<xs:maxLength value="128"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="PTZPresetTourState">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Idle"/>
+			<xs:enumeration value="Touring"/>
+			<xs:enumeration value="Paused"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="PTZPresetTourDirection">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Forward"/>
+			<xs:enumeration value="Backward"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="PTZPresetTourOperation">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Start"/>
+			<xs:enumeration value="Stop"/>
+			<xs:enumeration value="Pause"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="PresetTour">
+		<xs:sequence>
+			<xs:element name="Name" type="tt:Name" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Readable name of the preset tour.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Status" type="tt:PTZPresetTourStatus">
+				<xs:annotation>
+					<xs:documentation>Read only parameters to indicate the status of the preset tour.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AutoStart" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Auto Start flag of the preset tour. True allows the preset tour to be activated always.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="StartingCondition" type="tt:PTZPresetTourStartingCondition">
+				<xs:annotation>
+					<xs:documentation>Parameters to specify the detail behavior of the preset tour.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TourSpot" type="tt:PTZPresetTourSpot" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>A list of detail of touring spots including preset positions.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZPresetTourExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:attribute name="token" type="tt:ReferenceToken">
+			<xs:annotation>
+				<xs:documentation>Unique identifier of this preset tour.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourSpot">
+		<xs:sequence>
+			<xs:element name="PresetDetail" type="tt:PTZPresetTourPresetDetail">
+				<xs:annotation>
+					<xs:documentation>Detail definition of preset position of the tour spot.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Speed" type="tt:PTZSpeed" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="StayTime" type="xs:duration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional parameter to specify time duration of staying on this tour sport.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZPresetTourSpotExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourSpotExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourPresetDetail">
+		<xs:sequence>
+			<xs:choice>
+				<xs:element name="PresetToken" type="tt:ReferenceToken">
+					<xs:annotation>
+						<xs:documentation>Option to specify the preset position with Preset Token defined in advance.</xs:documentation>
+					</xs:annotation>
+				</xs:element>
+				<xs:element name="Home" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.</xs:documentation>
+					</xs:annotation>
+				</xs:element>
+				<xs:element name="PTZPosition" type="tt:PTZVector">
+					<xs:annotation>
+						<xs:documentation>Option to specify the preset position with vector of PTZ node directly.</xs:documentation>
+					</xs:annotation>
+				</xs:element>
+				<xs:element name="TypeExtension" type="tt:PTZPresetTourTypeExtension"/>
+			</xs:choice>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourTypeExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourStatus">
+		<xs:sequence>
+			<xs:element name="State" type="tt:PTZPresetTourState">
+				<xs:annotation>
+					<xs:documentation>Indicates state of this preset tour by Idle/Touring/Paused.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="CurrentTourSpot" type="tt:PTZPresetTourSpot" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates a tour spot currently staying.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZPresetTourStatusExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourStatusExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourStartingCondition">
+		<xs:sequence>
+			<xs:element name="RecurringTime" type="xs:int" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional parameter to specify how many times the preset tour is recurred.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RecurringDuration" type="xs:duration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional parameter to specify how long time duration the preset tour is recurred.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Direction" type="tt:PTZPresetTourDirection" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZPresetTourStartingConditionExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:attribute name="RandomPresetOrder" type="xs:boolean">
+			<xs:annotation>
+				<xs:documentation>Execute presets in random order. If set to true and Direction is also present, Direction will be ignored and presets of the Tour will be recalled randomly.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourStartingConditionExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourOptions">
+		<xs:sequence>
+			<xs:element name="AutoStart" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not the AutoStart is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="StartingCondition" type="tt:PTZPresetTourStartingConditionOptions">
+				<xs:annotation>
+					<xs:documentation>Supported options for Preset Tour Starting Condition.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TourSpot" type="tt:PTZPresetTourSpotOptions">
+				<xs:annotation>
+					<xs:documentation>Supported options for Preset Tour Spot.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourSpotOptions">
+		<xs:sequence>
+			<xs:element name="PresetDetail" type="tt:PTZPresetTourPresetDetailOptions">
+				<xs:annotation>
+					<xs:documentation>Supported options for detail definition of preset position of the tour spot.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="StayTime" type="tt:DurationRange">
+				<xs:annotation>
+					<xs:documentation>Supported range of stay time for a tour spot.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourPresetDetailOptions">
+		<xs:sequence>
+			<xs:element name="PresetToken" type="tt:ReferenceToken" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>A list of available Preset Tokens for tour spots.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Home" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>An option to indicate Home postion for tour spots.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PanTiltPositionSpace" type="tt:Space2DDescription" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Supported range of Pan and Tilt for tour spots.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ZoomPositionSpace" type="tt:Space1DDescription" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Supported range of Zoom for a tour spot.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZPresetTourPresetDetailOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourPresetDetailOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourStartingConditionOptions">
+		<xs:sequence>
+			<xs:element name="RecurringTime" type="tt:IntRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Supported range of Recurring Time.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RecurringDuration" type="tt:DurationRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Supported range of Recurring Duration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Direction" type="tt:PTZPresetTourDirection" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Supported options for Direction of Preset Tour.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PTZPresetTourStartingConditionOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPresetTourStartingConditionOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--     End, PTZ Related Types    -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--      Imaging Related Types    -->
+	<!--===============================-->
+	<xs:complexType name="ImagingStatus">
+		<xs:sequence>
+			<xs:element name="FocusStatus" type="tt:FocusStatus"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusStatus">
+		<xs:sequence>
+			<xs:element name="Position" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Status of focus position.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MoveStatus" type="tt:MoveStatus">
+				<xs:annotation>
+					<xs:documentation>
+				Status of focus MoveStatus.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Error" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>
+				Error status of focus.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusConfiguration">
+		<xs:sequence>
+			<xs:element name="AutoFocusMode" type="tt:AutoFocusMode"/>
+			<xs:element name="DefaultSpeed" type="xs:float"/>
+			<xs:element name="NearLimit" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>Parameter to set autofocus near limit (unit: meter).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FarLimit" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>Parameter to set autofocus far limit (unit: meter).
+If set to 0.0, infinity will be used.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="AutoFocusMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="AUTO"/>
+			<xs:enumeration value="MANUAL"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="ImagingSettings">
+		<xs:sequence>
+			<xs:element name="BacklightCompensation" type="tt:BacklightCompensation" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Enabled/disabled BLC mode (on/off).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Brightness" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Image brightness (unit unspecified).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ColorSaturation" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Color saturation of the image (unit unspecified).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Contrast" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Contrast of the image (unit unspecified).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Exposure" type="tt:Exposure" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Exposure mode of the device.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Focus" type="tt:FocusConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Focus configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IrCutFilter" type="tt:IrCutFilterMode" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Infrared Cutoff Filter settings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Sharpness" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Sharpness of the Video image.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WideDynamicRange" type="tt:WideDynamicRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>WDR settings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WhiteBalance" type="tt:WhiteBalance" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>White balance settings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingSettingsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingSettingsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Exposure">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:ExposureMode">
+				<xs:annotation>
+					<xs:documentation>
+					Exposure Mode
+					<ul>
+							<li>Auto – Enabled the exposure algorithm on the NVT.</li>
+							<li>Manual – Disabled exposure algorithm on the NVT.</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Priority" type="tt:ExposurePriority">
+				<xs:annotation>
+					<xs:documentation>
+				The exposure priority mode (low noise/framerate).
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Window" type="tt:Rectangle">
+				<xs:annotation>
+					<xs:documentation>
+				Rectangular exposure mask.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MinExposureTime" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Minimum value of exposure time range allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxExposureTime" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Maximum value of exposure time range allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MinGain" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Minimum value of the sensor gain range that is allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxGain" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Maximum value of the sensor gain range that is allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MinIris" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Minimum value of the iris range allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxIris" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Maximum value of the iris range allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ExposureTime" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				The fixed exposure time used by the image sensor (&#956;s).
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Gain" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				The fixed gain used by the image sensor (dB).
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Iris" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="WideDynamicMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="OFF"/>
+			<xs:enumeration value="ON"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="WideDynamicRange">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:WideDynamicMode">
+				<xs:annotation>
+					<xs:documentation>
+				White dynamic range (on/off)
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Optional level parameter (unitless)
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="BacklightCompensationMode">
+		<xs:annotation>
+			<xs:documentation>Enumeration describing the available backlight compenstation modes.</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="OFF">
+				<xs:annotation>
+					<xs:documentation>Backlight compensation is disabled.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="ON">
+				<xs:annotation>
+					<xs:documentation>Backlight compensation is enabled.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="BacklightCompensation">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:BacklightCompensationMode">
+				<xs:annotation>
+					<xs:documentation>Backlight compensation mode (on/off).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>Optional level parameter (unit unspecified).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="ExposurePriority">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="LowNoise"/>
+			<xs:enumeration value="FrameRate"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="ImagingOptions">
+		<xs:sequence>
+			<xs:element name="BacklightCompensation" type="tt:BacklightCompensationOptions"/>
+			<xs:element name="Brightness" type="tt:FloatRange"/>
+			<xs:element name="ColorSaturation" type="tt:FloatRange"/>
+			<xs:element name="Contrast" type="tt:FloatRange"/>
+			<xs:element name="Exposure" type="tt:ExposureOptions"/>
+			<xs:element name="Focus" type="tt:FocusOptions"/>
+			<xs:element name="IrCutFilterModes" type="tt:IrCutFilterMode" maxOccurs="unbounded"/>
+			<xs:element name="Sharpness" type="tt:FloatRange"/>
+			<xs:element name="WideDynamicRange" type="tt:WideDynamicRangeOptions"/>
+			<xs:element name="WhiteBalance" type="tt:WhiteBalanceOptions"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="WideDynamicRangeOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:WideDynamicMode" maxOccurs="unbounded"/>
+			<xs:element name="Level" type="tt:FloatRange"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="BacklightCompensationOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:WideDynamicMode" maxOccurs="unbounded"/>
+			<xs:element name="Level" type="tt:FloatRange"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusOptions">
+		<xs:sequence>
+			<xs:element name="AutoFocusModes" type="tt:AutoFocusMode" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="DefaultSpeed" type="tt:FloatRange"/>
+			<xs:element name="NearLimit" type="tt:FloatRange"/>
+			<xs:element name="FarLimit" type="tt:FloatRange"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ExposureOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:ExposureMode" maxOccurs="unbounded"/>
+			<xs:element name="Priority" type="tt:ExposurePriority" maxOccurs="unbounded"/>
+			<xs:element name="MinExposureTime" type="tt:FloatRange"/>
+			<xs:element name="MaxExposureTime" type="tt:FloatRange"/>
+			<xs:element name="MinGain" type="tt:FloatRange"/>
+			<xs:element name="MaxGain" type="tt:FloatRange"/>
+			<xs:element name="MinIris" type="tt:FloatRange"/>
+			<xs:element name="MaxIris" type="tt:FloatRange"/>
+			<xs:element name="ExposureTime" type="tt:FloatRange"/>
+			<xs:element name="Gain" type="tt:FloatRange"/>
+			<xs:element name="Iris" type="tt:FloatRange"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="WhiteBalanceOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:WhiteBalanceMode" maxOccurs="unbounded"/>
+			<xs:element name="YrGain" type="tt:FloatRange"/>
+			<xs:element name="YbGain" type="tt:FloatRange"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusMove">
+		<xs:sequence>
+			<xs:element name="Absolute" type="tt:AbsoluteFocus" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Parameters for the absolute focus control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Relative" type="tt:RelativeFocus" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Parameters for the relative focus control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Continuous" type="tt:ContinuousFocus" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Parameter for the continuous focus control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AbsoluteFocus">
+		<xs:sequence>
+			<xs:element name="Position" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Position parameter for the absolute focus control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Speed" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Speed parameter for the absolute focus control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RelativeFocus">
+		<xs:sequence>
+			<xs:element name="Distance" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Distance parameter for the relative focus control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Speed" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Speed parameter for the relative focus control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ContinuousFocus">
+		<xs:sequence>
+			<xs:element name="Speed" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Speed parameter for the Continuous focus control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MoveOptions">
+		<xs:sequence>
+			<xs:element name="Absolute" type="tt:AbsoluteFocusOptions" minOccurs="0"/>
+			<xs:element name="Relative" type="tt:RelativeFocusOptions" minOccurs="0"/>
+			<xs:element name="Continuous" type="tt:ContinuousFocusOptions" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AbsoluteFocusOptions">
+		<xs:sequence>
+			<xs:element name="Position" type="tt:FloatRange">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges of the position.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Speed" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges of the speed.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RelativeFocusOptions">
+		<xs:sequence>
+			<xs:element name="Distance" type="tt:FloatRange">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges of the distance.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Speed" type="tt:FloatRange">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges of the speed.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ContinuousFocusOptions">
+		<xs:sequence>
+			<xs:element name="Speed" type="tt:FloatRange">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges of the speed.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="ExposureMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="AUTO"/>
+			<xs:enumeration value="MANUAL"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="Enabled">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="ENABLED"/>
+			<xs:enumeration value="DISABLED"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="WhiteBalanceMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="AUTO"/>
+			<xs:enumeration value="MANUAL"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="IrCutFilterMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="ON"/>
+			<xs:enumeration value="OFF"/>
+			<xs:enumeration value="AUTO"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="WhiteBalance">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:WhiteBalanceMode">
+				<xs:annotation>
+					<xs:documentation>Auto whitebalancing mode (auto/manual).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="CrGain" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>Rgain (unitless).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="CbGain" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>Bgain (unitless).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--  End, Imaging Related Types   -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--      Imaging Version 2.0 Related Types    -->
+	<!--===============================-->
+	<xs:complexType name="ImagingStatus20">
+		<xs:sequence>
+			<xs:element name="FocusStatus20" type="tt:FocusStatus20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Status of focus.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingStatus20Extension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingStatus20Extension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusStatus20">
+		<xs:sequence>
+			<xs:element name="Position" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>
+				Status of focus position.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MoveStatus" type="tt:MoveStatus">
+				<xs:annotation>
+					<xs:documentation>
+				Status of focus MoveStatus.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Error" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Error status of focus.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:FocusStatus20Extension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusStatus20Extension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingSettings20">
+		<xs:annotation>
+			<xs:documentation>Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="BacklightCompensation" type="tt:BacklightCompensation20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Enabled/disabled BLC mode (on/off).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Brightness" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Image brightness (unit unspecified).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ColorSaturation" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Color saturation of the image (unit unspecified).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Contrast" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Contrast of the image (unit unspecified).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Exposure" type="tt:Exposure20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Exposure mode of the device.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Focus" type="tt:FocusConfiguration20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Focus configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IrCutFilter" type="tt:IrCutFilterMode" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Infrared Cutoff Filter settings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Sharpness" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Sharpness of the Video image.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WideDynamicRange" type="tt:WideDynamicRange20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>WDR settings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WhiteBalance" type="tt:WhiteBalance20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>White balance settings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingSettingsExtension20" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingSettingsExtension20">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="ImageStabilization" type="tt:ImageStabilization" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional element to configure Image Stabilization feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingSettingsExtension202" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingSettingsExtension202">
+		<xs:sequence>
+			<xs:element name="IrCutFilterAutoAdjustment" type="tt:IrCutFilterAutoAdjustment" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>An optional parameter applied to only auto mode to adjust timing of toggling Ir cut filter.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingSettingsExtension203" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingSettingsExtension203">
+		<xs:sequence>
+			<xs:element name="ToneCompensation" type="tt:ToneCompensation" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional element to configure Image Contrast Compensation.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Defogging" type="tt:Defogging" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional element to configure Image Defogging.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="NoiseReduction" type="tt:NoiseReduction" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional element to configure Image Noise Reduction.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingSettingsExtension204" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingSettingsExtension204">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImageStabilization">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:ImageStabilizationMode">
+				<xs:annotation>
+					<xs:documentation>Parameter to enable/disable Image Stabilization feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional level parameter (unit unspecified)</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImageStabilizationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImageStabilizationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="ImageStabilizationMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="OFF"/>
+			<xs:enumeration value="ON"/>
+			<xs:enumeration value="AUTO"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="IrCutFilterAutoAdjustment">
+		<xs:sequence>
+			<xs:element name="BoundaryType" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Specifies which boundaries to automatically toggle Ir cut filter following parameters are applied to. Its options shall be chosen from tt:IrCutFilterAutoBoundaryType.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="BoundaryOffset" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Adjusts boundary exposure level for toggling Ir cut filter to on/off specified with unitless normalized value from +1.0 to -1.0. Zero is default and -1.0 is the darkest adjustment (Unitless).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ResponseTime" type="xs:duration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Delay time of toggling Ir cut filter to on/off after crossing of the boundary exposure levels.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:IrCutFilterAutoAdjustmentExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax" />
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IrCutFilterAutoAdjustmentExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="IrCutFilterAutoBoundaryType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Common" />
+			<xs:enumeration value="ToOn" />
+			<xs:enumeration value="ToOff" />
+			<xs:enumeration value="Extended" />
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="WideDynamicRange20">
+		<xs:annotation>
+			<xs:documentation>Type describing whether WDR mode is enabled or disabled (on/off).</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:WideDynamicMode">
+				<xs:annotation>
+					<xs:documentation>Wide dynamic range mode (on/off).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional level parameter (unit unspecified).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="BacklightCompensation20">
+		<xs:annotation>
+			<xs:documentation>Type describing whether BLC mode is enabled or disabled (on/off).</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:BacklightCompensationMode">
+				<xs:annotation>
+					<xs:documentation>Backlight compensation mode (on/off).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional level parameter (unit unspecified).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Exposure20">
+		<xs:annotation>
+			<xs:documentation>Type describing the exposure settings.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:ExposureMode">
+				<xs:annotation>
+					<xs:documentation>
+				Exposure Mode
+				<ul>
+							<li>Auto – Enabled the exposure algorithm on the device.</li>
+							<li>Manual – Disabled exposure algorithm on the device.</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Priority" type="tt:ExposurePriority" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				The exposure priority mode (low noise/framerate).
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Window" type="tt:Rectangle" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Rectangular exposure mask.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MinExposureTime" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Minimum value of exposure time range allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxExposureTime" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Maximum value of exposure time range allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MinGain" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Minimum value of the sensor gain range that is allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxGain" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Maximum value of the sensor gain range that is allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MinIris" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Minimum value of the iris range allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxIris" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Maximum value of the iris range allowed to be used by the algorithm.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ExposureTime" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				The fixed exposure time used by the image sensor (&#956;s).
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Gain" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				The fixed gain used by the image sensor (dB).
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Iris" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ToneCompensation">
+		<xs:sequence>
+			<xs:element name="Mode" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Parameter to enable/disable or automatic ToneCompensation feature. Its options shall be chosen from tt:ToneCompensationMode Type.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional level parameter specified with unitless normalized value from 0.0 to +1.0.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ToneCompensationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ToneCompensationExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="ToneCompensationMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="OFF"/>
+			<xs:enumeration value="ON"/>
+			<xs:enumeration value="AUTO"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="Defogging">
+		<xs:sequence>
+			<xs:element name="Mode" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Parameter to enable/disable or automatic Defogging feature. Its options shall be chosen from tt:DefoggingMode Type.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional level parameter specified with unitless normalized value from 0.0 to +1.0.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:DefoggingExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DefoggingExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded" />   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="DefoggingMode">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="OFF"/>
+			<xs:enumeration value="ON"/>
+			<xs:enumeration value="AUTO"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="NoiseReduction">
+		<xs:sequence>
+			<xs:element name="Level" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>Level parameter specified with unitless normalized value from 0.0 to +1.0. Level=0 means no noise reduction or minimal noise reduction.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded" />   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingOptions20">
+		<xs:sequence>
+			<xs:element name="BacklightCompensation" type="tt:BacklightCompensationOptions20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of Backlight Compensation.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Brightness" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of Brightness.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ColorSaturation" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of Color Saturation.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Contrast" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of Contrast.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Exposure" type="tt:ExposureOptions20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of Exposure.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Focus" type="tt:FocusOptions20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of Focus.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IrCutFilterModes" type="tt:IrCutFilterMode" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of IrCutFilterModes.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Sharpness" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of Sharpness.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WideDynamicRange" type="tt:WideDynamicRangeOptions20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of WideDynamicRange.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="WhiteBalance" type="tt:WhiteBalanceOptions20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of WhiteBalance.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingOptions20Extension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingOptions20Extension">
+		<xs:sequence>
+			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="ImageStabilization" type="tt:ImageStabilizationOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Options of parameters for Image Stabilization feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingOptions20Extension2" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingOptions20Extension2">
+		<xs:sequence>
+			<xs:element name="IrCutFilterAutoAdjustment" type="tt:IrCutFilterAutoAdjustmentOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Options of parameters for adjustment of Ir cut filter auto mode.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingOptions20Extension3" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingOptions20Extension3">
+		<xs:sequence>
+			<xs:element name="ToneCompensationOptions" type="tt:ToneCompensationOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Options of parameters for Tone Compensation feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DefoggingOptions" type="tt:DefoggingOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Options of parameters for Defogging feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="NoiseReductionOptions" type="tt:NoiseReductionOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Options of parameter for Noise Reduction feature.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImagingOptions20Extension4" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImagingOptions20Extension4">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImageStabilizationOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:ImageStabilizationMode" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Supported options of Image Stabilization mode parameter.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Valid range of the Image Stabilization.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ImageStabilizationOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ImageStabilizationOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IrCutFilterAutoAdjustmentOptions">
+		<xs:sequence>
+			<xs:element name="BoundaryType" type="xs:string" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Supported options of boundary types for adjustment of Ir cut filter auto mode. The opptions shall be chosen from tt:IrCutFilterAutoBoundaryType. </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="BoundaryOffset" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not boundary offset for toggling Ir cut filter is supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ResponseTimeRange" type="tt:DurationRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Supported range of delay time for toggling Ir cut filter.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:IrCutFilterAutoAdjustmentOptionsExtension" minOccurs="0" />
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax" />
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="IrCutFilterAutoAdjustmentOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="WideDynamicRangeOptions20">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:WideDynamicMode" maxOccurs="unbounded"/>
+			<xs:element name="Level" type="tt:FloatRange" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="BacklightCompensationOptions20">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:BacklightCompensationMode" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+				'ON' or 'OFF'
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Level range of BacklightCompensation.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ExposureOptions20">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:ExposureMode" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+				Exposure Mode
+				<ul>
+							<li>Auto – Enabled the exposure algorithm on the device.</li>
+							<li>Manual – Disabled exposure algorithm on the device.</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Priority" type="tt:ExposurePriority" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+				The exposure priority mode (low noise/framerate).
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MinExposureTime" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of the Minimum ExposureTime.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxExposureTime" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of the Maximum ExposureTime.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MinGain" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of the Minimum Gain.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxGain" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of the Maximum Gain.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MinIris" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of the Minimum Iris.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxIris" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of the Maximum Iris.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ExposureTime" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of the ExposureTime.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Gain" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of the Gain.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Iris" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid range of the Iris.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MoveOptions20">
+		<xs:sequence>
+			<xs:element name="Absolute" type="tt:AbsoluteFocusOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges for the absolute control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Relative" type="tt:RelativeFocusOptions20" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges for the relative control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Continuous" type="tt:ContinuousFocusOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges for the continuous control.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RelativeFocusOptions20">
+		<xs:sequence>
+			<xs:element name="Distance" type="tt:FloatRange">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges of the distance.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Speed" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Valid ranges of the speed.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="WhiteBalance20">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:WhiteBalanceMode">
+				<xs:annotation>
+					<xs:documentation>
+				'AUTO' or 'MANUAL'
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="CrGain" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Rgain (unitless).
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="CbGain" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+				Bgain (unitless).
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:WhiteBalance20Extension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="WhiteBalance20Extension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusConfiguration20">
+		<xs:sequence>
+			<xs:element name="AutoFocusMode" type="tt:AutoFocusMode">
+				<xs:annotation>
+					<xs:documentation>
+						Mode of auto focus.
+						<ul>
+							<li>AUTO - The device automatically adjusts focus.</li>
+							<li>MANUAL - The device does not automatically adjust focus.</li>
+						</ul>
+						Note: for devices supporting both manual and auto operation at the same time manual operation may be supported even if the Mode parameter is set to Auto.
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DefaultSpeed" type="xs:float" minOccurs="0"/>
+			<xs:element name="NearLimit" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Parameter to set autofocus near limit (unit: meter).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FarLimit" type="xs:float" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Parameter to set autofocus far limit (unit: meter).</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:FocusConfiguration20Extension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusConfiguration20Extension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="WhiteBalanceOptions20">
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:WhiteBalanceMode" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+				Mode of WhiteBalance.
+				<ul>
+							<li>AUTO</li>
+							<li>MANUAL</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="YrGain" type="tt:FloatRange" minOccurs="0"/>
+			<xs:element name="YbGain" type="tt:FloatRange" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:WhiteBalanceOptions20Extension" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="WhiteBalanceOptions20Extension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusOptions20">
+		<xs:sequence>
+			<xs:element name="AutoFocusModes" type="tt:AutoFocusMode" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+					Supported modes for auto focus.
+					<ul>
+						<li>AUTO - The device supports automatic focus adjustment.</li>
+						<li>MANUAL - The device supports manual focus adjustment.</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DefaultSpeed" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+					Valid range of DefaultSpeed.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="NearLimit" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+					Valid range of NearLimit.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FarLimit" type="tt:FloatRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+					Valid range of FarLimit.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:FocusOptions20Extension" minOccurs="0"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FocusOptions20Extension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ToneCompensationOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="xs:string" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Supported options for Tone Compensation mode. Its options shall be chosen from tt:ToneCompensationMode Type.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not support Level parameter for Tone Compensation.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded" />   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="DefoggingOptions">
+		<xs:sequence>
+			<xs:element name="Mode" type="xs:string" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Supported options for Defogging mode. Its options shall be chosen from tt:DefoggingMode Type.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Level" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not support Level parameter for Defogging.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded" />   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="NoiseReductionOptions">
+		<xs:sequence>
+			<xs:element name="Level" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not support Level parameter for NoiseReduction.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded" />   <!-- first ONVIF then Vendor -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--===============================-->
+	<!--  End, Imaging Version 2.0 Related Types   -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--  Event and Analytics Types    -->
+	<!--===============================-->
+	<xs:simpleType name="TopicNamespaceLocation">
+		<xs:restriction base="xs:anyURI"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="PropertyOperation">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Initialized"/>
+			<xs:enumeration value="Deleted"/>
+			<xs:enumeration value="Changed"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:element name="Message">
+		<xs:complexType>
+			<xs:sequence>
+				<xs:element name="Source" type="tt:ItemList" minOccurs="0">
+					<xs:annotation>
+						<xs:documentation>Token value pairs that triggered this message. Typically only one item is present.</xs:documentation>
+					</xs:annotation>
+				</xs:element>
+				<xs:element name="Key" type="tt:ItemList" minOccurs="0"/>
+				<xs:element name="Data" type="tt:ItemList" minOccurs="0"/>
+				<xs:element name="Extension" type="tt:MessageExtension" minOccurs="0"/>
+			</xs:sequence>
+			<xs:attribute name="UtcTime" type="xs:dateTime" use="required"/>
+			<xs:attribute name="PropertyOperation" type="tt:PropertyOperation"/>
+			<xs:anyAttribute processContents="lax"/>
+		</xs:complexType>
+	</xs:element>
+	<!--===============================-->
+	<xs:complexType name="MessageExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ItemList">
+		<xs:annotation>
+			<xs:documentation>
+			List of parameters according to the corresponding ItemListDescription.
+			Each item in the list shall have a unique name.
+		</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="SimpleItem" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Value name pair as defined by the corresponding description.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:attribute name="Name" type="xs:string" use="required">
+						<xs:annotation>
+							<xs:documentation>Item name.</xs:documentation>
+						</xs:annotation>
+					</xs:attribute>
+					<xs:attribute name="Value" type="xs:anySimpleType" use="required">
+						<xs:annotation>
+							<xs:documentation>Item value. The type is defined in the corresponding description.</xs:documentation>
+						</xs:annotation>
+					</xs:attribute>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ElementItem" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Complex value structure.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:any namespace="##any" processContents="lax">
+							<xs:annotation>
+								<xs:documentation>XML tree contiaing the element value as defined in the corresponding description.</xs:documentation>
+							</xs:annotation>
+						</xs:any>
+					</xs:sequence>
+					<xs:attribute name="Name" type="xs:string" use="required">
+						<xs:annotation>
+							<xs:documentation>Item name.</xs:documentation>
+						</xs:annotation>
+					</xs:attribute>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ItemListExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ItemListExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--       Message Description     -->
+	<!--===============================-->
+	<xs:complexType name="MessageDescription">
+		<xs:sequence>
+			<xs:element name="Source" type="tt:ItemListDescription" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Set of tokens producing this message. The list may only contain SimpleItemDescription items.
+					The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
+					For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
+					and the name of the analytics module or rule.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Key" type="tt:ItemListDescription" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Data" type="tt:ItemListDescription" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Describes the payload of the message.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:MessageDescriptionExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:attribute name="IsProperty" type="xs:boolean">
+			<xs:annotation>
+				<xs:documentation>Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MessageDescriptionExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ItemListDescription">
+		<xs:annotation>
+			<xs:documentation>
+			Describes a list of items. Each item in the list shall have a unique name.
+			The list is designed as linear structure without optional or unbounded elements.
+			Use ElementItems only when complex structures are inevitable.
+		</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="SimpleItemDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:attribute name="Name" type="xs:string" use="required">
+						<xs:annotation>
+							<xs:documentation>Item name. Must be unique within a list.</xs:documentation>
+						</xs:annotation>
+					</xs:attribute>
+					<xs:attribute name="Type" type="xs:QName" use="required"/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ElementItemDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+            Description of a complex type. The Type must reference a defined type.
+          </xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:attribute name="Name" type="xs:string" use="required">
+						<xs:annotation>
+							<xs:documentation>Item name. Must be unique within a list.</xs:documentation>
+						</xs:annotation>
+					</xs:attribute>
+					<xs:attribute name="Type" type="xs:QName" use="required">
+						<xs:annotation>
+							<xs:documentation>The type of the item. The Type must reference a defined type.</xs:documentation>
+						</xs:annotation>
+					</xs:attribute>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ItemListDescriptionExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ItemListDescriptionExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Polyline">
+		<xs:sequence>
+			<xs:element name="Point" type="tt:Vector" minOccurs="2" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<xs:element name="Polyline" type="tt:Polyline"/>
+	<!--===============================-->
+	<xs:simpleType name="Direction">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Left"/>
+			<xs:enumeration value="Right"/>
+			<xs:enumeration value="Any"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--    Analytics Configuration    -->
+	<!--===============================-->
+	<xs:complexType name="AnalyticsEngineConfiguration">
+		<xs:sequence>
+			<xs:element name="AnalyticsModule" type="tt:Config" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:AnalyticsEngineConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsEngineConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RuleEngineConfiguration">
+		<xs:sequence>
+			<xs:element name="Rule" type="tt:Config" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:RuleEngineConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RuleEngineConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Config">
+		<xs:sequence>
+			<xs:element name="Parameters" type="tt:ItemList">
+				<xs:annotation>
+					<xs:documentation>List of configuration parameters as defined in the correspding description.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:attribute name="Name" type="xs:string" use="required">
+			<xs:annotation>
+				<xs:documentation>Name of the configuration.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="Type" type="xs:QName" use="required">
+			<xs:annotation>
+				<xs:documentation>The Type attribute specifies the type of rule and shall be equal to value of one of Name attributes of ConfigDescription elements returned by GetSupportedRules and GetSupportedAnalyticsModules command.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ConfigDescription">
+		<xs:sequence>
+			<xs:element name="Parameters" type="tt:ItemListDescription">
+				<xs:annotation>
+					<xs:documentation>
+						List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems
+						should be used to transport the information to ease parsing of dynamically defined messages by a client
+						application.
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Messages" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>
+						The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so
+						the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable.
+						The name of all Items must be unique within all Items contained in any group of this Message.
+						Depending on the component multiple parameters or none may be needed to identify the component uniquely.
+					</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:complexContent>
+						<xs:extension base="tt:MessageDescription">
+							<xs:sequence>
+								<xs:element name="ParentTopic" type="xs:string">
+									<xs:annotation>
+										<xs:documentation>
+											The ParentTopic labels the message (e.g. "nn:RuleEngine/LineCrossing"). The real message can extend the ParentTopic
+											by for example the name of the instaniated rule (e.g. "nn:RuleEngine/LineCrossing/corssMyFirstLine").
+											Even without knowing the complete topic name, the subscriber will be able to distiguish the
+											messages produced by different rule instances of the same type via the Source fields of the message.
+											There the name of the rule instance, which produced the message, must be listed.
+										</xs:documentation>
+									</xs:annotation>
+								</xs:element>
+							</xs:sequence>
+						</xs:extension>
+					</xs:complexContent>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ConfigDescriptionExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:attribute name="Name" type="xs:QName" use="required">
+			<xs:annotation>
+				<xs:documentation>The Name attribute (e.g. "tt::LineDetector") uniquely identifies the type of rule, not a type definition in a schema.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="fixed" type="xs:boolean">
+			<xs:annotation>
+				<xs:documentation>The fixed attribute signals that it is not allowed to add or remove this type of configuration.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="maxInstances" type="xs:integer">
+			<xs:annotation>
+				<xs:documentation>The maxInstances attribute signals the maximum number of instances per configuration.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ConfigDescriptionExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SupportedRules">
+		<xs:sequence>
+			<xs:element name="RuleContentSchemaLocation" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Lists the location of all schemas that are referenced in the rules.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RuleDescription" type="tt:ConfigDescription" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of rules supported by the Video Analytics configuration..</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:SupportedRulesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SupportedRulesExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SupportedAnalyticsModules">
+		<xs:sequence>
+			<xs:element name="AnalyticsModuleContentSchemaLocation" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>It optionally contains a list of URLs that provide the location of schema files.
+        These schema files describe the types and elements used in the analytics module descriptions.
+        If the analytics module descriptions reference types or elements of the ONVIF schema file,
+        the ONVIF schema file MUST be explicitly listed.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AnalyticsModuleDescription" type="tt:ConfigDescription" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:SupportedAnalyticsModulesExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SupportedAnalyticsModulesExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PolygonConfiguration">
+		<xs:sequence>
+			<xs:element name="Polygon" type="tt:Polygon">
+				<xs:annotation>
+					<xs:documentation>Contains Polygon configuration for rule parameters</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PolylineArray">
+		<xs:sequence>
+			<xs:element name="Segment" type="tt:Polyline" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Contains array of Polyline</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PolylineArrayExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PolylineArrayExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PolylineArrayConfiguration">
+		<xs:sequence>
+			<xs:element name="PolylineArray" type="tt:PolylineArray">
+				<xs:annotation>
+					<xs:documentation>Contains PolylineArray configuration data</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MotionExpression">
+		<xs:sequence>
+			<xs:element name="Expression" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:attribute name="Type" type="xs:string"/>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MotionExpressionConfiguration">
+		<xs:sequence>
+			<xs:element name="MotionExpression" type="tt:MotionExpression">
+				<xs:annotation>
+					<xs:documentation>Contains Rule MotionExpression configuration</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CellLayout">
+		<xs:sequence>
+			<xs:element name="Transformation" type="tt:Transformation">
+				<xs:annotation>
+					<xs:documentation>Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:attribute name="Columns" type="xs:integer" use="required">
+			<xs:annotation>
+				<xs:documentation>Number of columns of the cell grid (x dimension)</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="Rows" type="xs:integer" use="required">
+			<xs:annotation>
+				<xs:documentation>Number of rows of the cell grid (y dimension)</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--End, Event and Analytics Types -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--      Display Related Types  -->
+	<!--===============================-->
+	<xs:complexType name="PaneConfiguration">
+		<xs:annotation>
+			<xs:documentation>Configuration of the streaming and coding settings of a Video window.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="PaneName" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional name of the pane configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AudioOutputToken" type="tt:ReferenceToken" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client
+can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AudioSourceToken" type="tt:ReferenceToken" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane.
+The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the
+DeviceIO service.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AudioEncoderConfiguration" type="tt:AudioEncoderConfiguration" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>The configuration of the audio encoder including codec, bitrate
+and sample rate. </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ReceiverToken" type="tt:ReferenceToken" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>A pointer to a Receiver that has the necessary information to receive
+				data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the
+				GetReceivers command of the Receiver Service.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Token" type="tt:ReferenceToken">
+				<xs:annotation>
+					<xs:documentation>A unique identifier in the display device.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PaneLayout">
+		<xs:annotation>
+			<xs:documentation>A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Pane" type="tt:ReferenceToken">
+				<xs:annotation>
+					<xs:documentation>Reference to the configuration of the streaming and coding parameters.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Area" type="tt:Rectangle">
+				<xs:annotation>
+					<xs:documentation>Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="Layout">
+		<xs:annotation>
+			<xs:documentation>A layout describes a set of Video windows that are displayed simultaniously on a display. </xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="PaneLayout" type="tt:PaneLayout" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of panes assembling the display layout.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:LayoutExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="LayoutExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="CodingCapabilities">
+		<xs:annotation>
+			<xs:documentation>This type contains the Audio and Video coding capabilities of a display service.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="AudioEncodingCapabilities" type="tt:AudioEncoderConfigurationOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device supports audio encoding this section describes the supported codecs and their configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AudioDecodingCapabilities" type="tt:AudioDecoderConfigurationOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the device supports audio decoding this section describes the supported codecs and their settings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="VideoDecodingCapabilities" type="tt:VideoDecoderConfigurationOptions">
+				<xs:annotation>
+					<xs:documentation>This section describes the supported video codesc and their configuration.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="LayoutOptions">
+		<xs:annotation>
+			<xs:documentation>The options supported for a display layout.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="PaneLayoutOptions" type="tt:PaneLayoutOptions" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Lists the possible Pane Layouts of the Video Output</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:LayoutOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="LayoutOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PaneLayoutOptions">
+		<xs:annotation>
+			<xs:documentation>Description of a pane layout describing a complete display layout.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Area" type="tt:Rectangle" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:PaneOptionExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PaneOptionExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<!--      End, Display Related Types  -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--   Receiver Types              -->
+	<!--===============================-->
+	<xs:complexType name="Receiver">
+		<xs:annotation>
+			<xs:documentation>
+			Description of a receiver, including its token and configuration.
+		</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Token" type="tt:ReferenceToken">
+				<xs:annotation>
+					<xs:documentation>Unique identifier of the receiver.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Configuration" type="tt:ReceiverConfiguration">
+				<xs:annotation>
+					<xs:documentation>Describes the configuration of the receiver.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ReceiverConfiguration">
+		<xs:annotation>
+			<xs:documentation>
+			Describes the configuration of a receiver.
+		</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Mode" type="tt:ReceiverMode">
+				<xs:annotation>
+					<xs:documentation>The following connection modes are defined:</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MediaUri" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>Details of the URI to which the receiver should connect.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="StreamSetup" type="tt:StreamSetup">
+				<xs:annotation>
+					<xs:documentation>Stream connection parameters.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="ReceiverMode">
+		<xs:annotation>
+			<xs:documentation>
+			Specifies a receiver connection mode.
+		</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="AutoConnect">
+				<xs:annotation>
+					<xs:documentation>The receiver connects on demand, as required by consumers of the media streams.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="AlwaysConnect">
+				<xs:annotation>
+					<xs:documentation>The receiver attempts to maintain a persistent connection to the configured endpoint.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="NeverConnect">
+				<xs:annotation>
+					<xs:documentation>The receiver does not attempt to connect.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="Unknown">
+				<xs:annotation>
+					<xs:documentation>This case should never happen.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="ReceiverState">
+		<xs:annotation>
+			<xs:documentation>
+			Specifies the current connection state of the receiver.
+		</xs:documentation>
+		</xs:annotation>
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="NotConnected">
+				<xs:annotation>
+					<xs:documentation>The receiver is not connected.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="Connecting">
+				<xs:annotation>
+					<xs:documentation>The receiver is attempting to connect.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="Connected">
+				<xs:annotation>
+					<xs:documentation>The receiver is connected.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="Unknown">
+				<xs:annotation>
+					<xs:documentation>This case should never happen.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="ReceiverStateInformation">
+		<xs:annotation>
+			<xs:documentation>
+			Contains information about a receiver's current state.
+		</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="State" type="tt:ReceiverState">
+				<xs:annotation>
+					<xs:documentation>The connection state of the receiver may have one of the following states: </xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AutoCreated" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates whether or not the receiver was created automatically.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--   End, Receiver Types         					  -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--         Storage Types         -->
+	<!--===============================-->
+	<xs:simpleType name="ReceiverReference">
+		<xs:restriction base="tt:ReferenceToken"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="RecordingReference">
+		<xs:restriction base="tt:ReferenceToken"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="SourceReference">
+		<xs:sequence>
+			<xs:element name="Token" type="tt:ReferenceToken"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:attribute name="Type" type="xs:anyURI" use="optional" default="http://www.onvif.org/ver10/schema/Receiver"/>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="TrackReference">
+		<xs:restriction base="tt:ReferenceToken"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="Description">
+		<xs:restriction base="xs:string"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="DateTimeRange">
+		<xs:sequence>
+			<xs:element name="From" type="xs:dateTime"/>
+			<xs:element name="Until" type="xs:dateTime"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingSummary">
+		<xs:sequence>
+			<xs:element name="DataFrom" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>The earliest point in time where there is recorded data on the device.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DataUntil" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>The most recent point in time where there is recorded data on the device.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="NumberRecordings" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>The device contains this many recordings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SearchScope">
+		<xs:annotation>
+			<xs:documentation>A structure for defining a limited scope when searching in recorded data.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="IncludedSources" type="tt:SourceReference" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="IncludedRecordings" type="tt:RecordingReference" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RecordingInformationFilter" type="tt:XPathExpression" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:SearchScopeExtension" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Extension point</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SearchScopeExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="EventFilter">
+		<xs:complexContent>
+			<xs:extension base="wsnt:FilterType">
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="PTZPositionFilter">
+		<xs:sequence>
+			<xs:element name="MinPosition" type="tt:PTZVector">
+				<xs:annotation>
+					<xs:documentation>The lower boundary of the PTZ volume to look for.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaxPosition" type="tt:PTZVector">
+				<xs:annotation>
+					<xs:documentation>The upper boundary of the PTZ volume to look for.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="EnterOrExit" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>If true, search for when entering the specified PTZ volume.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MetadataFilter">
+		<xs:sequence>
+			<xs:element name="MetadataStreamFilter" type="tt:XPathExpression"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="XPathExpression">
+		<xs:restriction base="xs:string"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="FindRecordingResultList">
+		<xs:sequence>
+			<xs:element name="SearchState" type="tt:SearchState">
+				<xs:annotation>
+					<xs:documentation>The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RecordingInformation" type="tt:RecordingInformation" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>A RecordingInformation structure for each found recording matching the search.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FindEventResultList">
+		<xs:sequence>
+			<xs:element name="SearchState" type="tt:SearchState">
+				<xs:annotation>
+					<xs:documentation>The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Result" type="tt:FindEventResult" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>A FindEventResult structure for each found event matching the search.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FindEventResult">
+		<xs:sequence>
+			<xs:element name="RecordingToken" type="tt:RecordingReference">
+				<xs:annotation>
+					<xs:documentation>The recording where this event was found. Empty string if no recording is associated with this event.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TrackToken" type="tt:TrackReference">
+				<xs:annotation>
+					<xs:documentation>A reference to the track where this event was found. Empty string if no track is associated with this event.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Time" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>The time when the event occured.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Event" type="wsnt:NotificationMessageHolderType">
+				<xs:annotation>
+					<xs:documentation>The description of the event.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="StartStateEvent" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FindPTZPositionResultList">
+		<xs:sequence>
+			<xs:element name="SearchState" type="tt:SearchState">
+				<xs:annotation>
+					<xs:documentation>The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Result" type="tt:FindPTZPositionResult" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>A FindPTZPositionResult structure for each found PTZ position matching the search.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FindPTZPositionResult">
+		<xs:sequence>
+			<xs:element name="RecordingToken" type="tt:RecordingReference">
+				<xs:annotation>
+					<xs:documentation>A reference to the recording containing the PTZ position.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TrackToken" type="tt:TrackReference">
+				<xs:annotation>
+					<xs:documentation>A reference to the metadata track containing the PTZ position.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Time" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>The time when the PTZ position was valid.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Position" type="tt:PTZVector">
+				<xs:annotation>
+					<xs:documentation>The PTZ position.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FindMetadataResultList">
+		<xs:sequence>
+			<xs:element name="SearchState" type="tt:SearchState">
+				<xs:annotation>
+					<xs:documentation>The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Result" type="tt:FindMetadataResult" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>A FindMetadataResult structure for each found set of Metadata matching the search.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="FindMetadataResult">
+		<xs:sequence>
+			<xs:element name="RecordingToken" type="tt:RecordingReference">
+				<xs:annotation>
+					<xs:documentation>A reference to the recording containing the metadata.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TrackToken" type="tt:TrackReference">
+				<xs:annotation>
+					<xs:documentation>A reference to the metadata track containing the matching metadata.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Time" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>The point in time when the matching metadata occurs in the metadata track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="SearchState">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Queued">
+				<xs:annotation>
+					<xs:documentation>The search is queued and not yet started.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="Searching">
+				<xs:annotation>
+					<xs:documentation>The search is underway and not yet completed.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="Completed">
+				<xs:annotation>
+					<xs:documentation>The search has been completed and no new results will be found.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+			<xs:enumeration value="Unknown">
+				<xs:annotation>
+					<xs:documentation>The state of the search is unknown. (This is not a valid response from GetSearchState.)</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:simpleType name="JobToken">
+		<xs:restriction base="tt:ReferenceToken"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="RecordingInformation">
+		<xs:sequence>
+			<xs:element name="RecordingToken" type="tt:RecordingReference"/>
+			<xs:element name="Source" type="tt:RecordingSourceInformation">
+				<xs:annotation>
+					<xs:documentation>
+					Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single
+					recording is intended to record related material, there is just one source. It is indicates the physical location or the
+					major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
+				</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="EarliestRecording" type="xs:dateTime" minOccurs="0"/>
+			<xs:element name="LatestRecording" type="xs:dateTime" minOccurs="0"/>
+			<xs:element name="Content" type="tt:Description"/>
+			<xs:element name="Track" type="tt:TrackInformation" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="RecordingStatus" type="tt:RecordingStatus"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingSourceInformation">
+		<xs:annotation>
+			<xs:documentation>
+				A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
+			</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="SourceId" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>
+				Identifier for the source chosen by the client that creates the structure.
+				This identifier is opaque to the device. Clients may use any type of URI for this field. A device shall support at least 128 characters.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Name" type="tt:Name">
+				<xs:annotation>
+					<xs:documentation>Informative user readable name of the source, e.g. "Camera23". A device shall support at least 20 characters.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Location" type="tt:Description">
+				<xs:annotation>
+					<xs:documentation>Informative description of the physical location of the source, e.g. the coordinates on a map.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Description" type="tt:Description">
+				<xs:annotation>
+					<xs:documentation>Informative description of the source.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Address" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>URI provided by the service supplying data to be recorded. A device shall support at least 128 characters.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="RecordingStatus">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Initiated"/>
+			<xs:enumeration value="Recording"/>
+			<xs:enumeration value="Stopped"/>
+			<xs:enumeration value="Removing"/>
+			<xs:enumeration value="Removed"/>
+			<xs:enumeration value="Unknown">
+				<xs:annotation>
+					<xs:documentation>This case should never happen.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="TrackInformation">
+		<xs:sequence>
+			<xs:element name="TrackToken" type="tt:TrackReference"/>
+			<xs:element name="TrackType" type="tt:TrackType">
+				<xs:annotation>
+					<xs:documentation>Type of the track: "Video", "Audio" or "Metadata".
+					The track shall only be able to hold data of that type.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Description" type="tt:Description">
+				<xs:annotation>
+					<xs:documentation>Informative description of the contents of the track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DataFrom" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>The start date and time of the oldest recorded data in the track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DataTo" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>The stop date and time of the newest recorded data in the track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="TrackType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Video"/>
+			<xs:enumeration value="Audio"/>
+			<xs:enumeration value="Metadata"/>
+			<xs:enumeration value="Extended">
+				<xs:annotation>
+					<xs:documentation>Placeholder for future extension.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="MediaAttributes">
+		<xs:annotation>
+			<xs:documentation>A set of media attributes valid for a recording at a point in time or for a time interval.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="RecordingToken" type="tt:RecordingReference">
+				<xs:annotation>
+					<xs:documentation>A reference to the recording that has these attributes.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TrackAttributes" type="tt:TrackAttributes" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>A set of attributes for each track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="From" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>The attributes are valid from this point in time in the recording.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Until" type="xs:dateTime">
+				<xs:annotation>
+					<xs:documentation>The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="TrackAttributes">
+		<xs:sequence>
+			<xs:element name="TrackInformation" type="tt:TrackInformation">
+				<xs:annotation>
+					<xs:documentation>The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="VideoAttributes" type="tt:VideoAttributes" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the track is a video track, exactly one of this structure shall be present and contain the video attributes.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AudioAttributes" type="tt:AudioAttributes" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MetadataAttributes" type="tt:MetadataAttributes" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:TrackAttributesExtension" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation/>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="TrackAttributesExtension">
+		<xs:sequence>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="VideoAttributes">
+		<xs:sequence>
+			<xs:element name="Bitrate" type="xs:int" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Average bitrate in kbps.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Width" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>The width of the video in pixels.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Height" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>The height of the video in pixels.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Encoding" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Video encoding of the track. Use values from tt:VideoEncoding for JPEG, MPEG4 and H264. Otherwise use type definitions as defined by <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA</a>.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Framerate" type="xs:float">
+				<xs:annotation>
+					<xs:documentation>Average framerate in frames per second.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AudioAttributes">
+		<xs:sequence>
+			<xs:element name="Bitrate" type="xs:int" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>The bitrate in kbps.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Encoding" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Audio encoding of the track. Use values from tt:AudioEncoding for G711, G726, AAC. Otherwise use type definitions as defined by <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA</a>.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Samplerate" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>The sample rate in kHz.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MetadataAttributes">
+		<xs:sequence>
+			<xs:element name="CanContainPTZ" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates that there can be PTZ data in the metadata track in the specified time interval.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="CanContainAnalytics" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates that there can be analytics data in the metadata track in the specified time interval.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="CanContainNotifications" type="xs:boolean">
+				<xs:annotation>
+					<xs:documentation>Indicates that there can be notifications in the metadata track in the specified time interval.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:attribute name="PtzSpaces" type="tt:StringAttrList">
+			<xs:annotation>
+				<xs:documentation>List of all PTZ spaces active for recording. Note that events are only recorded on position changes and the actual point of recording may not necessarily contain an event of the specified type. </xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--         RecordingService Types         		  -->
+	<!--===============================-->
+	<!--===============================-->
+	<xs:simpleType name="RecordingJobReference">
+		<xs:restriction base="tt:ReferenceToken"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="RecordingConfiguration">
+		<xs:sequence>
+			<xs:element name="Source" type="tt:RecordingSourceInformation">
+				<xs:annotation>
+					<xs:documentation>Information about the source of the recording.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Content" type="tt:Description">
+				<xs:annotation>
+					<xs:documentation>Informative description of the source.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="MaximumRetentionTime" type="xs:duration">
+				<xs:annotation>
+					<xs:documentation>Sspecifies the maximum time that data in any track within the
+				recording shall be stored. The device shall delete any data older than the maximum retention
+				time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0,
+				the device shall not limit the retention time of stored data, except by resource constraints.
+				Whatever the value of MaximumRetentionTime, the device may automatically delete
+				recordings to free up storage space for new recordings.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="TrackConfiguration">
+		<xs:sequence>
+			<xs:element name="TrackType" type="tt:TrackType">
+				<xs:annotation>
+					<xs:documentation>Type of the track. It shall be equal to the strings “Video”,
+				“Audio” or “Metadata”. The track shall only be able to hold data of that type.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Description" type="tt:Description">
+				<xs:annotation>
+					<xs:documentation>Informative description of the track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="GetRecordingsResponseItem">
+		<xs:sequence>
+			<xs:element name="RecordingToken" type="tt:RecordingReference">
+				<xs:annotation>
+					<xs:documentation>Token of the recording.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Configuration" type="tt:RecordingConfiguration">
+				<xs:annotation>
+					<xs:documentation>Configuration of the recording.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Tracks" type="tt:GetTracksResponseList">
+				<xs:annotation>
+					<xs:documentation>List of tracks.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="GetTracksResponseList">
+		<xs:sequence>
+			<xs:element name="Track" type="tt:GetTracksResponseItem" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Configuration of a track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="GetTracksResponseItem">
+		<xs:sequence>
+			<xs:element name="TrackToken" type="tt:TrackReference">
+				<xs:annotation>
+					<xs:documentation>Token of the track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Configuration" type="tt:TrackConfiguration">
+				<xs:annotation>
+					<xs:documentation>Configuration of the track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobConfiguration">
+		<xs:sequence>
+			<xs:element name="RecordingToken" type="tt:RecordingReference">
+				<xs:annotation>
+					<xs:documentation>Identifies the recording to which this job shall store the received data.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Mode" type="tt:RecordingJobMode">
+				<xs:annotation>
+					<xs:documentation>The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try
+				to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/>
+				The only valid values for Mode shall be “Idle” and “Active”.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Priority" type="xs:int">
+				<xs:annotation>
+					<xs:documentation>This shall be a non-negative number. If there are multiple recording jobs that store data to
+				the same track, the device will only store the data for the recording job with the highest
+				priority. The priority is specified per recording job, but the device shall determine the priority
+				of each track individually. If there are two recording jobs with the same priority, the device
+				shall record the data corresponding to the recording job that was activated the latest.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Source" type="tt:RecordingJobSource" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Source of the recording.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:RecordingJobConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="RecordingJobMode">
+		<xs:restriction base="xs:string"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobSource">
+		<xs:sequence>
+			<xs:element name="SourceToken" type="tt:SourceReference" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>This field shall be a reference to the source of the data. The type of the source
+				is determined by the attribute Type in the SourceToken structure. If Type is
+				http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case
+				the device shall receive the data over the network. If Type is
+				http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the
+				device to obtain data from a profile that exists on the local device.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="AutoCreateReceiver" type="xs:boolean" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>If this field is TRUE, and if the SourceToken is omitted, the device
+				shall create a receiver object (through the receiver service) and assign the
+				ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration
+				from the device, the AutoCreateReceiver field shall never be present.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Tracks" type="tt:RecordingJobTrack" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of tracks associated with the recording.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:RecordingJobSourceExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobSourceExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobTrack">
+		<xs:sequence>
+			<xs:element name="SourceTag" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>If the received RTSP stream contains multiple tracks of the same type, the
+						SourceTag differentiates between those Tracks. This field can be ignored in case of recording a local source.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Destination" type="tt:TrackReference">
+				<xs:annotation>
+					<xs:documentation>The destination is the tracktoken of the track to which the device shall store the
+				received data.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobStateInformation">
+		<xs:sequence>
+			<xs:element name="RecordingToken" type="tt:RecordingReference">
+				<xs:annotation>
+					<xs:documentation>Identification of the recording that the recording job records to.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="State" type="tt:RecordingJobState">
+				<xs:annotation>
+					<xs:documentation>Holds the aggregated state over the whole RecordingJobInformation structure.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Sources" type="tt:RecordingJobStateSource" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Identifies the data source of the recording job.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:RecordingJobStateInformationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobStateInformationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="RecordingJobState">
+		<xs:restriction base="xs:string"/>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobStateSource">
+		<xs:sequence>
+			<xs:element name="SourceToken" type="tt:SourceReference">
+				<xs:annotation>
+					<xs:documentation>Identifies the data source of the recording job.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="State" type="tt:RecordingJobState">
+				<xs:annotation>
+					<xs:documentation>Holds the aggregated state over all substructures of RecordingJobStateSource.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Tracks" type="tt:RecordingJobStateTracks">
+				<xs:annotation>
+					<xs:documentation>List of track items.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobStateTracks">
+		<xs:sequence>
+			<xs:element name="Track" type="tt:RecordingJobStateTrack" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="RecordingJobStateTrack">
+		<xs:sequence>
+			<xs:element name="SourceTag" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>Identifies the track of the data source that provides the data.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Destination" type="tt:TrackReference">
+				<xs:annotation>
+					<xs:documentation>Indicates the destination track.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Error" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optionally holds an implementation defined string value that describes the error.
+				The string should be in the English language.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="State" type="tt:RecordingJobState">
+				<xs:annotation>
+					<xs:documentation>Provides the job state of the track. The valid
+				values of state shall be “Idle”, “Active” and “Error”. If state equals “Error”, the Error field may be filled in with an implementation defined value.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="GetRecordingJobsResponseItem">
+		<xs:sequence>
+			<xs:element name="JobToken" type="tt:RecordingJobReference"/>
+			<xs:element name="JobConfiguration" type="tt:RecordingJobConfiguration"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--         End, RecordingService Types         		  -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--         Replay Types         		  -->
+	<!--===============================-->
+	<xs:complexType name="ReplayConfiguration">
+		<xs:annotation>
+			<xs:documentation>
+      Configuration parameters for the replay service.
+    </xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="SessionTimeout" type="xs:duration">
+				<xs:annotation>
+					<xs:documentation>The RTSP session timeout.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--         End, Replay Types         		  -->
+	<!--===============================-->
+	<!--===============================-->
+	<!--===============================-->
+	<!--         Analytics Device Types         -->
+	<!--===============================-->
+	<xs:complexType name="AnalyticsEngine">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="AnalyticsEngineConfiguration" type="tt:AnalyticsDeviceEngineConfiguration"/>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsDeviceEngineConfiguration">
+		<xs:sequence>
+			<xs:element name="EngineConfiguration" type="tt:EngineConfiguration" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:AnalyticsDeviceEngineConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsDeviceEngineConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="EngineConfiguration">
+		<xs:sequence>
+			<xs:element name="VideoAnalyticsConfiguration" type="tt:VideoAnalyticsConfiguration"/>
+			<xs:element name="AnalyticsEngineInputInfo" type="tt:AnalyticsEngineInputInfo"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsEngineInputInfo">
+		<xs:sequence>
+			<xs:element name="InputInfo" type="tt:Config" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:AnalyticsEngineInputInfoExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsEngineInputInfoExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsEngineInput">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="SourceIdentification" type="tt:SourceIdentification"/>
+					<xs:element name="VideoInput" type="tt:VideoEncoderConfiguration"/>
+					<xs:element name="MetadataInput" type="tt:MetadataInput"/>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SourceIdentification">
+		<xs:sequence>
+			<xs:element name="Name" type="xs:string"/>
+			<xs:element name="Token" type="tt:ReferenceToken" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:SourceIdentificationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="SourceIdentificationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MetadataInput">
+		<xs:sequence>
+			<xs:element name="MetadataConfig" type="tt:Config" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:MetadataInputExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MetadataInputExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsEngineControl">
+		<xs:complexContent>
+			<xs:extension base="tt:ConfigurationEntity">
+				<xs:sequence>
+					<xs:element name="EngineToken" type="tt:ReferenceToken">
+						<xs:annotation>
+							<xs:documentation>Token of the analytics engine (AnalyticsEngine) being controlled.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="EngineConfigToken" type="tt:ReferenceToken">
+						<xs:annotation>
+							<xs:documentation>Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="InputToken" type="tt:ReferenceToken" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>Tokens of the input (AnalyticsEngineInput) configuration applied.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="ReceiverToken" type="tt:ReferenceToken" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Multicast" type="tt:MulticastConfiguration" minOccurs="0"/>
+					<xs:element name="Subscription" type="tt:Config"/>
+					<xs:element name="Mode" type="tt:ModeOfOperation"/>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="ModeOfOperation">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Idle"/>
+			<xs:enumeration value="Active"/>
+			<xs:enumeration value="Unknown">
+				<xs:annotation>
+					<xs:documentation>This case should never happen.</xs:documentation>
+				</xs:annotation>
+			</xs:enumeration>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsStateInformation">
+		<xs:sequence>
+			<xs:element name="AnalyticsEngineControlToken" type="tt:ReferenceToken">
+				<xs:annotation>
+					<xs:documentation>Token of the control object whose status is requested.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="State" type="tt:AnalyticsState"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="AnalyticsState">
+		<xs:sequence>
+			<xs:element name="Error" type="xs:string" minOccurs="0"/>
+			<xs:element name="State" type="xs:string"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<!--         End, Analytics Device Types         -->
+	<!--===============================-->
+	<!--=========================================-->
+	<!--  Action event payload Types   -->
+	<!--=========================================-->
+	<!--===============================-->
+	<xs:complexType name="ActionEngineEventPayload">
+		<xs:annotation>
+			<xs:documentation>Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="RequestInfo" type="soapenv:Envelope" minOccurs="0" maxOccurs="1">
+				<xs:annotation>
+					<xs:documentation>Request Message</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ResponseInfo" type="soapenv:Envelope" minOccurs="0" maxOccurs="1">
+				<xs:annotation>
+					<xs:documentation>Response Message</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Fault" type="soapenv:Fault" minOccurs="0" maxOccurs="1">
+				<xs:annotation>
+					<xs:documentation>Fault Message</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:ActionEngineEventPayloadExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ActionEngineEventPayloadExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--=========================================-->
+	<!--  End, Action event payload Types   -->
+	<!--=========================================-->
+        <!--=========================================-->
+	<!--  Begin, Audio event types               -->
+	<!--=========================================-->
+	<xs:simpleType name="AudioClassType">
+		<xs:annotation>
+		<xs:documentation>
+		  AudioClassType acceptable values are;
+		   gun_shot, scream, glass_breaking, tire_screech   
+		</xs:documentation>
+		</xs:annotation>
+	<xs:restriction base="xs:string"/>
+	</xs:simpleType>
+
+	<xs:complexType name="AudioClassCandidate">
+	<xs:sequence>
+		<xs:element name="Type" type="tt:AudioClassType">
+			<xs:annotation>
+			<xs:documentation>Indicates audio class label</xs:documentation>
+			</xs:annotation>
+		</xs:element> 
+ 		<xs:element name="Likelihood" type="xs:float">
+			<xs:annotation>
+			<xs:documentation>A likelihood/probability that the corresponding audio event belongs to this class. The sum of the likelihoods shall NOT exceed 1</xs:documentation>
+			</xs:annotation>
+		</xs:element>  
+		<xs:any namespace="##targetNamespace" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+	</xs:sequence>
+	<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+
+	<xs:complexType name="AudioClassDescriptor">
+	<xs:sequence>
+		<xs:element name="ClassCandidate" type="tt:AudioClassCandidate" minOccurs="0" maxOccurs="unbounded">
+			<xs:annotation>
+			<xs:documentation>Array of audio class label and class probability</xs:documentation>
+			</xs:annotation>
+		</xs:element>
+		<xs:element name="Extension" type="tt:AudioClassDescriptorExtension" minOccurs="0"/>
+	</xs:sequence>
+	<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<xs:complexType name="AudioClassDescriptorExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--=========================================-->
+	<!--  End, Audio event types                 -->
+	<!--=========================================-->
+	<!--=========================================-->
+	<!--  Begin, Media event types               -->
+	<!--=========================================-->
+	<xs:complexType name="ActiveConnection">
+		<xs:sequence>
+			<xs:element name="CurrentBitrate" type="xs:float"/>
+			<xs:element name="CurrentFps" type="xs:float"/>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ProfileStatus">
+		<xs:sequence>
+			<xs:element name="ActiveConnections" type="tt:ActiveConnection" minOccurs="0" maxOccurs="unbounded"/>
+			<xs:element name="Extension" type="tt:ProfileStatusExtension" minOccurs="0" />
+		</xs:sequence>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ProfileStatusExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--=========================================-->
+	<!--  End, Media event types                 -->
+	<!--=========================================-->
+	<!--==================================-->
+	<!--  Begin, OSD Device Types         -->
+	<!--==================================-->
+	<xs:complexType name="OSDReference">
+		<xs:simpleContent>
+			<xs:extension base="tt:ReferenceToken">
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:simpleContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:simpleType name="OSDType">
+		<xs:restriction base="xs:string">
+			<xs:enumeration value="Text"/>
+			<xs:enumeration value="Image"/>
+			<xs:enumeration value="Extended"/>
+		</xs:restriction>
+	</xs:simpleType>
+	<!--===============================-->
+	<xs:complexType name="OSDPosConfiguration">
+		<xs:sequence>
+			<xs:element name="Type" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>For OSD position type, following are the pre-defined: <ul><li>UpperLeft</li>
+						<li>UpperRight</li>
+						<li>LowerLeft</li>
+						<li>LowerRight</li>
+						<li>Custom</li></ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Pos" type="tt:Vector" minOccurs="0"/>
+			<xs:element name="Extension" type="tt:OSDPosConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDPosConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDColor">
+		<xs:annotation>
+			<xs:documentation>The value range of "Transparent" could be defined by vendors only should follow this rule: the minimum value means non-transparent and the maximum value maens fully transparent.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Color" type="tt:Color"/>
+		</xs:sequence>
+		<xs:attribute name="Transparent" type="xs:int" use="optional"/>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDTextConfiguration">
+		<xs:sequence>
+			<xs:element name="Type" type="xs:string">
+				<xs:annotation>
+					<xs:documentation>
+						The following OSD Text Type are defined:<ul>
+							<li>Plain - The Plain type means the OSD is shown as a text string which defined in the "PlainText" item.</li>
+							<li>Date - The Date type means the OSD is shown as a date, format of which should be present in the "DateFormat" item.</li>
+							<li>Time - The Time type means the OSD is shown as a time, format of which should be present in the "TimeFormat" item.</li>
+							<li>DateAndTime - The DateAndTime type means the OSD is shown as date and time, format of which should be present in the "DateFormat" and the "TimeFormat" item.</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DateFormat" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+						List of supported OSD date formats. This element shall be present when the value of Type field has Date or DateAndTime. The following DateFormat are defined:<ul>
+							<li>M/d/yyyy - e.g. 3/6/2013</li>
+							<li>MM/dd/yyyy - e.g. 03/06/2013</li>
+							<li>dd/MM/yyyy - e.g. 06/03/2013</li>
+							<li>yyyy/MM/dd - e.g. 2013/03/06</li>
+							<li>yyyy-MM-dd - e.g. 2013-06-03</li>
+							<li>dddd, MMMM dd, yyyy - e.g. Wednesday, March 06, 2013</li>
+							<li>MMMM dd, yyyy - e.g. March 06, 2013</li>
+							<li>dd MMMM, yyyy - e.g. 06 March, 2013</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TimeFormat" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>
+						List of supported OSD time formats. This element shall be present when the value of Type field has Time or DateAndTime. The following TimeFormat are defined:<ul>
+							<li>h:mm:ss tt - e.g. 2:14:21 PM</li>
+							<li>hh:mm:ss tt - e.g. 02:14:21 PM</li>
+							<li>H:mm:ss - e.g. 14:14:21</li>
+							<li>HH:mm:ss - e.g. 14:14:21</li>
+						</ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FontSize" type="xs:int" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Font size of the text in pt.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FontColor" type="tt:OSDColor" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Font color of the text.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="BackgroundColor" type="tt:OSDColor" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Background color of the text.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PlainText" type="xs:string" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>The content of text to be displayed.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:OSDTextConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:attribute name="IsPersistentText" type="xs:boolean" use="optional">
+			<xs:annotation><xs:documentation>This flag is applicable for Type Plain and defaults to true. When set to false the PlainText content will not be persistent across device reboots. </xs:documentation></xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDTextConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDImgConfiguration">
+		<xs:sequence>
+			<xs:element name="ImgPath" type="xs:anyURI">
+				<xs:annotation>
+					<xs:documentation>The URI of the image which to be displayed.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:OSDImgConfigurationExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDImgConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ColorspaceRange">
+		<xs:sequence>
+			<xs:element name="X" type="tt:FloatRange"/>
+			<xs:element name="Y" type="tt:FloatRange"/>
+			<xs:element name="Z" type="tt:FloatRange"/>
+			<xs:element name="Colorspace" type="xs:anyURI"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="ColorOptions">
+		<xs:annotation>
+			<xs:documentation>Describe the option of the color supported. Either list each color or define the range of color value. The following values are acceptable for Colourspace attribute.<ul><li>http://www.onvif.org/ver10/colorspace/YCbCr - YCbCr colourspace</li>
+				<li>http://www.onvif.org/ver10/colorspace/CIELUV - CIE LUV</li>
+				<li>http://www.onvif.org/ver10/colorspace/CIELAB - CIE 1976 (L*a*b*)</li>
+				<li>http://www.onvif.org/ver10/colorspace/HSV - HSV colourspace</li></ul>
+			</xs:documentation>
+		</xs:annotation>
+		<xs:choice>
+			<xs:element name="ColorList" type="tt:Color" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List the supported color.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ColorspaceRange" type="tt:ColorspaceRange" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>Define the rang of color supported.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+		</xs:choice>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDColorOptions">
+		<xs:annotation>
+			<xs:documentation>Describe the option of the color and its transparency.</xs:documentation>
+		</xs:annotation>
+		<xs:sequence>
+			<xs:element name="Color" type="tt:ColorOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Optional list of supported colors.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Transparent" type="tt:IntRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Range of the transparent level. Larger means more tranparent.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:OSDColorOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDColorOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDTextOptions">
+		<xs:sequence>
+			<xs:element name="Type" type="xs:string" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported OSD text type. When a device indicates the supported number relating to Text type in MaximumNumberOfOSDs, the type shall be presented.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FontSizeRange" type="tt:IntRange" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Range of the font size value.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="DateFormat" type="xs:string" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported date format.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TimeFormat" type="xs:string" minOccurs="0" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of supported time format.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="FontColor" type="tt:OSDColorOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>List of supported font color.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="BackgroundColor" type="tt:OSDColorOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>List of supported background color.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:OSDTextOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDTextOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDImgOptions">
+		<xs:sequence>
+			<xs:element name="ImagePath" type="xs:anyURI" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List of available image URIs.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:OSDImgOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:attribute name="FormatsSupported" type="tt:StringAttrList">
+			<xs:annotation>
+				<xs:documentation>List of supported image MIME types, such as "image/png".</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="MaxSize" type="xs:int">
+			<xs:annotation>
+				<xs:documentation>The maximum size (in bytes) of the image that can be uploaded.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="MaxWidth" type="xs:int">
+			<xs:annotation>
+				<xs:documentation>The maximum width (in pixels) of the image that can be uploaded.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:attribute name="MaxHeight" type="xs:int">
+			<xs:annotation>
+				<xs:documentation>The maximum height (in pixels) of the image that can be uploaded.</xs:documentation>
+			</xs:annotation>
+		</xs:attribute>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDImgOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDConfiguration">
+		<xs:complexContent>
+			<xs:extension base="tt:DeviceEntity">
+				<xs:sequence>
+					<xs:element name="VideoSourceConfigurationToken" type="tt:OSDReference">
+						<xs:annotation>
+							<xs:documentation>Reference to the video source configuration.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Type" type="tt:OSDType">
+						<xs:annotation>
+							<xs:documentation>Type of OSD.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Position" type="tt:OSDPosConfiguration">
+						<xs:annotation>
+							<xs:documentation>Position configuration of OSD.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="TextString" type="tt:OSDTextConfiguration" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Text configuration of OSD. It shall be present when the value of Type field is Text.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Image" type="tt:OSDImgConfiguration" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Image configuration of OSD. It shall be present when the value of Type field is Image</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tt:OSDConfigurationExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:extension>
+		</xs:complexContent>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDConfigurationExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="MaximumNumberOfOSDs">
+		<xs:attribute name="Total" type="xs:int" use="required"/>
+		<xs:attribute name="Image" type="xs:int"/>
+		<xs:attribute name="PlainText" type="xs:int"/>
+		<xs:attribute name="Date" type="xs:int"/>
+		<xs:attribute name="Time" type="xs:int"/>
+		<xs:attribute name="DateAndTime" type="xs:int"/>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDConfigurationOptions">
+		<xs:sequence>
+			<xs:element name="MaximumNumberOfOSDs" type="tt:MaximumNumberOfOSDs">
+				<xs:annotation>
+					<xs:documentation>The maximum number of OSD configurations supported for the specified video source configuration. If the configuration does not support OSDs, this value shall be zero and the Type and PositionOption elements are ignored. If a device limits the number of instances by OSDType, it shall indicate the supported number for each type via the related attribute.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Type" type="tt:OSDType" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List supported type of OSD configuration. When a device indicates the supported number for each types in MaximumNumberOfOSDs, related type shall be presented. A device shall return Option element relating to listed type.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="PositionOption" type="xs:string" maxOccurs="unbounded">
+				<xs:annotation>
+					<xs:documentation>List available OSD position type. Following are the pre-defined:<ul><li>UpperLeft</li>
+						<li>UpperRight</li>
+						<li>LowerLeft</li>
+						<li>LowerRight</li>
+						<li>Custom</li></ul>
+					</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="TextOption" type="tt:OSDTextOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Option of the OSD text configuration. This element shall be returned if the device is signaling the support for Text.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="ImageOption" type="tt:OSDImgOptions" minOccurs="0">
+				<xs:annotation>
+					<xs:documentation>Option of the OSD image configuration. This element shall be returned if the device is signaling the support for Image.</xs:documentation>
+				</xs:annotation>
+			</xs:element>
+			<xs:element name="Extension" type="tt:OSDConfigurationOptionsExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--===============================-->
+	<xs:complexType name="OSDConfigurationOptionsExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--=========================================-->
+	<!--  End, OSD Device Types                  -->
+	<!--=========================================-->
+
+	<!--=========================================-->
+	<!--  Begin, StorageConfiguration            -->
+	<!--=========================================-->
+	<xs:complexType name="FileProgress">
+    	<xs:sequence>
+    		<xs:element name="FileName" type="xs:string">
+    			<xs:annotation>
+    				<xs:documentation>Exported file name</xs:documentation>
+    			</xs:annotation>
+    		</xs:element>
+    		<xs:element name="Progress" type="xs:float">
+    			<xs:annotation>
+    				<xs:documentation>Normalized percentage completion for uploading the exported file</xs:documentation>
+    			</xs:annotation>
+    		</xs:element>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+    </xs:complexType>
+
+	<xs:complexType name="ArrayOfFileProgress">
+    	<xs:sequence>
+    		<xs:element name="FileProgress" type="tt:FileProgress" minOccurs="0" maxOccurs="unbounded">
+    			<xs:annotation>
+    				<xs:documentation>Exported file name and export progress information</xs:documentation>
+    			</xs:annotation>
+    		</xs:element>
+			<xs:element name="Extension" type="tt:ArrayOfFileProgressExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+    </xs:complexType>
+	<xs:complexType name="ArrayOfFileProgressExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+
+	<xs:complexType name="StorageReferencePath">
+    	<xs:sequence>
+    		<xs:element name="StorageToken" type="tt:ReferenceToken">
+    			<xs:annotation>
+    				<xs:documentation>identifier of an existing Storage Configuration.</xs:documentation>
+    			</xs:annotation>
+    		</xs:element>
+    		<xs:element name="RelativePath" type="xs:string" minOccurs="0">
+    			<xs:annotation>
+    				<xs:documentation>gives the relative directory path on the storage</xs:documentation>
+    			</xs:annotation>
+    		</xs:element>
+			<xs:element name="Extension" type="tt:StorageReferencePathExtension" minOccurs="0"/>
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+    </xs:complexType>
+	<xs:complexType name="StorageReferencePathExtension">
+		<xs:sequence>
+			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+		</xs:sequence>
+		<xs:anyAttribute processContents="lax"/>
+	</xs:complexType>
+	<!--=========================================-->
+	<!--  End, StorageConfiguration              -->
+	<!--=========================================-->
+</xs:schema>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver10/search.wsdl b/gsoap/bin/www.onvif.org/onvif/ver10/search.wsdl
new file mode 100644
index 0000000..b40ccc1
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver10/search.wsdl
@@ -0,0 +1,882 @@
+<?xml version="1.0" encoding="utf-8"?>
+<?xml-stylesheet type="text/xsl" href="../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2014 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tse="http://www.onvif.org/ver10/search/wsdl" targetNamespace="http://www.onvif.org/ver10/search/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/search/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="2.4.2">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../ver10/schema/onvif.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tse:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the search service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="MetadataSearch" type="xs:boolean"/>
+				<xs:attribute name="GeneralStartEvents" type="xs:boolean"><xs:annotation><xs:documentation> Indicates support for general virtual property events in the FindEvents method.</xs:documentation></xs:annotation></xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="tse:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="GetRecordingSummary">
+				<xs:complexType>
+					<xs:sequence>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingSummaryResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Summary" type="tt:RecordingSummary"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetRecordingInformation">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingToken" type="tt:RecordingReference"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingInformationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingInformation" type="tt:RecordingInformation"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetMediaAttributes">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RecordingTokens" type="tt:RecordingReference" minOccurs="0" maxOccurs="unbounded"/>
+						<xs:element name="Time" type="xs:dateTime"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetMediaAttributesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="MediaAttributes" type="tt:MediaAttributes" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="FindRecordings">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Scope" type="tt:SearchScope">
+							<xs:annotation>
+								<xs:documentation>Scope defines the dataset to consider for this search.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MaxMatches" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="KeepAliveTime" type="xs:duration">
+							<xs:annotation>
+								<xs:documentation>The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="FindRecordingsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetRecordingSearchResults">
+				<xs:annotation>
+					<xs:documentation>Gets results from a particular recording listingession.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken">
+							<xs:annotation>
+								<xs:documentation>The search session to get results from.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MinResults" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The minimum number of results to return in one response.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MaxResults" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The maximum number of results to return in one response.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="WaitTime" type="xs:duration" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRecordingSearchResultsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ResultList" type="tt:FindRecordingResultList"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="FindEvents">
+				<xs:annotation>
+					<xs:documentation>Starts a search session and specifies the search parameters.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StartPoint" type="xs:dateTime">
+							<xs:annotation>
+								<xs:documentation>The point of time where the search will start.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="EndPoint" type="xs:dateTime" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Scope" type="tt:SearchScope"/>
+						<xs:element name="SearchFilter" type="tt:EventFilter"/>
+						<xs:element name="IncludeStartState" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>Setting IncludeStartState to true means that the server should return virtual events representing the start state for any recording included in the scope. Start state events are limited to the topics defined in the SearchFilter that have the IsProperty flag set to true.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MaxMatches" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="KeepAliveTime" type="xs:duration">
+							<xs:annotation>
+								<xs:documentation>The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="FindEventsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken">
+							<xs:annotation>
+								<xs:documentation>A unique reference to the search session created by this request.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetEventSearchResults">
+				<xs:annotation>
+					<xs:documentation>Gets results from a particular search session.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken">
+							<xs:annotation>
+								<xs:documentation>The search session to get results from.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MinResults" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The minimum number of results to return in one response.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MaxResults" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The maximum number of results to return in one response.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="WaitTime" type="xs:duration" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetEventSearchResultsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ResultList" type="tt:FindEventResultList"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="FindPTZPosition">
+				<xs:annotation>
+					<xs:documentation>Starts a search session and specifies the search parameters.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StartPoint" type="xs:dateTime">
+							<xs:annotation>
+								<xs:documentation>The point of time where the search will start.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="EndPoint" type="xs:dateTime" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Scope" type="tt:SearchScope"/>
+						<xs:element name="SearchFilter" type="tt:PTZPositionFilter"/>
+						<xs:element name="MaxMatches" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="KeepAliveTime" type="xs:duration">
+							<xs:annotation>
+								<xs:documentation>The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="FindPTZPositionResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken">
+							<xs:annotation>
+								<xs:documentation>A unique reference to the search session created by this request.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPTZPositionSearchResults">
+				<xs:annotation>
+					<xs:documentation>Gets results from a particular search session.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken">
+							<xs:annotation>
+								<xs:documentation>The search session to get results from.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MinResults" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The minimum number of results to return in one response.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MaxResults" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The maximum number of results to return in one response.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="WaitTime" type="xs:duration" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetPTZPositionSearchResultsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ResultList" type="tt:FindPTZPositionResultList"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="FindMetadata">
+				<xs:annotation>
+					<xs:documentation>Starts a search session and specifies the search parameters.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="StartPoint" type="xs:dateTime">
+							<xs:annotation>
+								<xs:documentation>The point of time where the search will start.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="EndPoint" type="xs:dateTime" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Scope" type="tt:SearchScope"/>
+						<xs:element name="MetadataFilter" type="tt:MetadataFilter"/>
+						<xs:element name="MaxMatches" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="KeepAliveTime" type="xs:duration">
+							<xs:annotation>
+								<xs:documentation>The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="FindMetadataResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken">
+							<xs:annotation>
+								<xs:documentation>A unique reference to the search session created by this request.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetMetadataSearchResults">
+				<xs:annotation>
+					<xs:documentation>Gets results from a particular search session.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken">
+							<xs:annotation>
+								<xs:documentation>The search session to get results from.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MinResults" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The minimum number of results to return in one response.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="MaxResults" type="xs:int" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The maximum number of results to return in one response.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="WaitTime" type="xs:duration" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetMetadataSearchResultsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ResultList" type="tt:FindMetadataResultList"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetSearchState">
+				<xs:annotation>
+					<xs:documentation>Returns the state of an ongoing search session.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken">
+							<xs:annotation>
+								<xs:documentation>The search session to get the state from.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSearchStateResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="State" type="tt:SearchState"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="EndSearch">
+				<xs:annotation>
+					<xs:documentation>Ends an ongoing search session, freeing any resources.</xs:documentation>
+				</xs:annotation>
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SearchToken" type="tt:JobToken">
+							<xs:annotation>
+								<xs:documentation>The search session to end.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="EndSearchResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Endpoint" type="xs:dateTime">
+							<xs:annotation>
+								<xs:documentation>The point of time the search had reached when it was ended. It is equal to the EndPoint specified in Find-operation if the search was completed.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<!--===============================-->
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tse:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tse:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="FindEventsRequest">
+		<wsdl:part name="parameters" element="tse:FindEvents"/>
+	</wsdl:message>
+	<wsdl:message name="FindEventsResponse">
+		<wsdl:part name="parameters" element="tse:FindEventsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetEventSearchResultsRequest">
+		<wsdl:part name="parameters" element="tse:GetEventSearchResults"/>
+	</wsdl:message>
+	<wsdl:message name="GetEventSearchResultsResponse">
+		<wsdl:part name="parameters" element="tse:GetEventSearchResultsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSearchStateRequest">
+		<wsdl:part name="parameters" element="tse:GetSearchState"/>
+	</wsdl:message>
+	<wsdl:message name="GetSearchStateResponse">
+		<wsdl:part name="parameters" element="tse:GetSearchStateResponse"/>
+	</wsdl:message>
+	<wsdl:message name="EndSearchRequest">
+		<wsdl:part name="parameters" element="tse:EndSearch"/>
+	</wsdl:message>
+	<wsdl:message name="EndSearchResponse">
+		<wsdl:part name="parameters" element="tse:EndSearchResponse"/>
+	</wsdl:message>
+	<wsdl:message name="FindPTZPositionRequest">
+		<wsdl:part name="parameters" element="tse:FindPTZPosition"/>
+	</wsdl:message>
+	<wsdl:message name="FindPTZPositionResponse">
+		<wsdl:part name="parameters" element="tse:FindPTZPositionResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetPTZPositionSearchResultsRequest">
+		<wsdl:part name="parameters" element="tse:GetPTZPositionSearchResults"/>
+	</wsdl:message>
+	<wsdl:message name="GetPTZPositionSearchResultsResponse">
+		<wsdl:part name="parameters" element="tse:GetPTZPositionSearchResultsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingSummaryRequest">
+		<wsdl:part name="parameters" element="tse:GetRecordingSummary"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingSummaryResponse">
+		<wsdl:part name="parameters" element="tse:GetRecordingSummaryResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingInformationRequest">
+		<wsdl:part name="parameters" element="tse:GetRecordingInformation"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingInformationResponse">
+		<wsdl:part name="parameters" element="tse:GetRecordingInformationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetMediaAttributesRequest">
+		<wsdl:part name="parameters" element="tse:GetMediaAttributes"/>
+	</wsdl:message>
+	<wsdl:message name="GetMediaAttributesResponse">
+		<wsdl:part name="parameters" element="tse:GetMediaAttributesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="FindRecordingsRequest">
+		<wsdl:part name="parameters" element="tse:FindRecordings"/>
+	</wsdl:message>
+	<wsdl:message name="FindRecordingsResponse">
+		<wsdl:part name="parameters" element="tse:FindRecordingsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingSearchResultsRequest">
+		<wsdl:part name="parameters" element="tse:GetRecordingSearchResults"/>
+	</wsdl:message>
+	<wsdl:message name="GetRecordingSearchResultsResponse">
+		<wsdl:part name="parameters" element="tse:GetRecordingSearchResultsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="FindMetadataRequest">
+		<wsdl:part name="parameters" element="tse:FindMetadata"/>
+	</wsdl:message>
+	<wsdl:message name="FindMetadataResponse">
+		<wsdl:part name="parameters" element="tse:FindMetadataResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetMetadataSearchResultsRequest">
+		<wsdl:part name="parameters" element="tse:GetMetadataSearchResults"/>
+	</wsdl:message>
+	<wsdl:message name="GetMetadataSearchResultsResponse">
+		<wsdl:part name="parameters" element="tse:GetMetadataSearchResultsResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="SearchPort">
+		<!--===============================-->
+		<!--===============================-->
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the search service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="tse:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="tse:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetRecordingSummary">
+			<wsdl:documentation>GetRecordingSummary is used to get a summary description of all recorded data. This
+				operation is mandatory to support for a device implementing the recording search service.</wsdl:documentation>
+			<wsdl:input message="tse:GetRecordingSummaryRequest"/>
+			<wsdl:output message="tse:GetRecordingSummaryResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetRecordingInformation">
+			<wsdl:documentation>Returns information about a single Recording specified by a RecordingToken. This operation
+				is mandatory to support for a device implementing the recording search service.</wsdl:documentation>
+			<wsdl:input message="tse:GetRecordingInformationRequest"/>
+			<wsdl:output message="tse:GetRecordingInformationResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetMediaAttributes">
+			<wsdl:documentation>Returns a set of media attributes for all tracks of the specified recordings at a specified point
+				in time. Clients using this operation shall be able to use it as a non blocking operation. A
+				device shall set the starttime and endtime of the MediaAttributes structure to equal values if
+				calculating this range would causes this operation to block. See MediaAttributes structure for
+				more information. This operation is mandatory to support for a device implementing the
+				recording search service.</wsdl:documentation>
+			<wsdl:input message="tse:GetMediaAttributesRequest"/>
+			<wsdl:output message="tse:GetMediaAttributesResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="FindRecordings">
+			<wsdl:documentation>FindRecordings starts a search session, looking for recordings that matches the scope (See
+				20.2.4) defined in the request. Results from the search are acquired using the
+				GetRecordingSearchResults request, specifying the search token returned from this request.
+				The device shall continue searching until one of the following occurs:<ul>
+					<li>The entire time range from StartPoint to EndPoint has been searched through.</li>
+					<li>The total number of matches has been found, defined by the MaxMatches parameter.</li>
+					<li>The session has been ended by a client EndSession request.</li>
+					<li>The session has been ended because KeepAliveTime since the last request related to
+				this session has expired.</li>
+				</ul>
+				The order of the results is undefined, to allow the device to return results in any order they
+				are found. This operation is mandatory to support for a device implementing the recording
+				search service.</wsdl:documentation>
+			<wsdl:input message="tse:FindRecordingsRequest"/>
+			<wsdl:output message="tse:FindRecordingsResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetRecordingSearchResults">
+			<wsdl:documentation>GetRecordingSearchResults acquires the results from a recording search session previously
+				initiated by a FindRecordings operation. The response shall not include results already
+				returned in previous requests for the same session. If MaxResults is specified, the response
+				shall not contain more than MaxResults results. The number of results relates to the number of recordings. 
+				For viewing individual recorded data for a signal track use the FindEvents method.<br/>
+				GetRecordingSearchResults shall block until:<ul>
+					<li>
+				MaxResults results are available for the response if MaxResults is specified.</li>
+					<li>MinResults results are available for the response if MinResults is specified.</li>
+					<li>WaitTime has expired.</li>
+					<li>Search is completed or stopped.</li>
+				</ul>
+				This operation is mandatory to support for a device implementing the recording search service.</wsdl:documentation>
+			<wsdl:input message="tse:GetRecordingSearchResultsRequest"/>
+			<wsdl:output message="tse:GetRecordingSearchResultsResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="FindEvents">
+			<wsdl:documentation>FindEvents starts a search session, looking for recording events (in the scope that 
+				matches the search filter defined in the request. Results from the search are
+				acquired using the GetEventSearchResults request, specifying the search token returned from
+				this request.<br/>
+				The device shall continue searching until one of the following occurs:<ul>
+					<li>
+				The entire time range from StartPoint to EndPoint has been searched through.</li>
+					<li>The total number of matches has been found, defined by the MaxMatches parameter.</li>
+					<li>The session has been ended by a client EndSession request.</li>
+					<li>The session has been ended because KeepAliveTime since the last request related to
+				this session has expired.</li>
+				</ul>
+				Results shall be ordered by time, ascending in case of forward search, or descending in case
+				of backward search. This operation is mandatory to support for a device implementing the
+				recording search service.</wsdl:documentation>
+			<wsdl:input message="tse:FindEventsRequest"/>
+			<wsdl:output message="tse:FindEventsResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetEventSearchResults">
+			<wsdl:documentation>GetEventSearchResults acquires the results from a recording event search session previously
+				initiated by a FindEvents operation. The response shall not include results already returned in
+				previous requests for the same session. If MaxResults is specified, the response shall not
+				contain more than MaxResults results.<br/>
+				GetEventSearchResults shall block until:<ul>
+					<li>
+				MaxResults results are available for the response if MaxResults is specified.</li>
+					<li>MinResults results are available for the response if MinResults is specified.</li>
+					<li>WaitTime has expired.</li>
+					<li>Search is completed or stopped.</li>
+				</ul>
+				This operation is mandatory to support for a device implementing the recording search service.</wsdl:documentation>
+			<wsdl:input message="tse:GetEventSearchResultsRequest"/>
+			<wsdl:output message="tse:GetEventSearchResultsResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="FindPTZPosition">
+			<wsdl:documentation>FindPTZPosition starts a search session, looking for ptz positions in the scope (See 20.2.4)
+				that matches the search filter defined in the request. Results from the search are acquired
+				using the GetPTZPositionSearchResults request, specifying the search token returned from
+				this request.<br/>
+				The device shall continue searching until one of the following occurs:<ul>
+					<li>
+				The entire time range from StartPoint to EndPoint has been searched through.</li>
+					<li>The total number of matches has been found, defined by the MaxMatches parameter.</li>
+					<li>The session has been ended by a client EndSession request.</li>
+					<li>The session has been ended because KeepAliveTime since the last request related to
+				this session has expired.</li>
+				</ul>
+				This operation is mandatory to support whenever CanContainPTZ is true for any metadata
+				track in any recording on the device.</wsdl:documentation>
+			<wsdl:input message="tse:FindPTZPositionRequest"/>
+			<wsdl:output message="tse:FindPTZPositionResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetPTZPositionSearchResults">
+			<wsdl:documentation>GetPTZPositionSearchResults acquires the results from a ptz position search session
+				previously initiated by a FindPTZPosition operation. The response shall not include results
+				already returned in previous requests for the same session. If MaxResults is specified, the
+				response shall not contain more than MaxResults results.<br/>
+				GetPTZPositionSearchResults shall block until:<ul>
+					<li>
+				MaxResults results are available for the response if MaxResults is specified.</li>
+					<li>MinResults results are available for the response if MinResults is specified.</li>
+					<li>WaitTime has expired.</li>
+					<li>Search is completed or stopped.</li>
+				</ul>
+				This operation is mandatory to support whenever CanContainPTZ is true for any metadata
+				track in any recording on the device.</wsdl:documentation>
+			<wsdl:input message="tse:GetPTZPositionSearchResultsRequest"/>
+			<wsdl:output message="tse:GetPTZPositionSearchResultsResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetSearchState">
+			<wsdl:documentation>GetSearchState returns the current state of the specified search session. This command is deprecated .</wsdl:documentation>
+			<wsdl:input message="tse:GetSearchStateRequest"/>
+			<wsdl:output message="tse:GetSearchStateResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="EndSearch">
+			<wsdl:documentation>EndSearch stops and ongoing search session, causing any blocking result request to return
+				and the SearchToken to become invalid. If the search was interrupted before completion, the
+				point in time that the search had reached shall be returned. If the search had not yet begun,
+				the StartPoint shall be returned. If the search was completed the original EndPoint supplied
+				by the Find operation shall be returned. When issuing EndSearch on a FindRecordings request the 
+				EndPoint is undefined and shall not be used since the FindRecordings request doesn't have 
+				StartPoint/EndPoint. This operation is mandatory to support for a device implementing the 
+				recording search service. 
+			</wsdl:documentation>
+			<wsdl:input message="tse:EndSearchRequest"/>
+			<wsdl:output message="tse:EndSearchResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="FindMetadata">
+			<wsdl:documentation>FindMetadata starts a search session, looking for metadata in the scope (See 20.2.4) that
+				matches the search filter defined in the request. Results from the search are acquired using
+				the GetMetadataSearchResults request, specifying the search token returned from this
+				request.<br/>
+				The device shall continue searching until one of the following occurs:<ul>
+					<li>
+				The entire time range from StartPoint to EndPoint has been searched through.</li>
+					<li>The total number of matches has been found, defined by the MaxMatches parameter.</li>
+					<li>The session has been ended by a client EndSession request.</li>
+					<li>The session has been ended because KeepAliveTime since the last request related to
+				this session has expired.</li>
+				</ul>
+				This operation is mandatory to support if the MetaDataSearch capability is set to true in the
+				SearchCapabilities structure return by the GetCapabilities command in the Device service.</wsdl:documentation>
+			<wsdl:input message="tse:FindMetadataRequest"/>
+			<wsdl:output message="tse:FindMetadataResponse"/>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetMetadataSearchResults">
+			<wsdl:documentation>GetMetadataSearchResults acquires the results from a recording search session previously
+				initiated by a FindMetadata operation. The response shall not include results already returned
+				in previous requests for the same session. If MaxResults is specified, the response shall not
+				contain more than MaxResults results.<br/>
+				GetMetadataSearchResults shall block until:<ul>
+					<li>
+				MaxResults results are available for the response if MaxResults is specified.</li>
+					<li>MinResults results are available for the response if MinResults is specified.</li>
+					<li>WaitTime has expired.</li>
+					<li>Search is completed or stopped.</li>
+				</ul>
+				This operation is mandatory to support if the MetaDataSearch capability is set to true in the
+				SearchCapabilities structure return by the GetCapabilities command in the Device service.</wsdl:documentation>
+			<wsdl:input message="tse:GetMetadataSearchResultsRequest"/>
+			<wsdl:output message="tse:GetMetadataSearchResultsResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="SearchBinding" type="tse:SearchPort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<!--===============================-->
+		<!--===============================-->
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetRecordingSummary">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetRecordingInformation">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetMediaAttributes">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="FindRecordings">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/FindRecordings"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetRecordingSearchResults">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="FindEvents">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/FindEvents"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetEventSearchResults">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="FindPTZPosition">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/FindPTZPosition"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetPTZPositionSearchResults">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetSearchState">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/GetSearchState"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="EndSearch">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/EndSearch"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="FindMetadata">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/FindMetadata"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<wsdl:operation name="GetMetadataSearchResults">
+			<soap:operation soapAction="http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<!--===============================-->
+		<!--===============================-->
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver20/analytics/wsdl/analytics.wsdl b/gsoap/bin/www.onvif.org/onvif/ver20/analytics/wsdl/analytics.wsdl
new file mode 100644
index 0000000..fc8b994
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver20/analytics/wsdl/analytics.wsdl
@@ -0,0 +1,692 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xsl" href="../../../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+	Copyright (c) 2008-2018 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+	
+	Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+	
+	THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+	IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tan="http://www.onvif.org/ver20/analytics/wsdl" targetNamespace="http://www.onvif.org/ver20/analytics/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver20/analytics/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" elementFormDefault="qualified" version="18.06">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../../../ver10/schema/onvif.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tan:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the analytics service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>		   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="RuleSupport" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication that the device supports the rules interface and the rules syntax.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="AnalyticsModuleSupport" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication that the device supports the scene analytics module interface.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="CellBasedSceneDescriptionSupported" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication that the device produces the cell based scene description</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="RuleOptionsSupported" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication that the device supports the GetRuleOptions operation on the rules interface</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="AnalyticsModuleOptionsSupported" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indication that the device supports the GetAnalyticsModuleOptions operation on the analytics interface</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="tan:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="GetSupportedRules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+									References an existing Video Analytics configuration. The list of available tokens can be obtained
+									via the Media service GetVideoAnalyticsConfigurations method.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSupportedRulesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SupportedRules" type="tt:SupportedRules"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreateRules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing VideoAnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Rule" type="tt:Config" minOccurs="1" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateRulesResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeleteRules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing VideoAnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="RuleName" type="xs:string" minOccurs="1" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>References the specific rule to be deleted (e.g. "MyLineDetector"). </xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteRulesResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="ModifyRules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing VideoAnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Rule" type="tt:Config" minOccurs="1" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ModifyRulesResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetRules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing VideoAnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRulesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Rule" type="tt:Config" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetRuleOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RuleType" type="xs:QName" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Reference to an SupportedRule Type returned from GetSupportedRules.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing analytics configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetRuleOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="RuleOptions" type="tan:ConfigOptions" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>A device shall provide respective ConfigOptions.RuleType for each RuleOption if the request does not specify RuleType.</xs:documentation>
+							</xs:annotation>							
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="ConfigOptions">
+				<xs:sequence>
+					<xs:any namespace="##any">
+						<xs:annotation>
+							<xs:documentation>
+								XML tree containing the element value as defined in the Type attribute.
+							</xs:documentation>
+						</xs:annotation>
+					</xs:any>
+				</xs:sequence>
+				<xs:attribute name="RuleType" type="xs:QName">
+					<xs:annotation>
+						<xs:documentation>
+							The RuleType the ConfigOptions applies to if the Name attribute is ambiguous.
+						</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Name" type="xs:string" use="required">
+					<xs:annotation>
+						<xs:documentation>
+							The Name of the SimpleItemDescription/ElementItemDescription
+							the ConfigOptions applies to.
+						</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Type" type="xs:QName" use="required">
+					<xs:annotation>
+						<xs:documentation>
+							Type of the Rule Options represented by a unique QName. 
+							The Type defines the element contained in this structure.
+						</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			
+			<!--===============================-->
+			<xs:element name="GetSupportedAnalyticsModules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing VideoAnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetSupportedAnalyticsModulesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SupportedAnalyticsModules" type="tt:SupportedAnalyticsModules"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreateAnalyticsModules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing VideoAnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="AnalyticsModule" type="tt:Config" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateAnalyticsModulesResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeleteAnalyticsModules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing Video Analytics configuration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="AnalyticsModuleName" type="xs:string" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Name of the AnalyticsModule to be deleted.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteAnalyticsModulesResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="ModifyAnalyticsModules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing VideoAnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="AnalyticsModule" type="tt:Config" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ModifyAnalyticsModulesResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAnalyticsModules">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing VideoAnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsModulesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AnalyticsModule" type="tt:Config" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetAnalyticsModuleOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Type" type="xs:QName" maxOccurs="1">
+							<xs:annotation>
+								<xs:documentation>Reference to an SupportedAnalyticsModule Type returned from GetSupportedAnalyticsModules.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Reference to an existing AnalyticsConfiguration.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetAnalyticsModuleOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="tan:AnalyticsModuleConfigOptions" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:complexType name="AnalyticsModuleConfigOptions">
+				<xs:sequence>
+					<xs:any namespace="##any">
+						<xs:annotation>
+							<xs:documentation>
+								XML tree containing the element value as defined in the Type attribute.
+							</xs:documentation>
+						</xs:annotation>
+					</xs:any>
+				</xs:sequence>
+				<xs:attribute name="Type" type="xs:QName" use="required">
+					<xs:annotation>
+						<xs:documentation>
+							Type of the Analytics Module Options represented by a unique QName. 
+							The Type defines the element contained in this structure.
+						</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Name" type="xs:string">
+					<xs:annotation>
+						<xs:documentation>
+							The Name of the SimpleItemDescription/ElementItemDescription the AnalyticsModuleConfigOptions applies to.
+							This can be omitted when there is only one parameter the options could apply, including specifically typed elements such as RadiometryParameterOptions to RadiometryParameters.
+							Otherwise, the Name shall be provided.
+						</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tan:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tan:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSupportedRulesRequest">
+		<wsdl:part name="parameters" element="tan:GetSupportedRules"/>
+	</wsdl:message>
+	<wsdl:message name="GetSupportedRulesResponse">
+		<wsdl:part name="parameters" element="tan:GetSupportedRulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateRulesRequest">
+		<wsdl:part name="parameters" element="tan:CreateRules"/>
+	</wsdl:message>
+	<wsdl:message name="CreateRulesResponse">
+		<wsdl:part name="parameters" element="tan:CreateRulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteRulesRequest">
+		<wsdl:part name="parameters" element="tan:DeleteRules"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteRulesResponse">
+		<wsdl:part name="parameters" element="tan:DeleteRulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRulesRequest">
+		<wsdl:part name="parameters" element="tan:GetRules"/>
+	</wsdl:message>
+	<wsdl:message name="GetRulesResponse">
+		<wsdl:part name="parameters" element="tan:GetRulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetRuleOptionsRequest">
+		<wsdl:part name="parameters" element="tan:GetRuleOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetRuleOptionsResponse">
+		<wsdl:part name="parameters" element="tan:GetRuleOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSupportedAnalyticsModulesResponse">
+		<wsdl:part name="parameters" element="tan:GetSupportedAnalyticsModulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetSupportedAnalyticsModulesRequest">
+		<wsdl:part name="parameters" element="tan:GetSupportedAnalyticsModules"/>
+	</wsdl:message>
+	<wsdl:message name="CreateAnalyticsModulesRequest">
+		<wsdl:part name="parameters" element="tan:CreateAnalyticsModules"/>
+	</wsdl:message>
+	<wsdl:message name="CreateAnalyticsModulesResponse">
+		<wsdl:part name="parameters" element="tan:CreateAnalyticsModulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteAnalyticsModulesRequest">
+		<wsdl:part name="parameters" element="tan:DeleteAnalyticsModules"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteAnalyticsModulesResponse">
+		<wsdl:part name="parameters" element="tan:DeleteAnalyticsModulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsModulesRequest">
+		<wsdl:part name="parameters" element="tan:GetAnalyticsModules"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsModulesResponse">
+		<wsdl:part name="parameters" element="tan:GetAnalyticsModulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyRulesRequest">
+		<wsdl:part name="parameters" element="tan:ModifyRules"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyRulesResponse">
+		<wsdl:part name="parameters" element="tan:ModifyRulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyAnalyticsModulesRequest">
+		<wsdl:part name="parameters" element="tan:ModifyAnalyticsModules"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyAnalyticsModulesResponse">
+		<wsdl:part name="parameters" element="tan:ModifyAnalyticsModulesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsModuleOptionsRequest">
+		<wsdl:part name="parameters" element="tan:GetAnalyticsModuleOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetAnalyticsModuleOptionsResponse">
+		<wsdl:part name="parameters" element="tan:GetAnalyticsModuleOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="RuleEnginePort">
+		<wsdl:operation name="GetSupportedRules">
+			<wsdl:documentation>
+				List all rules that are supported by the given VideoAnalyticsConfiguration.
+				The result of this method may depend on the overall Video analytics configuration of the device,
+				which is available via the current set of profiles. 
+			</wsdl:documentation>
+			<wsdl:input message="tan:GetSupportedRulesRequest"/>
+			<wsdl:output message="tan:GetSupportedRulesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateRules">
+			<wsdl:documentation>
+				Add one or more rules to an existing VideoAnalyticsConfiguration.
+				The available supported types can be retrieved via <a href="#op.GetSupportedRules">GetSupportedRules</a>, 
+				where the Name of the supported rule correspond to the type of an rule instance.<br/>
+				Pass unique module names which can be later used as reference. 
+				The Parameters of the rules must match those of the corresponding description.
+				<br/>
+				Although this method is mandatory a device implementation must not support adding rules. 
+				Instead it can provide a fixed set of predefined configurations via the media service function 
+				<a href="media.wsdl#op.GetCompatibleVideoAnalyticsConfigurations">GetCompatibleVideoAnalyticsConfigurations</a>.
+			</wsdl:documentation>
+			<wsdl:input message="tan:CreateRulesRequest"/>
+			<wsdl:output message="tan:CreateRulesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteRules">
+			<wsdl:documentation>
+				Remove one or more rules from a VideoAnalyticsConfiguration.
+			</wsdl:documentation>
+			<wsdl:input message="tan:DeleteRulesRequest"/>
+			<wsdl:output message="tan:DeleteRulesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRules">
+			<wsdl:documentation>
+				List the currently assigned set of rules of a VideoAnalyticsConfiguration.
+			</wsdl:documentation>
+			<wsdl:input message="tan:GetRulesRequest"/>
+			<wsdl:output message="tan:GetRulesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetRuleOptions">
+			<wsdl:documentation>
+				Return the options for the supported rules that specify an Option attribute.
+			</wsdl:documentation>
+			<wsdl:input message="tan:GetRuleOptionsRequest"/>
+			<wsdl:output message="tan:GetRuleOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyRules">
+			<wsdl:documentation>
+				Modify one or more rules of a VideoAnalyticsConfiguration. The rules are referenced by their names.
+			</wsdl:documentation>
+			<wsdl:input message="tan:ModifyRulesRequest"/>
+			<wsdl:output message="tan:ModifyRulesResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:portType name="AnalyticsEnginePort">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the analytics service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="tan:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="tan:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetSupportedAnalyticsModules">
+			<wsdl:documentation>
+				List all analytics modules that are supported by the given VideoAnalyticsConfiguration.
+				The result of this method may depend on the overall Video analytics configuration of the device,
+				which is available via the current set of profiles. 
+			</wsdl:documentation>
+			<wsdl:input message="tan:GetSupportedAnalyticsModulesRequest"/>
+			<wsdl:output message="tan:GetSupportedAnalyticsModulesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsModuleOptions">
+			<wsdl:documentation>
+				Return the options for the supported analytics modules that specify an Option attribute.
+			</wsdl:documentation>
+			<wsdl:input message="tan:GetAnalyticsModuleOptionsRequest"/>
+			<wsdl:output message="tan:GetAnalyticsModuleOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateAnalyticsModules">
+			<wsdl:documentation>
+				Add one or more analytics modules to an existing VideoAnalyticsConfiguration.
+				The available supported types can be retrieved via <a href="#op.GetSupportedAnalyticsModules">GetSupportedAnalyticsModules</a>, 
+				where the Name of the supported AnalyticsModules correspond to the type of an AnalyticsModule instance.<br/>
+				Pass unique module names which can be later used as reference. The Parameters of the analytics module must match those of the corresponding AnalyticsModuleDescription.
+				<br/>
+				Although this method is mandatory a device implementation must not support adding modules. 
+				Instead it can provide a fixed set of predefined configurations via the media service function 
+				<a href="media.wsdl#op.GetCompatibleVideoAnalyticsConfigurations">GetCompatibleVideoAnalyticsConfigurations</a>.
+				<br/>
+				The device shall ensure that a corresponding analytics engine starts operation when a client
+				subscribes directly or indirectly for events produced by the analytics or rule engine or when a
+				client requests the corresponding scene description stream.
+				An analytics module must be attached to a Video source using the media profiles before it can be used.
+				In case differing analytics configurations are attached to the same profile it is undefined which
+				of the analytics module configuration becomes active if no stream is activated or multiple streams
+				with different profiles are activated at the same time.
+			</wsdl:documentation>
+			<wsdl:input message="tan:CreateAnalyticsModulesRequest"/>
+			<wsdl:output message="tan:CreateAnalyticsModulesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteAnalyticsModules">
+			<wsdl:documentation>
+				Remove one or more analytics modules from a VideoAnalyticsConfiguration referenced by their names.<br/>
+			</wsdl:documentation>
+			<wsdl:input message="tan:DeleteAnalyticsModulesRequest"/>
+			<wsdl:output message="tan:DeleteAnalyticsModulesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsModules">
+			<wsdl:documentation>
+				List the currently assigned set of analytics modules of a VideoAnalyticsConfiguration.
+			</wsdl:documentation>
+			<wsdl:input message="tan:GetAnalyticsModulesRequest"/>
+			<wsdl:output message="tan:GetAnalyticsModulesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyAnalyticsModules">
+			<wsdl:documentation>
+				Modify the settings of one or more analytics modules of a VideoAnalyticsConfiguration. The modules are referenced by their names.
+				It is allowed to pass only a subset to be modified.
+			</wsdl:documentation>
+			<wsdl:input message="tan:ModifyAnalyticsModulesRequest"/>
+			<wsdl:output message="tan:ModifyAnalyticsModulesResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="RuleEngineBinding" type="tan:RuleEnginePort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetSupportedRules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateRules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/CreateRules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteRules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/DeleteRules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/GetRules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetRuleOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/GetRuleOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyRules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/ModifyRules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+	<wsdl:binding name="AnalyticsEngineBinding" type="tan:AnalyticsEnginePort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetSupportedAnalyticsModules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateAnalyticsModules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteAnalyticsModules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsModules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetAnalyticsModuleOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModuleOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyAnalyticsModules">
+			<soap:operation soapAction="http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver20/imaging/wsdl/imaging.wsdl b/gsoap/bin/www.onvif.org/onvif/ver20/imaging/wsdl/imaging.wsdl
new file mode 100644
index 0000000..a7625ac
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver20/imaging/wsdl/imaging.wsdl
@@ -0,0 +1,597 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xsl" href="../../../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2014 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:timg="http://www.onvif.org/ver20/imaging/wsdl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tt="http://www.onvif.org/ver10/schema" name="ImagingService" targetNamespace="http://www.onvif.org/ver20/imaging/wsdl">
+	<wsdl:types>
+		<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:timg="http://www.onvif.org/ver20/imaging/wsdl" targetNamespace="http://www.onvif.org/ver20/imaging/wsdl" elementFormDefault="qualified" version="16.09">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../../../ver10/schema/onvif.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="timg:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the imaging service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="ImageStabilization" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates whether or not Image Stabilization feature is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Presets" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates whether or not Imaging Presets feature is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="timg:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="GetImagingSettings">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+							Reference token to the VideoSource for which the ImagingSettings.
+						</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetImagingSettingsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ImagingSettings" type="tt:ImagingSettings20">
+							<xs:annotation>
+								<xs:documentation>
+								ImagingSettings for the VideoSource that was requested.
+							</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetImagingSettings">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken"/>
+						<xs:element name="ImagingSettings" type="tt:ImagingSettings20"/>
+						<xs:element name="ForcePersistence" type="xs:boolean" maxOccurs="1" minOccurs="0"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetImagingSettingsResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+							Reference token to the VideoSource for which the imaging parameter options are requested.
+							</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ImagingOptions" type="tt:ImagingOptions20">
+							<xs:annotation>
+								<xs:documentation>
+							Valid ranges for the imaging parameters that are categorized as device specific.
+							</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="Move">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+							Reference to the VideoSource for the requested move (focus) operation.
+							</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Focus" type="tt:FocusMove">
+							<xs:annotation>
+								<xs:documentation>
+							Content of the requested move (focus) operation.
+							</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="MoveResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetMoveOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+							Reference token to the VideoSource for the requested move options.
+							</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetMoveOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="MoveOptions" type="tt:MoveOptions20">
+							<xs:annotation>
+								<xs:documentation>
+							Valid ranges for the focus lens move options.
+							</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="Stop">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+								Reference token to the VideoSource where the focus movement should be stopped.
+						</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="StopResponse">
+				<xs:complexType>
+					<xs:sequence>
+          </xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetStatus">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+						Reference token to the VideoSource where the imaging status should be requested.
+						</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetStatusResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Status" type="tt:ImagingStatus20">
+							<xs:annotation>
+								<xs:documentation>
+						Requested imaging status.
+						</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:simpleType name="ImagingPresetType">
+				<xs:annotation>
+					<xs:documentation>Describes standard Imaging Preset types, used to facilitate Multi-language support and client display.
+					"Custom" Type shall be used when Imaging Preset Name does not match any of the types included in the standard classification.
+					</xs:documentation>
+				</xs:annotation>
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="Custom"/>
+					<xs:enumeration value="ClearWeather"/>
+					<xs:enumeration value="Cloudy"/>
+					<xs:enumeration value="Fog"/>
+					<xs:enumeration value="Rain"/>
+					<xs:enumeration value="Snowing"/>
+					<xs:enumeration value="Snow"/>
+					<xs:enumeration value="WDR"/>
+					<xs:enumeration value="Shade"/>
+					<xs:enumeration value="Night"/>
+					<xs:enumeration value="Indoor"/>
+					<xs:enumeration value="Fluorescent"/>
+					<xs:enumeration value="Incandescent"/>
+					<xs:enumeration value="Sodium(Natrium)"/>
+					<xs:enumeration value="Sunrise(Horizon)"/>
+					<xs:enumeration value="Sunset(Rear)"/>
+					<xs:enumeration value="ExtremeHot"/>
+					<xs:enumeration value="ExtremeCold"/>
+					<xs:enumeration value="Underwater"/>
+					<xs:enumeration value="CloseUp"/>
+					<xs:enumeration value="Motion"/>
+					<xs:enumeration value="FlickerFree50"/>
+					<xs:enumeration value="FlickerFree60"/>
+				</xs:restriction>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="ImagingPreset">
+				<xs:annotation>
+					<xs:documentation>Type describing the Imaging Preset settings.</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="Name" type="tt:Name">
+						<xs:annotation>
+							<xs:documentation>Human readable name of the Imaging Preset.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+				</xs:sequence>
+				<xs:attribute name="token" type="tt:ReferenceToken" use="required">
+					<xs:annotation>
+						<xs:documentation>Unique identifier of this Imaging Preset.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="type" type="xs:string" use="required">
+					<xs:annotation>
+						<xs:documentation>Indicates Imaging Preset Type. Use timg:ImagingPresetType. 
+						Used for multi-language support and display.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:element name="GetPresets">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+									A reference to the VideoSource where the operation should take place.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetPresetsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Preset" type="timg:ImagingPreset" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation> 
+									List of Imaging Presets which are available for the requested VideoSource.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCurrentPreset">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation> Reference token to the VideoSource where the current Imaging Preset should be requested.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCurrentPresetResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Preset" type="timg:ImagingPreset" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation> Current Imaging Preset in use for the specified Video Source.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetCurrentPreset">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="VideoSourceToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>
+								Reference token to the VideoSource to which the specified Imaging Preset should be applied.
+						</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PresetToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation> Reference token to the Imaging Preset to be applied to the specified Video Source. </xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetCurrentPresetResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="timg:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="timg:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetImagingSettingsRequest">
+		<wsdl:part name="parameters" element="timg:GetImagingSettings"/>
+	</wsdl:message>
+	<wsdl:message name="GetImagingSettingsResponse">
+		<wsdl:part name="parameters" element="timg:GetImagingSettingsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetImagingSettingsRequest">
+		<wsdl:part name="parameters" element="timg:SetImagingSettings"/>
+	</wsdl:message>
+	<wsdl:message name="SetImagingSettingsResponse">
+		<wsdl:part name="parameters" element="timg:SetImagingSettingsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetOptionsRequest">
+		<wsdl:part name="parameters" element="timg:GetOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetOptionsResponse">
+		<wsdl:part name="parameters" element="timg:GetOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="MoveRequest">
+		<wsdl:part name="parameters" element="timg:Move"/>
+	</wsdl:message>
+	<wsdl:message name="MoveResponse">
+		<wsdl:part name="parameters" element="timg:MoveResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetMoveOptionsRequest">
+		<wsdl:part name="parameters" element="timg:GetMoveOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetMoveOptionsResponse">
+		<wsdl:part name="parameters" element="timg:GetMoveOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="StopRequest">
+		<wsdl:part name="parameters" element="timg:Stop"/>
+	</wsdl:message>
+	<wsdl:message name="StopResponse">
+		<wsdl:part name="parameters" element="timg:StopResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetStatusRequest">
+		<wsdl:part name="parameters" element="timg:GetStatus"/>
+	</wsdl:message>
+	<wsdl:message name="GetStatusResponse">
+		<wsdl:part name="parameters" element="timg:GetStatusResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetsRequest">
+		<wsdl:part name="parameters" element="timg:GetPresets"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetsResponse">
+		<wsdl:part name="parameters" element="timg:GetPresetsResponse"/>
+	</wsdl:message>	
+	<wsdl:message name="GetCurrentPresetRequest">
+		<wsdl:part name="parameters" element="timg:GetCurrentPreset"/>
+	</wsdl:message>
+	<wsdl:message name="GetCurrentPresetResponse">
+		<wsdl:part name="parameters" element="timg:GetCurrentPresetResponse"/>
+	</wsdl:message>	
+	<wsdl:message name="SetCurrentPresetRequest">
+		<wsdl:part name="parameters" element="timg:SetCurrentPreset"/>
+	</wsdl:message>
+	<wsdl:message name="SetCurrentPresetResponse">
+		<wsdl:part name="parameters" element="timg:SetCurrentPresetResponse"/>
+	</wsdl:message>		
+	<wsdl:portType name="ImagingPort">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the imaging service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="timg:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="timg:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetImagingSettings">
+			<wsdl:documentation>Get the ImagingConfiguration for the requested VideoSource.</wsdl:documentation>
+			<wsdl:input message="timg:GetImagingSettingsRequest"/>
+			<wsdl:output message="timg:GetImagingSettingsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetImagingSettings">
+			<wsdl:documentation>Set the ImagingConfiguration for the requested VideoSource.</wsdl:documentation>
+			<wsdl:input message="timg:SetImagingSettingsRequest"/>
+			<wsdl:output message="timg:SetImagingSettingsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetOptions">
+			<wsdl:documentation>This operation gets the valid ranges for the imaging parameters that have device specific ranges. 
+			This command is mandatory for all device implementing the imaging service. The command returns all supported parameters and their ranges 
+			such that these can be applied to the SetImagingSettings command.<br/>
+			For read-only parameters which cannot be modified via the SetImagingSettings command only a single option or identical Min and Max values 
+			is provided.</wsdl:documentation>
+			<wsdl:input message="timg:GetOptionsRequest"/>
+			<wsdl:output message="timg:GetOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="Move">
+			<wsdl:documentation>The Move command moves the focus lens in an absolute, a relative or in a continuous manner from its current position. 
+			The speed argument is optional for absolute and relative control, but required for continuous. If no speed argument is used, the default speed is used. 
+			Focus adjustments through this operation will turn off the autofocus. A device with support for remote focus control should support absolute, 
+			relative or continuous control through the Move operation. The supported MoveOpions are signalled via the GetMoveOptions command.
+			At least one focus control capability is required for this operation to be functional. <br/>
+			The move operation contains the following commands:<br/>
+				<b>Absolute</b> – Requires position parameter and optionally takes a speed argument. A unitless type is used by default for focus positioning and speed. Optionally, if supported, the position may be requested in m-1 units. <br/>
+				<b>Relative</b> – Requires distance parameter and optionally takes a speed argument. Negative distance means negative direction. 
+			<b>Continuous</b> – Requires a speed argument. Negative speed argument means negative direction.
+			</wsdl:documentation>
+			<wsdl:input message="timg:MoveRequest"/>
+			<wsdl:output message="timg:MoveResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetMoveOptions">
+			<wsdl:documentation>Imaging move operation options supported for the Video source.</wsdl:documentation>
+			<wsdl:input message="timg:GetMoveOptionsRequest"/>
+			<wsdl:output message="timg:GetMoveOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="Stop">
+			<wsdl:documentation>The Stop command stops all ongoing focus movements of the lense. A device with support for remote focus control as signalled via 
+			the GetMoveOptions supports this command. <br/>The operation will not affect ongoing autofocus operation.</wsdl:documentation>
+			<wsdl:input message="timg:StopRequest"/>
+			<wsdl:output message="timg:StopResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetStatus">
+			<wsdl:documentation>Via this command the current status of the Move operation can be requested. Supported for this command is available if the support for the Move operation is signalled via GetMoveOptions.</wsdl:documentation>
+			<wsdl:input message="timg:GetStatusRequest"/>
+			<wsdl:output message="timg:GetStatusResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresets">
+			<wsdl:documentation>Via this command the list of available Imaging Presets can be requested.</wsdl:documentation>
+			<wsdl:input message="timg:GetPresetsRequest"/>
+			<wsdl:output message="timg:GetPresetsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCurrentPreset">
+			<wsdl:documentation>Via this command the last Imaging Preset applied can be requested. 
+			If the camera configuration does not match any of the existing Imaging Presets, the output of GetCurrentPreset shall be Empty.
+			GetCurrentPreset shall return 0 if Imaging Presets are not supported by the Video Source.</wsdl:documentation>
+			<wsdl:input message="timg:GetCurrentPresetRequest"/>
+			<wsdl:output message="timg:GetCurrentPresetResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetCurrentPreset">
+			<wsdl:documentation>The SetCurrentPreset command shall request a given Imaging Preset to be applied to the specified Video Source.
+			SetCurrentPreset shall only be available for Video Sources with Imaging Presets Capability. 
+			Imaging Presets are defined by the Manufacturer, and offered as a tool to simplify Imaging Settings adjustments for specific scene content.
+			When the new Imaging Preset is applied by SetCurrentPreset, the Device shall adjust the Video Source settings to match those defined by the specified Imaging Preset.</wsdl:documentation>
+			<wsdl:input message="timg:SetCurrentPresetRequest"/>
+			<wsdl:output message="timg:SetCurrentPresetResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="ImagingBinding" type="timg:ImagingPort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetImagingSettings">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetImagingSettings">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/GetOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="Move">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/Move"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="Stop">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/FocusStop"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetStatus">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/GetStatus"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetMoveOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresets">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/GetPresets"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCurrentPreset">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetCurrentPreset">
+			<soap:operation soapAction="http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/onvif/ver20/ptz/wsdl/ptz.wsdl b/gsoap/bin/www.onvif.org/onvif/ver20/ptz/wsdl/ptz.wsdl
new file mode 100644
index 0000000..c66a1ca
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/onvif/ver20/ptz/wsdl/ptz.wsdl
@@ -0,0 +1,1370 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xsl" href="../../../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2008-2014 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tptz="http://www.onvif.org/ver20/ptz/wsdl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" name="PTZService" targetNamespace="http://www.onvif.org/ver20/ptz/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver20/ptz/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:tptz="http://www.onvif.org/ver20/ptz/wsdl" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="17.06">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../../../ver10/schema/onvif.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tptz:Capabilities">
+							<xs:annotation>
+								<xs:documentation>The capabilities for the PTZ service is returned in the Capabilities element.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:complexType name="Capabilities">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>   <!-- first Vendor then ONVIF -->
+				</xs:sequence>
+				<xs:attribute name="EFlip" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates whether or not EFlip is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Reverse" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates whether or not reversing of PT control direction is supported.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="GetCompatibleConfigurations" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates support for the GetCompatibleConfigurations command.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MoveStatus" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates that the PTZStatus includes MoveStatus information.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="StatusPosition" type="xs:boolean">
+					<xs:annotation>
+						<xs:documentation>Indicates that the PTZStatus includes Position information.</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<xs:element name="Capabilities" type="tptz:Capabilities"/>
+			<!--===============================-->
+			<xs:element name="GetNodes">
+				<xs:complexType/>
+			</xs:element>
+			<xs:element name="GetNodesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PTZNode" type="tt:PTZNode" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>A list of the existing PTZ Nodes on the device.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetNode">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="NodeToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested PTZNode.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetNodeResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PTZNode" type="tt:PTZNode">
+							<xs:annotation>
+								<xs:documentation>A requested PTZNode.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetConfigurations">
+				<xs:complexType/>
+			</xs:element>
+			<xs:element name="GetConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PTZConfiguration" type="tt:PTZConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>A list of all existing PTZConfigurations on the device.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PTZConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of the requested PTZConfiguration.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PTZConfiguration" type="tt:PTZConfiguration">
+							<xs:annotation>
+								<xs:documentation>A requested PTZConfiguration.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetConfiguration">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PTZConfiguration" type="tt:PTZConfiguration">
+							<xs:annotation>
+								<xs:documentation>
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="ForcePersistence" type="xs:boolean">
+							<xs:annotation>
+								<xs:documentation>Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetConfigurationResponse">
+				<xs:complexType>
+					<xs:sequence minOccurs="0"/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetConfigurationOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ConfigurationToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Token of an existing configuration that the options are intended for.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetConfigurationOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PTZConfigurationOptions" type="tt:PTZConfigurationOptions">
+							<xs:annotation>
+								<xs:documentation>The requested PTZ configuration options.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SendAuxiliaryCommand">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile where the operation should take place.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="AuxiliaryData" type="tt:AuxiliaryData">
+							<xs:annotation>
+								<xs:documentation>The Auxiliary request data.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SendAuxiliaryCommandResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="AuxiliaryResponse" type="tt:AuxiliaryData">
+							<xs:annotation>
+								<xs:documentation>The response contains the auxiliary response.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPresets">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile where the operation should take place.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetPresetsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Preset" type="tt:PTZPreset" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>A list of presets which are available for the requested MediaProfile.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetPreset">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile where the operation should take place.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PresetName" type="xs:string" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>A requested preset name.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PresetToken" type="tt:ReferenceToken" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>A requested preset token.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetPresetResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PresetToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A token to the Preset which has been set.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemovePreset">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile where the operation should take place.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PresetToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A requested preset token.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemovePresetResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GotoPreset">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile where the operation should take place.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PresetToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A requested preset token.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Speed" type="tt:PTZSpeed" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GotoPresetResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetStatus">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile where the PTZStatus should be requested.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetStatusResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PTZStatus" type="tt:PTZStatus">
+							<xs:annotation>
+								<xs:documentation>The PTZStatus for the requested MediaProfile.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GotoHomePosition">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile where the operation should take place.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Speed" type="tt:PTZSpeed" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GotoHomePositionResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="SetHomePosition">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile where the home position should be set.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="SetHomePositionResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="ContinuousMove">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Velocity" type="tt:PTZSpeed">
+							<xs:annotation>
+								<xs:documentation>A Velocity vector specifying the velocity of pan, tilt and zoom.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Timeout" type="xs:duration" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>An optional Timeout parameter.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ContinuousMoveResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RelativeMove">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Translation" type="tt:PTZVector">
+							<xs:annotation>
+								<xs:documentation>A positional Translation relative to the current position
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Speed" type="tt:PTZSpeed" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>An optional Speed parameter.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RelativeMoveResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="AbsoluteMove">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Position" type="tt:PTZVector">
+							<xs:annotation>
+								<xs:documentation>A Position vector specifying the absolute target position.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Speed" type="tt:PTZSpeed" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>An optional Speed.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="AbsoluteMoveResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GeoMove">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Target" type="tt:GeoLocation">
+							<xs:annotation>
+								<xs:documentation>The geolocation of the target position.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Speed" type="tt:PTZSpeed" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>An optional Speed.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="AreaHeight" type="xs:float" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>An optional indication of the height of the target/area.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="AreaWidth" type="xs:float" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>An optional indication of the width of the target/area.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GeoMoveResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="Stop">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>A reference to the MediaProfile that indicate what should be stopped.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="PanTilt" type="xs:boolean" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="Zoom" type="xs:boolean" minOccurs="0">
+							<xs:annotation>
+								<xs:documentation>Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="StopResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPresetTours">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetPresetToursResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PresetTour" type="tt:PresetTour" minOccurs="0" maxOccurs="unbounded"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPresetTour">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken"/>
+						<xs:element name="PresetTourToken" type="tt:ReferenceToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetPresetTourResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PresetTour" type="tt:PresetTour"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetPresetTourOptions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken"/>
+						<xs:element name="PresetTourToken" type="tt:ReferenceToken" minOccurs="0"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetPresetTourOptionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Options" type="tt:PTZPresetTourOptions"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreatePresetTour">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreatePresetTourResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PresetTourToken" type="tt:ReferenceToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="ModifyPresetTour">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken"/>
+						<xs:element name="PresetTour" type="tt:PresetTour"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ModifyPresetTourResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="OperatePresetTour">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken"/>
+						<xs:element name="PresetTourToken" type="tt:ReferenceToken"/>
+						<xs:element name="Operation" type="tt:PTZPresetTourOperation"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="OperatePresetTourResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="RemovePresetTour">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken"/>
+						<xs:element name="PresetTourToken" type="tt:ReferenceToken"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="RemovePresetTourResponse">
+				<xs:complexType>
+					<xs:sequence/>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetCompatibleConfigurations">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ProfileToken" type="tt:ReferenceToken">
+							<xs:annotation>
+								<xs:documentation>Contains the token of an existing media profile the configurations shall be compatible with.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="GetCompatibleConfigurationsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="PTZConfiguration" type="tt:PTZConfiguration" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>A list of all existing PTZConfigurations on the NVT that is suitable to be added to the addressed media profile.
+								</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tptz:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tptz:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetNodesRequest">
+		<wsdl:part name="parameters" element="tptz:GetNodes"/>
+	</wsdl:message>
+	<wsdl:message name="GetNodesResponse">
+		<wsdl:part name="parameters" element="tptz:GetNodesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetNodeRequest">
+		<wsdl:part name="parameters" element="tptz:GetNode"/>
+	</wsdl:message>
+	<wsdl:message name="GetNodeResponse">
+		<wsdl:part name="parameters" element="tptz:GetNodeResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetConfigurationsRequest">
+		<wsdl:part name="parameters" element="tptz:GetConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetConfigurationsResponse">
+		<wsdl:part name="parameters" element="tptz:GetConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetConfigurationRequest">
+		<wsdl:part name="parameters" element="tptz:GetConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="GetConfigurationResponse">
+		<wsdl:part name="parameters" element="tptz:GetConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetConfigurationRequest">
+		<wsdl:part name="parameters" element="tptz:SetConfiguration"/>
+	</wsdl:message>
+	<wsdl:message name="SetConfigurationResponse">
+		<wsdl:part name="parameters" element="tptz:SetConfigurationResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetConfigurationOptionsRequest">
+		<wsdl:part name="parameters" element="tptz:GetConfigurationOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetConfigurationOptionsResponse">
+		<wsdl:part name="parameters" element="tptz:GetConfigurationOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetsRequest">
+		<wsdl:part name="parameters" element="tptz:GetPresets"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetsResponse">
+		<wsdl:part name="parameters" element="tptz:GetPresetsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetPresetRequest">
+		<wsdl:part name="parameters" element="tptz:SetPreset"/>
+	</wsdl:message>
+	<wsdl:message name="SetPresetResponse">
+		<wsdl:part name="parameters" element="tptz:SetPresetResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemovePresetRequest">
+		<wsdl:part name="parameters" element="tptz:RemovePreset"/>
+	</wsdl:message>
+	<wsdl:message name="RemovePresetResponse">
+		<wsdl:part name="parameters" element="tptz:RemovePresetResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GotoPresetRequest">
+		<wsdl:part name="parameters" element="tptz:GotoPreset"/>
+	</wsdl:message>
+	<wsdl:message name="GotoPresetResponse">
+		<wsdl:part name="parameters" element="tptz:GotoPresetResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetStatusRequest">
+		<wsdl:part name="parameters" element="tptz:GetStatus"/>
+	</wsdl:message>
+	<wsdl:message name="GetStatusResponse">
+		<wsdl:part name="parameters" element="tptz:GetStatusResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SendAuxiliaryCommandRequest">
+		<wsdl:part name="parameters" element="tptz:SendAuxiliaryCommand"/>
+	</wsdl:message>
+	<wsdl:message name="SendAuxiliaryCommandResponse">
+		<wsdl:part name="parameters" element="tptz:SendAuxiliaryCommandResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GotoHomePositionRequest">
+		<wsdl:part name="parameters" element="tptz:GotoHomePosition"/>
+	</wsdl:message>
+	<wsdl:message name="GotoHomePositionResponse">
+		<wsdl:part name="parameters" element="tptz:GotoHomePositionResponse"/>
+	</wsdl:message>
+	<wsdl:message name="SetHomePositionRequest">
+		<wsdl:part name="parameters" element="tptz:SetHomePosition"/>
+	</wsdl:message>
+	<wsdl:message name="SetHomePositionResponse">
+		<wsdl:part name="parameters" element="tptz:SetHomePositionResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ContinuousMoveRequest">
+		<wsdl:part name="parameters" element="tptz:ContinuousMove"/>
+	</wsdl:message>
+	<wsdl:message name="ContinuousMoveResponse">
+		<wsdl:part name="parameters" element="tptz:ContinuousMoveResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RelativeMoveRequest">
+		<wsdl:part name="parameters" element="tptz:RelativeMove"/>
+	</wsdl:message>
+	<wsdl:message name="RelativeMoveResponse">
+		<wsdl:part name="parameters" element="tptz:RelativeMoveResponse"/>
+	</wsdl:message>
+	<wsdl:message name="AbsoluteMoveRequest">
+		<wsdl:part name="parameters" element="tptz:AbsoluteMove"/>
+	</wsdl:message>
+	<wsdl:message name="AbsoluteMoveResponse">
+		<wsdl:part name="parameters" element="tptz:AbsoluteMoveResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GeoMoveRequest">
+		<wsdl:part name="parameters" element="tptz:GeoMove"/>
+	</wsdl:message>
+	<wsdl:message name="GeoMoveResponse">
+		<wsdl:part name="parameters" element="tptz:GeoMoveResponse"/>
+	</wsdl:message>
+	<wsdl:message name="StopRequest">
+		<wsdl:part name="parameters" element="tptz:Stop"/>
+	</wsdl:message>
+	<wsdl:message name="StopResponse">
+		<wsdl:part name="parameters" element="tptz:StopResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetToursRequest">
+		<wsdl:part name="parameters" element="tptz:GetPresetTours"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetToursResponse">
+		<wsdl:part name="parameters" element="tptz:GetPresetToursResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetTourRequest">
+		<wsdl:part name="parameters" element="tptz:GetPresetTour"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetTourResponse">
+		<wsdl:part name="parameters" element="tptz:GetPresetTourResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetTourOptionsRequest">
+		<wsdl:part name="parameters" element="tptz:GetPresetTourOptions"/>
+	</wsdl:message>
+	<wsdl:message name="GetPresetTourOptionsResponse">
+		<wsdl:part name="parameters" element="tptz:GetPresetTourOptionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreatePresetTourRequest">
+		<wsdl:part name="parameters" element="tptz:CreatePresetTour"/>
+	</wsdl:message>
+	<wsdl:message name="CreatePresetTourResponse">
+		<wsdl:part name="parameters" element="tptz:CreatePresetTourResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyPresetTourRequest">
+		<wsdl:part name="parameters" element="tptz:ModifyPresetTour"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyPresetTourResponse">
+		<wsdl:part name="parameters" element="tptz:ModifyPresetTourResponse"/>
+	</wsdl:message>
+	<wsdl:message name="OperatePresetTourRequest">
+		<wsdl:part name="parameters" element="tptz:OperatePresetTour"/>
+	</wsdl:message>
+	<wsdl:message name="OperatePresetTourResponse">
+		<wsdl:part name="parameters" element="tptz:OperatePresetTourResponse"/>
+	</wsdl:message>
+	<wsdl:message name="RemovePresetTourRequest">
+		<wsdl:part name="parameters" element="tptz:RemovePresetTour"/>
+	</wsdl:message>
+	<wsdl:message name="RemovePresetTourResponse">
+		<wsdl:part name="parameters" element="tptz:RemovePresetTourResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleConfigurationsRequest">
+		<wsdl:part name="parameters" element="tptz:GetCompatibleConfigurations"/>
+	</wsdl:message>
+	<wsdl:message name="GetCompatibleConfigurationsResponse">
+		<wsdl:part name="parameters" element="tptz:GetCompatibleConfigurationsResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="PTZ">
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation>Returns the capabilities of the PTZ service. The result is returned in a typed answer.</wsdl:documentation>
+			<wsdl:input message="tptz:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="tptz:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetNodes">
+			<wsdl:documentation>
+				Get the descriptions of the available PTZ Nodes.
+				<br/>
+				A PTZ-capable device may have multiple PTZ Nodes. The PTZ Nodes may represent
+				mechanical PTZ drivers, uploaded PTZ drivers or digital PTZ drivers. PTZ Nodes are the
+				lowest level entities in the PTZ control API and reflect the supported PTZ capabilities. The
+				PTZ Node is referenced either by its name or by its reference token. 
+      		</wsdl:documentation>
+			<wsdl:input message="tptz:GetNodesRequest"/>
+			<wsdl:output message="tptz:GetNodesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetNode">
+			<wsdl:documentation>Get a specific PTZ Node identified by a reference
+        token or a name.
+	  </wsdl:documentation>
+			<wsdl:input message="tptz:GetNodeRequest"/>
+			<wsdl:output message="tptz:GetNodeResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetConfiguration">
+			<wsdl:documentation>Get a specific PTZconfiguration from the device, identified by its reference token or name.
+				<br/>
+				The default Position/Translation/Velocity Spaces are introduced to allow NVCs sending move
+				requests without the need to specify a certain coordinate system. The default Speeds are
+				introduced to control the speed of move requests (absolute, relative, preset), where no
+				explicit speed has been set.<br/>
+				The allowed pan and tilt range for Pan/Tilt Limits is defined by a two-dimensional space range
+				that is mapped to a specific Absolute Pan/Tilt Position Space. At least one Pan/Tilt Position
+				Space is required by the PTZNode to support Pan/Tilt limits. The limits apply to all supported
+				absolute, relative and continuous Pan/Tilt movements. The limits shall be checked within the
+				coordinate system for which the limits have been specified. That means that even if
+				movements are specified in a different coordinate system, the requested movements shall be
+				transformed to the coordinate system of the limits where the limits can be checked. When a
+				relative or continuous movements is specified, which would leave the specified limits, the PTZ
+				unit has to move along the specified limits. The Zoom Limits have to be interpreted
+				accordingly.
+			</wsdl:documentation>
+			<wsdl:input message="tptz:GetConfigurationRequest"/>
+			<wsdl:output message="tptz:GetConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetConfigurations">
+			<wsdl:documentation>
+		        Get all the existing PTZConfigurations from the device.
+				<br/>
+				The default Position/Translation/Velocity Spaces are introduced to allow NVCs sending move
+				requests without the need to specify a certain coordinate system. The default Speeds are
+				introduced to control the speed of move requests (absolute, relative, preset), where no
+				explicit speed has been set.<br/>
+				The allowed pan and tilt range for Pan/Tilt Limits is defined by a two-dimensional space range
+				that is mapped to a specific Absolute Pan/Tilt Position Space. At least one Pan/Tilt Position
+				Space is required by the PTZNode to support Pan/Tilt limits. The limits apply to all supported
+				absolute, relative and continuous Pan/Tilt movements. The limits shall be checked within the
+				coordinate system for which the limits have been specified. That means that even if
+				movements are specified in a different coordinate system, the requested movements shall be
+				transformed to the coordinate system of the limits where the limits can be checked. When a
+				relative or continuous movements is specified, which would leave the specified limits, the PTZ
+				unit has to move along the specified limits. The Zoom Limits have to be interpreted
+				accordingly.
+			</wsdl:documentation>
+			<wsdl:input message="tptz:GetConfigurationsRequest"/>
+			<wsdl:output message="tptz:GetConfigurationsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetConfiguration">
+			<wsdl:documentation>
+        Set/update a existing PTZConfiguration on the device.
+      </wsdl:documentation>
+			<wsdl:input message="tptz:SetConfigurationRequest"/>
+			<wsdl:output message="tptz:SetConfigurationResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetConfigurationOptions">
+			<wsdl:documentation>
+				List supported coordinate systems including their range limitations. Therefore, the options
+				MAY differ depending on whether the PTZ Configuration is assigned to a Profile containing a
+				Video Source Configuration. In that case, the options may additionally contain coordinate
+				systems referring to the image coordinate system described by the Video Source
+				Configuration. If the PTZ Node supports continuous movements, it shall return a Timeout Range within
+				which Timeouts are accepted by the PTZ Node.				
+			</wsdl:documentation>
+			<wsdl:input message="tptz:GetConfigurationOptionsRequest"/>
+			<wsdl:output message="tptz:GetConfigurationOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SendAuxiliaryCommand">
+			<wsdl:documentation>
+        Operation to send auxiliary commands to the PTZ device
+        mapped by the PTZNode in the selected profile. The
+        operation is supported
+        if the AuxiliarySupported element of the PTZNode is true
+      </wsdl:documentation>
+			<wsdl:input message="tptz:SendAuxiliaryCommandRequest"/>
+			<wsdl:output message="tptz:SendAuxiliaryCommandResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresets">
+			<wsdl:documentation>
+        Operation to request all PTZ presets for the PTZNode
+        in the selected profile. The operation is supported if there is support
+        for at least on PTZ preset by the PTZNode.</wsdl:documentation>
+			<wsdl:input message="tptz:GetPresetsRequest"/>
+			<wsdl:output message="tptz:GetPresetsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetPreset">
+			<wsdl:documentation>
+				The SetPreset command saves the current device position parameters so that the device can
+				move to the saved preset position through the GotoPreset operation.
+				In order to create a new preset, the SetPresetRequest contains no PresetToken. If creation is
+				successful, the Response contains the PresetToken which uniquely identifies the Preset. An
+				existing Preset can be overwritten by specifying the PresetToken of the corresponding Preset.
+				In both cases (overwriting or creation) an optional PresetName can be specified. The
+				operation fails if the PTZ device is moving during the SetPreset operation.
+				The device MAY internally save additional states such as imaging properties in the PTZ
+				Preset which then should be recalled in the GotoPreset operation.      </wsdl:documentation>
+			<wsdl:input message="tptz:SetPresetRequest"/>
+			<wsdl:output message="tptz:SetPresetResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemovePreset">
+			<wsdl:documentation>
+        Operation to remove a PTZ preset for the Node in
+        the
+        selected profile. The operation is supported if the
+        PresetPosition
+        capability exists for teh Node in the
+        selected profile.
+      </wsdl:documentation>
+			<wsdl:input message="tptz:RemovePresetRequest"/>
+			<wsdl:output message="tptz:RemovePresetResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GotoPreset">
+			<wsdl:documentation>
+        Operation to go to a saved preset position for the
+        PTZNode in the selected profile. The operation is supported if there is
+        support for at least on PTZ preset by the PTZNode.</wsdl:documentation>
+			<wsdl:input message="tptz:GotoPresetRequest"/>
+			<wsdl:output message="tptz:GotoPresetResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GotoHomePosition">
+			<wsdl:documentation>
+        Operation to move the PTZ device to it's &quot;home&quot; position. The operation is supported if the HomeSupported element in the PTZNode is true.</wsdl:documentation>
+			<wsdl:input message="tptz:GotoHomePositionRequest"/>
+			<wsdl:output message="tptz:GotoHomePositionResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="SetHomePosition">
+			<wsdl:documentation>Operation to save current position as the home position.
+				The SetHomePosition command returns with a failure if the “home” position is fixed and
+				cannot be overwritten. If the SetHomePosition is successful, it is possible to recall the
+				Home Position with the GotoHomePosition command.</wsdl:documentation>
+			<wsdl:input message="tptz:SetHomePositionRequest"/>
+			<wsdl:output message="tptz:SetHomePositionResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="ContinuousMove">
+			<wsdl:documentation>Operation for continuous Pan/Tilt and Zoom movements. The operation is supported if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. If the space argument is omitted, the default space set by the PTZConfiguration will be used.</wsdl:documentation>
+			<wsdl:input message="tptz:ContinuousMoveRequest"/>
+			<wsdl:output message="tptz:ContinuousMoveResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RelativeMove">
+			<wsdl:documentation>Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the PTZNode supports at least one relative Pan/Tilt or Zoom space.<br/> 
+				The speed argument is optional. If an x/y speed value is given it is up to the device to either use 
+				the x value as absolute resoluting speed vector or to map x and y to the component speed. 
+				If the speed argument is omitted, the default speed set by the PTZConfiguration will be used.
+			</wsdl:documentation>
+			<wsdl:input message="tptz:RelativeMoveRequest"/>
+			<wsdl:output message="tptz:RelativeMoveResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetStatus">
+			<wsdl:documentation>
+				Operation to request PTZ status for the Node in the
+				selected profile.</wsdl:documentation>
+			<wsdl:input message="tptz:GetStatusRequest"/>
+			<wsdl:output message="tptz:GetStatusResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="AbsoluteMove">
+			<wsdl:documentation>Operation to move pan,tilt or zoom to a absolute destination. <br/>
+				The speed argument is optional. If an x/y speed value is given it is up to the device to either use 
+				the x value as absolute resoluting speed vector or to map x and y to the component speed. 
+				If the speed argument is omitted, the default speed set by the PTZConfiguration will be used.
+			</wsdl:documentation>
+			<wsdl:input message="tptz:AbsoluteMoveRequest"/>
+			<wsdl:output message="tptz:AbsoluteMoveResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GeoMove">
+			<wsdl:documentation>Operation to move pan,tilt or zoom to point to a destination based on the geolocation of the target. <br/>
+				The speed argument is optional. If an x/y speed value is given it is up to the device to either use 
+				the x value as absolute resoluting speed vector or to map x and y to the component speed. 
+				If the speed argument is omitted, the default speed set by the PTZConfiguration will be used.
+				The area height and area dwidth parameters are optional, they can be used independently and may be used
+				by the device to automatically determine the best zoom level to show the target.
+			</wsdl:documentation>
+			<wsdl:input message="tptz:GeoMoveRequest"/>
+			<wsdl:output message="tptz:GeoMoveResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="Stop">
+			<wsdl:documentation>Operation to stop ongoing pan, tilt and zoom movements of absolute relative and continuous type.
+If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing pan, tilt and zoom movements.</wsdl:documentation>
+			<wsdl:input message="tptz:StopRequest"/>
+			<wsdl:output message="tptz:StopResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresetTours">
+			<wsdl:documentation>Operation to request PTZ preset tours in the selected media profiles.</wsdl:documentation>
+			<wsdl:input message="tptz:GetPresetToursRequest"/>
+			<wsdl:output message="tptz:GetPresetToursResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresetTour">
+			<wsdl:documentation>Operation to request a specific PTZ preset tour in the selected media profile.</wsdl:documentation>
+			<wsdl:input message="tptz:GetPresetTourRequest"/>
+			<wsdl:output message="tptz:GetPresetTourResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresetTourOptions">
+			<wsdl:documentation>Operation to request available options to configure PTZ preset tour.</wsdl:documentation>
+			<wsdl:input message="tptz:GetPresetTourOptionsRequest"/>
+			<wsdl:output message="tptz:GetPresetTourOptionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreatePresetTour">
+			<wsdl:documentation>Operation to create a preset tour for the selected media profile.</wsdl:documentation>
+			<wsdl:input message="tptz:CreatePresetTourRequest"/>
+			<wsdl:output message="tptz:CreatePresetTourResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyPresetTour">
+			<wsdl:documentation>Operation to modify a preset tour for the selected media profile.</wsdl:documentation>
+			<wsdl:input message="tptz:ModifyPresetTourRequest"/>
+			<wsdl:output message="tptz:ModifyPresetTourResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="OperatePresetTour">
+			<wsdl:documentation>Operation to perform specific operation on the preset tour in selected media profile.</wsdl:documentation>
+			<wsdl:input message="tptz:OperatePresetTourRequest"/>
+			<wsdl:output message="tptz:OperatePresetTourResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="RemovePresetTour">
+			<wsdl:documentation>Operation to delete a specific preset tour from the media profile.</wsdl:documentation>
+			<wsdl:input message="tptz:RemovePresetTourRequest"/>
+			<wsdl:output message="tptz:RemovePresetTourResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleConfigurations">
+			<wsdl:documentation>Operation to get all available PTZConfigurations that can be added to the referenced media profile. <br/>
+				A device providing more than one PTZConfiguration or more than one VideoSourceConfiguration or which has any other resource
+				interdependency between PTZConfiguration entities and other resources listable in a media profile should implement this operation.
+				PTZConfiguration entities returned by this operation shall not fail on adding them to the referenced media profile.
+			</wsdl:documentation>
+			<wsdl:input message="tptz:GetCompatibleConfigurationsRequest"/>
+			<wsdl:output message="tptz:GetCompatibleConfigurationsResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="PTZBinding" type="tptz:PTZ">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetConfigurations">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresets">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetPresets"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetPreset">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/SetPreset"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="RemovePreset">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GotoPreset">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetStatus">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetStatus"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetNodes">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetNodes"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetNode">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetNode"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetConfiguration">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetConfigurationOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GotoHomePosition">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SetHomePosition">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="ContinuousMove">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="RelativeMove">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="SendAuxiliaryCommand">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="AbsoluteMove">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GeoMove">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GeoMove"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="Stop">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/Stop"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresetTours">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresetTour">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetPresetTourOptions">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreatePresetTour">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyPresetTour">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="OperatePresetTour">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="RemovePresetTour">
+			<soap:operation soapAction="http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetCompatibleConfigurations">
+			<soap:operation
+				soapAction="http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/bin/www.onvif.org/ver10/actionengine.wsdl b/gsoap/bin/www.onvif.org/ver10/actionengine.wsdl
new file mode 100644
index 0000000..b3c8656
--- /dev/null
+++ b/gsoap/bin/www.onvif.org/ver10/actionengine.wsdl
@@ -0,0 +1,1265 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xsl" href="../ver20/util/onvif-wsdl-viewer.xsl"?>
+<!--
+Copyright (c) 2012 by ONVIF: Open Network Video Interface Forum. All rights reserved.
+
+Recipients of this document may copy, distribute, publish, or display this document so long as this copyright notice, license and disclaimer are retained with all copies of the document. No license is granted to modify this document.
+
+THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
+IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT.  THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.
+-->
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:tae="http://www.onvif.org/ver10/actionengine/wsdl" targetNamespace="http://www.onvif.org/ver10/actionengine/wsdl">
+	<wsdl:types>
+		<xs:schema targetNamespace="http://www.onvif.org/ver10/actionengine/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" elementFormDefault="qualified" version="1.0">
+			<xs:import namespace="http://www.onvif.org/ver10/schema" schemaLocation="../ver10/schema/onvif.xsd"/>
+			<xs:import namespace="http://docs.oasis-open.org/wsn/b-2" schemaLocation="http://docs.oasis-open.org/wsn/b-2.xsd"/>
+			<!--  Message Request/Responses elements  -->
+			<!--===============================-->
+			<xs:element name="GetSupportedActions">
+				<xs:complexType/>
+			</xs:element>
+			<xs:element name="GetSupportedActionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="SupportedActions" type="tae:SupportedActions">
+							<xs:annotation>
+								<xs:documentation>Array of supported Action types</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetActions">
+				<xs:complexType/>
+			</xs:element>
+			<xs:element name="GetActionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Action" type="tae:Action" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Array of current Action configurations</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreateActions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Action" type="tae:ActionConfiguration" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Array of Actions to be configured on service provider</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateActionsResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Action" type="tae:Action" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Array of configured Actions with service provider assigned unique identifiers</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeleteActions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Token" type="tt:ReferenceToken" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Array of tokens referencing existing Action configurations to be removed</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteActionsResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="ModifyActions">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Action" type="tae:Action" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Array of Action configurations to update the existing action configurations</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ModifyActionsResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="GetServiceCapabilities">
+				<xs:complexType/>
+			</xs:element>
+			<xs:element name="GetServiceCapabilitiesResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Capabilities" type="tae:ActionEngineCapabilities"/>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="Capabilities" type="tae:ActionEngineCapabilities"/>
+			<!--===============================-->
+			<xs:element name="GetActionTriggers">
+				<xs:complexType/>
+			</xs:element>
+			<xs:element name="GetActionTriggersResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ActionTrigger" type="tae:ActionTrigger" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Array of current Action Trigger configurations</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="CreateActionTriggers">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ActionTrigger" type="tae:ActionTriggerConfiguration" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Action Triggers to be configured</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="CreateActionTriggersResponse">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ActionTrigger" type="tae:ActionTrigger" minOccurs="0" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Returns configured Action Triggers with service provider assigned unique identifers</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="ModifyActionTriggers">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="ActionTrigger" type="tae:ActionTrigger" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Array of Action Trigger configurations to be updated.</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="ModifyActionTriggersResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<xs:element name="DeleteActionTriggers">
+				<xs:complexType>
+					<xs:sequence>
+						<xs:element name="Token" type="tt:ReferenceToken" maxOccurs="unbounded">
+							<xs:annotation>
+								<xs:documentation>Array of tokens referencing existing Action Trigger configurations to be removed</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:sequence>
+				</xs:complexType>
+			</xs:element>
+			<xs:element name="DeleteActionTriggersResponse">
+				<xs:complexType/>
+			</xs:element>
+			<!--===============================-->
+			<!--         Action Engine Types         -->
+			<!--===============================-->
+			<!--===============================-->
+			<xs:complexType name="ActionConfigDescription">
+				<xs:annotation>
+					<xs:documentation>Describes the configuration parameters of an action.</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="ParameterDescription" type="tt:ItemListDescription">
+						<xs:annotation>
+							<xs:documentation>Action configuration parameter descriptions </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+				</xs:sequence>
+				<xs:attribute name="Name" type="xs:QName" use="required">
+					<xs:annotation>
+						<xs:documentation>Action type name</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="SupportedActions">
+				<xs:annotation>
+					<xs:documentation>SupportedActions data structure lists the available action types that service provider supports. For each action type, data structure contains the action configuration parameters.</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="ActionContentSchemaLocation" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>
+            	      Lists the location of all schemas that are referenced in the supported actions. If the action descriptions reference data types in the ONVIF schema file,the ONVIF schema file MUST be explicitly listed.
+            	      </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="ActionDescription" type="tae:ActionConfigDescription" minOccurs="0" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>List of actions supported by Action Engine Service provider.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:SupportedActionsExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="SupportedActionsExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="ActionEngineCapabilities">
+				<xs:annotation>
+					<xs:documentation>Action Engine Capabilities data structure contains the maximum number of supported actions and number of actions in use for generic as well as specific action types</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="ActionCapabilities" type="tae:ActionTypeLimits" minOccurs="0" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>Limits for each action type </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:ActionEngineCapabilitiesExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:attribute name="MaximumTriggers" type="xs:positiveInteger">
+					<xs:annotation>
+						<xs:documentation>The maximum number of trigger configurations that the service provider can concurrently support</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="MaximumActions" type="xs:positiveInteger">
+					<xs:annotation>
+						<xs:documentation>The maximum number of actions that the service provider can concurrently support</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="ActionEngineCapabilitiesExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="ActionTypeLimits">
+				<xs:annotation>
+					<xs:documentation>ActionTypeLimits data structure contains maximum and current usage information for a specific action type in the service provider</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="Type" type="xs:QName" use="required">
+					<xs:annotation>
+						<xs:documentation>Action Type</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Maximum" type="xs:positiveInteger" use="required">
+					<xs:annotation>
+						<xs:documentation>For the specific action type, the maximum number of actions that could be concurrently supported by the service provider </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="InUse" type="xs:nonNegativeInteger" use="optional" default="0">
+					<xs:annotation>
+						<xs:documentation>For the specific action type, the number of actions in use by the service provider </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="ActionConfiguration">
+				<xs:annotation>
+					<xs:documentation>Action Configuration data type contains the configuration settings of action configuration parameters, service requester given action Name, and service provider supported action type value</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="Parameters" type="tt:ItemList">
+						<xs:annotation>
+							<xs:documentation>Action configuration parameter settings.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="Name" type="xs:string" use="required">
+					<xs:annotation>
+						<xs:documentation>User given name. </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="Type" type="xs:QName" use="required">
+					<xs:annotation>
+						<xs:documentation>Denotes the action type. </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="Action">
+				<xs:annotation>
+					<xs:documentation>Action data type contains the configuration settings of one action instance and service provider assigned unique identifier for this action configuration.</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="Configuration" type="tae:ActionConfiguration">
+						<xs:annotation>
+							<xs:documentation>Action configuration contains action type, user given action name, and configuratin parameter settings.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="Token" type="tt:ReferenceToken" use="required">
+					<xs:annotation>
+						<xs:documentation>Unique Action identifier that service provider assigned to the action configuration. </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="ActionTriggerConfiguration">
+				<xs:annotation>
+					<xs:documentation>Action Trigger configuration data type contains mandatory Topic Expression (Section Topic Filter in [Core Specification]), optional Message content expression (Section Message Content Filter in [Core Specification]), and set of actions to be triggered.</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="TopicExpression" type="wsnt:TopicExpressionType">
+						<xs:annotation>
+							<xs:documentation>Topic expression, for example, to trigger only for relays. Trigger based on event topic. </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="ContentExpression" type="wsnt:QueryExpressionType" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Content expression, for example, to trigger only when the relay value is on. Trigger based on content data in event.</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="ActionToken" type="tt:ReferenceToken" minOccurs="0" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>Reference to actions to be triggered when the conditions are satisfied. </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:ActionTriggerConfigurationExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="ActionTriggerConfigurationExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="ActionTrigger">
+				<xs:annotation>
+					<xs:documentation>Action Trigger data type contains the service provider assigned unique identifier for the configuration and action trigger configuration data.</xs:documentation>
+				</xs:annotation>
+				<xs:sequence>
+					<xs:element name="Configuration" type="tae:ActionTriggerConfiguration">
+						<xs:annotation>
+							<xs:documentation>Action Trigger Configuration</xs:documentation>
+							<xs:documentation>Action Trigger Configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="Token" type="tt:ReferenceToken" use="required">
+					<xs:annotation>
+						<xs:documentation>Unique Action Trigger identifier that service provider assigned to the action trigger configuration. </xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--==========================================-->
+			<!--  Action Configuration Data Types         -->
+			<!--==========================================-->
+			<xs:complexType name="onvif_action">
+				<xs:sequence>
+					<xs:element name="ActionDescription" type="tae:ActionConfigDescription" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="EMailServerConfiguration">
+				<xs:sequence>
+					<xs:element name="SMTPConfig" type="tae:SMTPConfig">
+						<xs:annotation>
+							<xs:documentation>SMTP EMail Server configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="POPConfig" type="tae:POPConfig">
+						<xs:annotation>
+							<xs:documentation>POP EMail Server configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="AuthenticationConfig" type="tae:AuthenticationConfig">
+						<xs:annotation>
+							<xs:documentation>Credentials configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="SMTPConfig">
+				<xs:sequence>
+					<xs:element name="HostAddress" type="tae:HostAddress">
+						<xs:annotation>
+							<xs:documentation>Destination SMTP Address configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="portNo" type="xs:positiveInteger">
+					<xs:annotation>
+						<xs:documentation/>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="POPConfig">
+				<xs:sequence>
+					<xs:element name="HostAddress" type="tae:HostAddress">
+						<xs:annotation>
+							<xs:documentation>Destination POP Server Address configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="HostAddress">
+				<xs:sequence>
+					<xs:element name="Value" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>IP Address</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="formatType" type="tae:AddressFormatType" use="required">
+					<xs:annotation>
+						<xs:documentation>IP Address format type such as IPv4 or IPv6</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:simpleType name="AddressFormatType">
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="hostname"/>
+					<xs:enumeration value="ipv4"/>
+					<xs:enumeration value="ipv6"/>
+					<xs:enumeration value="Extended"/>
+				</xs:restriction>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="UserCredentials">
+				<xs:sequence>
+					<xs:element name="username" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>Username</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="password" type="xs:base64Binary" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Password</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:UserCredentialsExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="UserCredentialsExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="AuthenticationConfig">
+				<xs:sequence>
+					<xs:element name="User" type="tae:UserCredentials">
+						<xs:annotation>
+							<xs:documentation>Username-password</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="mode" type="tae:EMailAuthenticationMode" use="required">
+					<xs:annotation>
+						<xs:documentation>Email server authentication mode</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:simpleType name="EMailAuthenticationMode">
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="none"/>
+					<xs:enumeration value="SMTP"/>
+					<xs:enumeration value="POPSMTP"/>
+					<xs:enumeration value="Extended"/>
+				</xs:restriction>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="EMailReceiverConfiguration">
+				<xs:sequence>
+					<xs:element name="TO" type="xs:string" minOccurs="1" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>Configuration for E-mail TO</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="CC" type="xs:string" minOccurs="0" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>Configuration for E-mail CC</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:EMailReceiverConfigurationExtension" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation/>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="EMailReceiverConfigurationExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="EMailAttachmentConfiguration">
+				<xs:sequence>
+					<xs:element name="FileName" type="xs:string" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation/>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="doSuffix" type="tae:FileSuffixType" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation/>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:EMailAttachmentConfigurationExtension" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation/>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="EMailAttachmentConfigurationExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="EMailBodyTextConfiguration">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="includeEvent" type="xs:boolean" use="optional">
+					<xs:annotation>
+						<xs:documentation>Whether content of E-mail message contains event data</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="type" type="xs:string" use="optional">
+					<xs:annotation>
+						<xs:documentation/>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="MediaSource">
+				<xs:sequence>
+					<xs:element name="ProfileToken" type="tt:ReferenceToken">
+						<xs:annotation>
+							<xs:documentation>MediaSource profile reference token</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="HttpHostConfigurations">
+				<xs:sequence>
+					<xs:element name="HttpDestination" type="tae:HttpDestinationConfiguration" minOccurs="1" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>Destination HTTP Server configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:HttpHostConfigurationsExtension" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation/>
+						</xs:annotation>
+					</xs:element>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="HttpHostConfigurationsExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="HttpDestinationConfiguration">
+				<xs:sequence>
+					<xs:element name="HostAddress" type="tae:HttpHostAddress">
+						<xs:annotation>
+							<xs:documentation>Destination HTTP Server address configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="HttpAuthentication" type="tae:HttpAuthenticationConfiguration" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>User Credentials configuration for destination HTTP Server</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:HttpDestinationConfigurationExtension" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation/>
+						</xs:annotation>
+					</xs:element>
+				</xs:sequence>
+				<xs:attribute name="uri" type="xs:string" use="optional" default="/">
+					<xs:annotation>
+						<xs:documentation>URI for POST Message destination</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="protocol" type="tae:HttpProtocolType" use="optional" default="http">
+					<xs:annotation>
+						<xs:documentation>HTTP/HTTPS protocol selection (default is http)</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:simpleType name="HttpProtocolType">
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="http"/>
+					<xs:enumeration value="https"/>
+					<xs:enumeration value="Extended"/>
+				</xs:restriction>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="HttpDestinationConfigurationExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="HttpAuthenticationConfiguration">
+				<xs:sequence>
+					<xs:element name="User" type="tae:UserCredentials" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>User credentials</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:HttpAuthenticationConfigurationExtension" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation/>
+						</xs:annotation>
+					</xs:element>
+				</xs:sequence>
+				<xs:attribute name="method" type="tae:HttpAuthenticationMethodType" use="optional" default="none">
+					<xs:annotation>
+						<xs:documentation>HTTP Authentication Method</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="HttpAuthenticationConfigurationExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:simpleType name="HttpAuthenticationMethodType">
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="none"/>
+					<xs:enumeration value="MD5Digest"/>
+					<xs:enumeration value="Extended"/>
+				</xs:restriction>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="HttpHostAddress">
+				<xs:sequence>
+					<xs:element name="Value" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>Destination HTTP Server IP Address</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="formatType" type="tae:AddressFormatType" use="required">
+					<xs:annotation>
+						<xs:documentation>IPv4 or IPv6</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="portNo" type="xs:integer" use="optional" default="80">
+					<xs:annotation>
+						<xs:documentation>Port Number if different from 80</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="PostContentConfiguration">
+				<xs:sequence>
+					<xs:element name="MediaReference" type="tae:MediaSource" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>MediaSource reference when the media is attached to POST message</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="PostBody" type="tae:PostBodyConfiguration">
+						<xs:annotation>
+							<xs:documentation>Configuration for POST Message content</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="PostBodyConfiguration">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="formData" type="xs:string" use="optional">
+					<xs:annotation>
+						<xs:documentation/>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="includeEvent" type="xs:boolean" use="optional">
+					<xs:annotation>
+						<xs:documentation>Whether include event into POST message</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="includeMedia" type="xs:boolean" use="optional">
+					<xs:annotation>
+						<xs:documentation>Whether attach media into POST message</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpHostConfigurations">
+				<xs:sequence>
+					<xs:element name="FtpDestination" type="tae:FtpDestinationConfiguration" minOccurs="1" maxOccurs="unbounded">
+						<xs:annotation>
+							<xs:documentation>FTP Action destination configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:FtpHostConfigurationsExtension" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation/>
+						</xs:annotation>
+					</xs:element>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpHostConfigurationsExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpDestinationConfiguration">
+				<xs:sequence>
+					<xs:element name="HostAddress" type="tae:FtpHostAddress">
+						<xs:annotation>
+							<xs:documentation>FTP Server IP Address</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="UploadPath" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>Upload Directory Path</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="FtpAuthentication" type="tae:FtpAuthenticationConfiguration">
+						<xs:annotation>
+							<xs:documentation>User credentials confguration for target FTP Server</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:FtpDestinationConfigurationExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpDestinationConfigurationExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpAuthenticationConfiguration">
+				<xs:sequence>
+					<xs:element name="User" type="tae:UserCredentials" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>User Credentials</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="Extension" type="tae:FtpAuthenticationConfigurationExtension" minOccurs="0"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpAuthenticationConfigurationExtension">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpHostAddress">
+				<xs:sequence>
+					<xs:element name="Value" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>FTP Server IP Address</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="formatType" type="tae:AddressFormatType" use="required">
+					<xs:annotation>
+						<xs:documentation>IPv4 or IPv6</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="portNo" type="xs:integer" use="optional" default="21">
+					<xs:annotation>
+						<xs:documentation>Port Number</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpContent">
+				<xs:sequence>
+					<xs:element name="FtpContentConfig" type="tae:FtpContentConfiguration">
+						<xs:annotation>
+							<xs:documentation/>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpFileNameConfigurations">
+				<xs:sequence>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="file_name" type="xs:string" use="optional">
+					<xs:annotation>
+						<xs:documentation>Name of file</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:attribute name="suffix" type="tae:FileSuffixType" use="optional" default="none">
+					<xs:annotation>
+						<xs:documentation>Suffix of file</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:simpleType name="FileSuffixType">
+				<xs:restriction base="xs:string">
+					<xs:enumeration value="none"/>
+					<xs:enumeration value="sequence"/>
+					<xs:enumeration value="dateTime"/>
+					<xs:enumeration value="Extended"/>
+				</xs:restriction>
+			</xs:simpleType>
+			<!--===============================-->
+			<xs:complexType name="FtpContentConfiguration">
+				<xs:sequence>
+					<xs:choice>
+						<xs:element name="UploadImages" type="tae:FtpContentConfigurationUploadImages">
+							<xs:annotation>
+								<xs:documentation>Upload Images action configuration</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+						<xs:element name="UploadFile" type="tae:FtpContentConfigurationUploadFile">
+							<xs:annotation>
+								<xs:documentation>Upload files action configuration</xs:documentation>
+							</xs:annotation>
+						</xs:element>
+					</xs:choice>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:attribute name="Type" type="xs:string" use="required">
+					<xs:annotation>
+						<xs:documentation>Type of FTP Upload action</xs:documentation>
+					</xs:annotation>
+				</xs:attribute>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpContentConfigurationUploadImages">
+				<xs:sequence>
+					<xs:element name="HowLong" type="xs:duration">
+						<xs:annotation>
+							<xs:documentation>Upload Image action; how long?</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="SampleInterval" type="xs:duration">
+						<xs:annotation>
+							<xs:documentation>Upload Image action; sample interval?</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="FileName" type="tae:FtpFileNameConfigurations">
+						<xs:annotation>
+							<xs:documentation>Upload Image action; name of destination file</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="FtpContentConfigurationUploadFile">
+				<xs:sequence>
+					<xs:element name="sourceFileName" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>Name of source file</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="destinationFileName" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>Name of destination file</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="SMSProviderConfiguration">
+				<xs:sequence>
+					<xs:element name="ProviderURL" type="xs:anyURI">
+						<xs:annotation>
+							<xs:documentation>SMS Provider's URL </xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="User" type="tae:UserCredentials">
+						<xs:annotation>
+							<xs:documentation>Username and password</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="SMSSenderConfiguration">
+				<xs:sequence>
+					<xs:element name="EMail" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>Sender's e-mail address</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="SMSMessage">
+				<xs:sequence>
+					<xs:element name="Text" type="xs:string">
+						<xs:annotation>
+							<xs:documentation>Text Message</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="TriggeredRecordingConfiguration">
+				<xs:sequence>
+					<xs:element name="PreRecordDuration" type="xs:duration">
+						<xs:annotation>
+							<xs:documentation>Length of recording time before the triggering event</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="PostRecordDuration" type="xs:duration">
+						<xs:annotation>
+							<xs:documentation>Recording after alarm recording duration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="RecordDuration" type="xs:duration">
+						<xs:annotation>
+							<xs:documentation>Record duration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="RecordFrameRate" type="xs:positiveInteger" minOccurs="0">
+						<xs:annotation>
+							<xs:documentation>Recording frame rate</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:element name="DoRecordAudio" type="xs:boolean">
+						<xs:annotation>
+							<xs:documentation>Whether Audio recording on/off</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--===============================-->
+			<xs:complexType name="RecordingActionConfiguration">
+				<xs:sequence>
+					<xs:element name="RecordConfig" type="tae:TriggeredRecordingConfiguration">
+						<xs:annotation>
+							<xs:documentation>Recording configuration</xs:documentation>
+						</xs:annotation>
+					</xs:element>
+					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+				</xs:sequence>
+				<xs:anyAttribute processContents="lax"/>
+			</xs:complexType>
+			<!--=========================================-->
+			<!--  End, Action Configuration Data Types   -->
+			<!--=========================================-->
+		</xs:schema>
+	</wsdl:types>
+	<wsdl:message name="GetSupportedActionsRequest">
+		<wsdl:part name="parameters" element="tae:GetSupportedActions"/>
+	</wsdl:message>
+	<wsdl:message name="GetSupportedActionsResponse">
+		<wsdl:part name="parameters" element="tae:GetSupportedActionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetActionsRequest">
+		<wsdl:part name="parameters" element="tae:GetActions"/>
+	</wsdl:message>
+	<wsdl:message name="GetActionsResponse">
+		<wsdl:part name="parameters" element="tae:GetActionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateActionsRequest">
+		<wsdl:part name="parameters" element="tae:CreateActions"/>
+	</wsdl:message>
+	<wsdl:message name="CreateActionsResponse">
+		<wsdl:part name="parameters" element="tae:CreateActionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteActionsRequest">
+		<wsdl:part name="parameters" element="tae:DeleteActions"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteActionsResponse">
+		<wsdl:part name="parameters" element="tae:DeleteActionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyActionsRequest">
+		<wsdl:part name="parameters" element="tae:ModifyActions"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyActionsResponse">
+		<wsdl:part name="parameters" element="tae:ModifyActionsResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesRequest">
+		<wsdl:part name="parameters" element="tae:GetServiceCapabilities"/>
+	</wsdl:message>
+	<wsdl:message name="GetServiceCapabilitiesResponse">
+		<wsdl:part name="parameters" element="tae:GetServiceCapabilitiesResponse"/>
+	</wsdl:message>
+	<wsdl:message name="GetActionTriggersRequest">
+		<wsdl:part name="parameters" element="tae:GetActionTriggers"/>
+	</wsdl:message>
+	<wsdl:message name="GetActionTriggersResponse">
+		<wsdl:part name="parameters" element="tae:GetActionTriggersResponse"/>
+	</wsdl:message>
+	<wsdl:message name="CreateActionTriggersRequest">
+		<wsdl:part name="parameters" element="tae:CreateActionTriggers"/>
+	</wsdl:message>
+	<wsdl:message name="CreateActionTriggersResponse">
+		<wsdl:part name="parameters" element="tae:CreateActionTriggersResponse"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteActionTriggersRequest">
+		<wsdl:part name="parameters" element="tae:DeleteActionTriggers"/>
+	</wsdl:message>
+	<wsdl:message name="DeleteActionTriggersResponse">
+		<wsdl:part name="parameters" element="tae:DeleteActionTriggersResponse"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyActionTriggersRequest">
+		<wsdl:part name="parameters" element="tae:ModifyActionTriggers"/>
+	</wsdl:message>
+	<wsdl:message name="ModifyActionTriggersResponse">
+		<wsdl:part name="parameters" element="tae:ModifyActionTriggersResponse"/>
+	</wsdl:message>
+	<wsdl:portType name="ActionEnginePort">
+		<wsdl:operation name="GetSupportedActions">
+			<wsdl:documentation> The service provider returns the supported action types. 
+		            <br/>The response returns a list of Action Descriptions according to the Action Description Language. 
+		            <br/>The response also contains a list of URLs that provide the location of the schema files. These schema files describe the types and elements used in the Action Descriptions. If action descriptions reference types or elements of the ONVIF schema file, the ONVIF schema file shall be explicitly listed.</wsdl:documentation>
+			<wsdl:input message="tae:GetSupportedActionsRequest"/>
+			<wsdl:output message="tae:GetSupportedActionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetActions">
+			<wsdl:documentation> The service provider returns currently installed Actions.</wsdl:documentation>
+			<wsdl:input message="tae:GetActionsRequest"/>
+			<wsdl:output message="tae:GetActionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateActions">
+			<wsdl:documentation> The create action operation adds actions to configuration. The create action operation is atomic. If a service provider can not create all of requested actions, the service provider responds with a fault message.</wsdl:documentation>
+			<wsdl:input message="tae:CreateActionsRequest"/>
+			<wsdl:output message="tae:CreateActionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteActions">
+			<wsdl:documentation>The delete operation deletes actions. The delete action operation is atomic. If a service provider can not delete all of requested actions, the service provider responds with a fault message. </wsdl:documentation>
+			<wsdl:input message="tae:DeleteActionsRequest"/>
+			<wsdl:output message="tae:DeleteActionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyActions">
+			<wsdl:documentation>The modify action operation modifies action configurations. <br/> The modify action operation is atomic. If a service provider can not modify all of requested action configurations, the service provider responds with a fault message. <br/>All action parameters, except the action type, can be modified. The service provider shall return InvalidAction error if the request attempts to change the action type with modify action request.  </wsdl:documentation>
+			<wsdl:input message="tae:ModifyActionsRequest"/>
+			<wsdl:output message="tae:ModifyActionsResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetServiceCapabilities">
+			<wsdl:documentation> The get capabilities operation returns the Action Engine capabilities</wsdl:documentation>
+			<wsdl:input message="tae:GetServiceCapabilitiesRequest"/>
+			<wsdl:output message="tae:GetServiceCapabilitiesResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="GetActionTriggers">
+			<wsdl:documentation>The service provider returns existing action triggers </wsdl:documentation>
+			<wsdl:input message="tae:GetActionTriggersRequest"/>
+			<wsdl:output message="tae:GetActionTriggersResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="CreateActionTriggers">
+			<wsdl:documentation> Creates action triggers. The create action triggers operation is atomic. If a service provider can not create all of requested action triggers, the service provider responds with a fault message.</wsdl:documentation>
+			<wsdl:input message="tae:CreateActionTriggersRequest"/>
+			<wsdl:output message="tae:CreateActionTriggersResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteActionTriggers">
+			<wsdl:documentation>Deletes action triggers. The delete action triggers operation is atomic. If a service provider can not delete all of requested action triggers, the service provider responds with a fault message.</wsdl:documentation>
+			<wsdl:input message="tae:DeleteActionTriggersRequest"/>
+			<wsdl:output message="tae:DeleteActionTriggersResponse"/>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyActionTriggers">
+			<wsdl:documentation>Modifies existing action triggers. The modify action triggers operation is atomic. If a service provider can not modify all of requested action trigger configurations, the service provider responds with a fault message.</wsdl:documentation>
+			<wsdl:input message="tae:ModifyActionTriggersRequest"/>
+			<wsdl:output message="tae:ModifyActionTriggersResponse"/>
+		</wsdl:operation>
+	</wsdl:portType>
+	<wsdl:binding name="ActionEngineBinding" type="tae:ActionEnginePort">
+		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
+		<wsdl:operation name="GetSupportedActions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/GetSupportedActions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetActions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/GetActions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateActions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/CreateActions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteActions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/DeleteActions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyActions">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/ModifyActions"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetServiceCapabilities">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/GetServiceCapabilities"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="GetActionTriggers">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/GetActionTriggers"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="CreateActionTriggers">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/CreateActionTriggers"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="DeleteActionTriggers">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionTriggers"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+		<wsdl:operation name="ModifyActionTriggers">
+			<soap:operation soapAction="http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionTriggers"/>
+			<wsdl:input>
+				<soap:body use="literal"/>
+			</wsdl:input>
+			<wsdl:output>
+				<soap:body use="literal"/>
+			</wsdl:output>
+		</wsdl:operation>
+	</wsdl:binding>
+</wsdl:definitions>
diff --git a/gsoap/import/wsa5.h b/gsoap/import/wsa5.h
index 69c3131..9709f59 100644
--- a/gsoap/import/wsa5.h
+++ b/gsoap/import/wsa5.h
@@ -275,7 +275,7 @@ mutable struct SOAP_ENV__Header
 
 // Added
 //gsoap SOAP_ENV service method-action: Fault http://www.w3.org/2005/08/addressing/soap/fault
-int SOAP_ENV__Fault
+/*int SOAP_ENV__Fault
 (       _QName			 faultcode,		// SOAP 1.1
         char			*faultstring,		// SOAP 1.1
         char			*faultactor,		// SOAP 1.1
@@ -286,6 +286,6 @@ int SOAP_ENV__Fault
         char			*SOAP_ENV__Role,	// SOAP 1.2
         struct SOAP_ENV__Detail	*SOAP_ENV__Detail,	// SOAP 1.2
 	void
-);
+);*/
 
 /* End of wsa5.h */
diff --git a/gsoap/typemap.dat b/gsoap/typemap.dat
index 7a56385..8e776c6 100644
--- a/gsoap/typemap.dat
+++ b/gsoap/typemap.dat
@@ -225,7 +225,7 @@
 #       mapping xsd:duration to string (in milliseconds precision).
 #       Then rerun wsdl2h and also compile and link custom/duration.c.
 #
-# xsd__duration = #import "custom/duration.h" | xsd__duration
+ xsd__duration = #import "custom/duration.h" | xsd__duration
 
 #       Uncomment the line below to use C++11 std::chrono::nanoseconds for
 #       xsd:duration instead of mapping xsd:duration to string.
-- 
1.9.1

