From 2c367a1cd7257f2dc575a255c8c2c47bff865399 Mon Sep 17 00:00:00 2001
From: "Cheah, Vincent Beng Keat" <vincent.beng.keat.cheah@intel.com>
Date: Fri, 11 Aug 2023 16:02:13 +0800
Subject: [PATCH 1/7] Fix rdrm NV12 and P010 render for MTL

JIRA: NEXGRAPHIC-75
Tested command: ./sample_decode h264 -vaapi -i test.h264 -rdrm
---
 CHANGELOG.md                                  |  1 +
 tools/legacy/sample_common/CMakeLists.txt     | 10 ++++
 .../sample_common/include/vaapi_utils.h       |  4 ++
 .../sample_common/include/vaapi_utils_drm.h   | 10 ++++
 .../legacy/sample_common/src/vaapi_utils.cpp  |  4 +-
 .../sample_common/src/vaapi_utils_drm.cpp     | 53 ++++++++++++++-----
 6 files changed, 67 insertions(+), 15 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index a4c8eb1..ea4b2c4 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -9,6 +9,7 @@ programming interface for video decoding, encoding, and processing to build
 portable media pipelines on CPUs, GPUs, and other accelerators.
 
 ## [Unreleased]
+### Fixed - rdrm NV12 and P010 render for MTL
 
 ## [2023.3.1] - 2023-07-21
 
diff --git a/tools/legacy/sample_common/CMakeLists.txt b/tools/legacy/sample_common/CMakeLists.txt
index f95d52a..fa861c5 100644
--- a/tools/legacy/sample_common/CMakeLists.txt
+++ b/tools/legacy/sample_common/CMakeLists.txt
@@ -176,6 +176,16 @@ if(CMAKE_SYSTEM_NAME MATCHES Linux)
           target_include_directories(${TARGET}
                                      PUBLIC ${PKG_LIBDRM_INCLUDE_DIRS})
 
+          if("${PKG_LIBDRM_VERSION}" VERSION_GREATER 2.4.113)
+            target_compile_definitions(${TARGET}
+                                       PUBLIC DRM_LINUX_MODIFIER_TILED4_SUPPORT)
+          else()
+            message(
+              STATUS
+                "libdrm version ${PKG_LIBDRM_VERSION} does not support I915_FORMAT_MOD_4_TILED"
+            )
+          endif()
+
           if("${PKG_LIBDRM_VERSION}" VERSION_GREATER 2.4.104)
             target_compile_definitions(${TARGET} PUBLIC DRM_LINUX_HDR_SUPPORT)
           else()
diff --git a/tools/legacy/sample_common/include/vaapi_utils.h b/tools/legacy/sample_common/include/vaapi_utils.h
index 2598883..aaa719d 100644
--- a/tools/legacy/sample_common/include/vaapi_utils.h
+++ b/tools/legacy/sample_common/include/vaapi_utils.h
@@ -221,6 +221,8 @@ public:
                                         uint32_t src_y,
                                         uint32_t src_w,
                                         uint32_t src_h);
+    typedef int (*drmGetDevices2_type)(uint32_t flags, drmDevicePtr devices[], int max_devices);
+    typedef void (*drmFreeDevices_type)(drmDevicePtr devices[], int count);
 
     DRM_Proxy();
     ~DRM_Proxy();
@@ -260,6 +262,8 @@ public:
     __DECLARE(drmSetMaster);
     __DECLARE(drmDropMaster);
     __DECLARE(drmModeSetPlane);
+    __DECLARE(drmGetDevices2);
+    __DECLARE(drmFreeDevices);
         #undef __DECLARE
 };
 
diff --git a/tools/legacy/sample_common/include/vaapi_utils_drm.h b/tools/legacy/sample_common/include/vaapi_utils_drm.h
index e2c89b6..e412231 100644
--- a/tools/legacy/sample_common/include/vaapi_utils_drm.h
+++ b/tools/legacy/sample_common/include/vaapi_utils_drm.h
@@ -58,6 +58,10 @@ enum drm_static_metadata_id { DRM_STATIC_METADATA_TYPE1 = 0 };
 #define EDID_CEA_EXT_TAG_STATIC_METADATA  0x6
 #define EDID_CEA_EXT_TAG_DYNAMIC_METADATA 0x7
 
+#define IS_GEN13(devId)                                                                  \
+    ((devId) == 0x7D40 || (devId) == 0x7D60 || (devId) == 0x7D45 || (devId) == 0x7D55 || \
+     (devId) == 0x7DD5)
+
 #if defined(LIBVA_DRM_SUPPORT)
 
     #include <va/va_drm.h>
@@ -130,6 +134,11 @@ private:
     int drmSendHdrMetaData(mfxExtMasteringDisplayColourVolume* displayColor,
                            mfxExtContentLightLevelInfo* contentLight,
                            bool enableHDR);
+    struct freeDevices {
+        void operator()(drmDevicePtr* p) {
+            free(p);
+        }
+    };
 
     const MfxLoader::DRM_Proxy m_drmlib;
     const MfxLoader::DrmIntel_Proxy m_drmintellib;
@@ -152,6 +161,7 @@ private:
     #if defined(DRM_LINUX_HDR_SUPPORT)
     struct drmHdrMetaData m_hdrMetaData;
     #endif
+    bool m_bRequiredTiled4;
     mfxFrameSurface1* m_pCurrentRenderTargetSurface;
 
 private:
diff --git a/tools/legacy/sample_common/src/vaapi_utils.cpp b/tools/legacy/sample_common/src/vaapi_utils.cpp
index d7aba0a..69ca315 100644
--- a/tools/legacy/sample_common/src/vaapi_utils.cpp
+++ b/tools/legacy/sample_common/src/vaapi_utils.cpp
@@ -123,7 +123,9 @@ DRM_Proxy::DRM_Proxy()
           SIMPLE_LOADER_FUNCTION(drmModeSetCrtc),
           SIMPLE_LOADER_FUNCTION(drmSetMaster),
           SIMPLE_LOADER_FUNCTION(drmDropMaster),
-          SIMPLE_LOADER_FUNCTION(drmModeSetPlane) {}
+          SIMPLE_LOADER_FUNCTION(drmModeSetPlane),
+          SIMPLE_LOADER_FUNCTION(drmGetDevices2),
+          SIMPLE_LOADER_FUNCTION(drmFreeDevices) {}
 
 DrmIntel_Proxy::~DrmIntel_Proxy() {}
 
diff --git a/tools/legacy/sample_common/src/vaapi_utils_drm.cpp b/tools/legacy/sample_common/src/vaapi_utils_drm.cpp
index 2abf372..8755da1 100644
--- a/tools/legacy/sample_common/src/vaapi_utils_drm.cpp
+++ b/tools/legacy/sample_common/src/vaapi_utils_drm.cpp
@@ -188,8 +188,26 @@ drmRenderer::drmRenderer(int fd, mfxI32 monitorType)
     #if defined(DRM_LINUX_HDR_SUPPORT)
           m_hdrMetaData({}),
     #endif
+          m_bRequiredTiled4(false),
           m_pCurrentRenderTargetSurface(NULL) {
     bool res = false;
+    int ret  = -1, maxDevices;
+
+    maxDevices = m_drmlib.drmGetDevices2(0, NULL, 0);
+    if (maxDevices < 0)
+        throw std::invalid_argument("No devices found");
+
+    auto devices = std::unique_ptr<drmDevicePtr, freeDevices>{ reinterpret_cast<drmDevicePtr*>(
+        malloc(sizeof(drmDevicePtr) * maxDevices)) };
+
+    ret = m_drmlib.drmGetDevices2(0, devices.get(), maxDevices);
+    if (ret < 0)
+        throw std::invalid_argument("drmGetDevices2() returned error");
+
+    if (IS_GEN13((devices.get())[0]->deviceinfo.pci->device_id))
+        m_bRequiredTiled4 = true;
+
+    m_drmlib.drmFreeDevices(devices.get(), maxDevices);
 
     if (m_drmlib.drmSetClientCap(m_fd, DRM_CLIENT_CAP_ATOMIC, 1) != 0)
         throw std::invalid_argument("Failed to set atomic");
@@ -745,29 +763,36 @@ void* drmRenderer::acquire(mfxMemId mid) {
             || VA_FOURCC_P010 == vmid->m_fourcc
     #endif
         ) {
-            struct drm_i915_gem_set_tiling set_tiling;
-
             pixel_format = DRM_FORMAT_NV12;
     #if defined(DRM_LINUX_P010_SUPPORT)
             if (VA_FOURCC_P010 == vmid->m_fourcc)
                 pixel_format = DRM_FORMAT_P010;
     #endif
-
-            memset(&set_tiling, 0, sizeof(set_tiling));
-            set_tiling.handle      = flink_open.handle;
-            set_tiling.tiling_mode = I915_TILING_Y;
-            set_tiling.stride      = vmid->m_image.pitches[0];
-            ret = m_drmlib.drmIoctl(m_fd, DRM_IOCTL_I915_GEM_SET_TILING, &set_tiling);
-            if (ret) {
-                printf("DRM_IOCTL_I915_GEM_SET_TILING Failed ret = %d\n", ret);
-                return NULL;
-            }
-
             handles[1]   = flink_open.handle;
             pitches[1]   = vmid->m_image.pitches[1];
             offsets[1]   = vmid->m_image.offsets[1];
             modifiers[0] = modifiers[1] = I915_FORMAT_MOD_Y_TILED;
-            flags = 2; // DRM_MODE_FB_MODIFIERS   (1<<1) /* enables ->modifer[]
+            flags                       = DRM_MODE_FB_MODIFIERS;
+
+            if (m_bRequiredTiled4) {
+    #if defined(DRM_LINUX_MODIFIER_TILED4_SUPPORT)
+                modifiers[0] = modifiers[1] = I915_FORMAT_MOD_4_TILED;
+    #endif
+            }
+            else {
+                modifiers[0] = modifiers[1] = I915_FORMAT_MOD_Y_TILED;
+
+                struct drm_i915_gem_set_tiling set_tiling;
+                memset(&set_tiling, 0, sizeof(set_tiling));
+                set_tiling.handle      = flink_open.handle;
+                set_tiling.tiling_mode = I915_TILING_Y;
+                set_tiling.stride      = vmid->m_image.pitches[0];
+                ret = m_drmlib.drmIoctl(m_fd, DRM_IOCTL_I915_GEM_SET_TILING, &set_tiling);
+                if (ret) {
+                    printf("DRM_IOCTL_I915_GEM_SET_TILING Failed ret = %d\n", ret);
+                    return NULL;
+                }
+            }
         }
         else {
             pixel_format = DRM_FORMAT_XRGB8888;
-- 
2.40.1

