From c7f59e1c7fbf39b1a72e9208bebe85c08874c345 Mon Sep 17 00:00:00 2001
From: Lim Siew Hoon <siew.hoon.lim@intel.com>
Date: Thu, 3 Nov 2022 15:45:36 +0800
Subject: [PATCH] Revert "mos: check fences availability for tiling operations"

This reverts commit a1ef0c76f93cacd87cbcf7e069d1c0fca31eec71.

Signed-off-by: Teng, Jin Chung <jin.chung.teng@intel.com>
Signed-off-by: Lim Siew Hoon <siew.hoon.lim@intel.com>
---
 .../linux/common/os/i915/mos_bufmgr.c         | 44 +++++++------------
 1 file changed, 16 insertions(+), 28 deletions(-)

diff --git a/media_softlet/linux/common/os/i915/mos_bufmgr.c b/media_softlet/linux/common/os/i915/mos_bufmgr.c
index f609bf3a6..d25f85905 100644
--- a/media_softlet/linux/common/os/i915/mos_bufmgr.c
+++ b/media_softlet/linux/common/os/i915/mos_bufmgr.c
@@ -153,7 +153,6 @@ struct mos_bufmgr_gem {
     unsigned int no_exec : 1;
     unsigned int has_vebox : 1;
     unsigned int has_ext_mmap : 1;
-    unsigned int has_fence_reg : 1;
     unsigned int has_lmem : 1;
     unsigned int has_mmap_offset : 1;
     bool fenced_relocs;
@@ -1481,16 +1480,14 @@ mos_bo_gem_create_from_name(struct mos_bufmgr *bufmgr,
     bo_gem->use_48b_address_range = bufmgr_gem->bufmgr.bo_use_48b_address_range ? true : false;
 
     memclear(get_tiling);
-    if (bufmgr_gem->has_fence_reg) {
-        get_tiling.handle = bo_gem->gem_handle;
-        ret = drmIoctl(bufmgr_gem->fd,
-               DRM_IOCTL_I915_GEM_GET_TILING,
-               &get_tiling);
-        if (ret != 0) {
-            mos_gem_bo_unreference(&bo_gem->bo);
-            pthread_mutex_unlock(&bufmgr_gem->lock);
-            return nullptr;
-        }
+    get_tiling.handle = bo_gem->gem_handle;
+    ret = drmIoctl(bufmgr_gem->fd,
+           DRM_IOCTL_I915_GEM_GET_TILING,
+           &get_tiling);
+    if (ret != 0) {
+      mos_gem_bo_unreference(&bo_gem->bo);
+      pthread_mutex_unlock(&bufmgr_gem->lock);
+      return nullptr;
     }
     bo_gem->tiling_mode = get_tiling.tiling_mode;
     bo_gem->swizzle_mode = get_tiling.swizzle_mode;
@@ -3581,9 +3578,6 @@ mos_gem_bo_set_tiling_internal(struct mos_linux_bo *bo,
     struct drm_i915_gem_set_tiling set_tiling;
     int ret;
 
-    if (!bufmgr_gem->has_fence_reg)
-        return 0;
-
     if (bo_gem->global_name == 0 &&
         tiling_mode == bo_gem->tiling_mode &&
         stride == bo_gem->stride)
@@ -3752,16 +3746,14 @@ mos_bo_gem_create_from_prime(struct mos_bufmgr *bufmgr, int prime_fd, int size)
     pthread_mutex_unlock(&bufmgr_gem->lock);
 
     memclear(get_tiling);
-    if(bufmgr_gem->has_fence_reg) {
-        get_tiling.handle = bo_gem->gem_handle;
-        ret = drmIoctl(bufmgr_gem->fd,
-               DRM_IOCTL_I915_GEM_GET_TILING,
-               &get_tiling);
-        if (ret != 0) {
-            MOS_DBG("create_from_prime: failed to get tiling: %s\n", strerror(errno));
-            mos_gem_bo_unreference(&bo_gem->bo);
-            return nullptr;
-        }
+    get_tiling.handle = bo_gem->gem_handle;
+    ret = drmIoctl(bufmgr_gem->fd,
+           DRM_IOCTL_I915_GEM_GET_TILING,
+           &get_tiling);
+    if (ret != 0) {
+      MOS_DBG("create_from_prime: failed to get tiling: %s\n", strerror(errno));
+      mos_gem_bo_unreference(&bo_gem->bo);
+      return nullptr;
     }
     bo_gem->tiling_mode = get_tiling.tiling_mode;
     bo_gem->swizzle_mode = get_tiling.swizzle_mode;
@@ -4748,10 +4740,6 @@ mos_bufmgr_gem_init(int fd, int batch_size)
     ret = drmIoctl(bufmgr_gem->fd, DRM_IOCTL_I915_GETPARAM, &gp);
     bufmgr_gem->has_ext_mmap = (ret == 0) & (*gp.value > 0);
 
-    gp.param = I915_PARAM_NUM_FENCES_AVAIL;
-    ret = drmIoctl(bufmgr_gem->fd, DRM_IOCTL_I915_GETPARAM, &gp);
-    bufmgr_gem->has_fence_reg = (ret == 0) & (*gp.value > 0);
-
     gp.param = I915_PARAM_HAS_EXEC_SOFTPIN;
     ret = drmIoctl(bufmgr_gem->fd, DRM_IOCTL_I915_GETPARAM, &gp);
     if (ret == 0 && *gp.value > 0) {
-- 
2.37.2

