From 45965df1216c82794f2a846de73510baae776a82 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?V=C3=ADctor=20Manuel=20J=C3=A1quez=20Leal?=
 <vjaquez@igalia.com>
Date: Sat, 9 Sep 2023 15:12:39 +0200
Subject: [PATCH] vaallocator: don't update size in info for single plane
 images

Don't update info's size with the VA image reported data size for single plane
images, since drivers might allocate bigger space than the strictly required to
store the image, but when we dump the buffer as is (using filesink, for example)
the produced stream is corrupted. For multi-plane images video meta is required
to read/write them.

We updated info's size because gstreamer-vaapi did it too, but the reason to
update it there was for uploading and rendering surfaces (commit c698a015).

Furthermore, this patch adds an error message if the allocated data size for the
image by the driver is lesser than the expected because it would be a buggy
driver.

Fixes: #2959
Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/5308>

backport from upstream:
https://gitlab.freedesktop.org/gstreamer/gstreamer/-/commit/4c5e17308e4857cef621836f2c34f0d7983e3258
---
 gst-libs/gst/va/gstvaallocator.c | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/gst-libs/gst/va/gstvaallocator.c b/gst-libs/gst/va/gstvaallocator.c
index e89495334..2d0ad408a 100644
--- a/gst-libs/gst/va/gstvaallocator.c
+++ b/gst-libs/gst/va/gstvaallocator.c
@@ -1300,7 +1300,11 @@ _update_info (GstVideoInfo * info, const VAImage * image)
     GST_VIDEO_INFO_PLANE_STRIDE (info, i) = image->pitches[i];
   }
 
-  GST_VIDEO_INFO_SIZE (info) = image->data_size;
+  /* Don't update image size for one planed images since drivers might add extra
+   * bits which will drop wrong raw images with filesink, for example. Multiple
+   * plane images require video meta */
+  if (image->num_planes > 1)
+    GST_VIDEO_INFO_SIZE (info) = image->data_size;
 }
 
 static inline gboolean
@@ -1348,6 +1352,11 @@ _update_image_info (GstVaAllocator * va_allocator)
 
 done:
   _update_info (&va_allocator->info, &image);
+  if (GST_VIDEO_INFO_SIZE (&va_allocator->info) > image.data_size) {
+    GST_WARNING_OBJECT (va_allocator,
+        "image size is lesser than the minimum required");
+  }
+
   va_destroy_image (va_allocator->display, image.image_id);
   va_destroy_surfaces (va_allocator->display, &surface, 1);
 
-- 
2.40.1

