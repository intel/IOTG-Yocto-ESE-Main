From c8ed7929f552dc839e50a721efc989941b35500a Mon Sep 17 00:00:00 2001
From: He Junyan <junyan.he@intel.com>
Date: Sun, 11 Jun 2023 20:17:19 +0800
Subject: [PATCH 180/205] va: baseenc: Extend the create_output_buffer() to
 accept prefix data

---
 sys/va/gstvabaseenc.c | 11 +++++++++--
 sys/va/gstvabaseenc.h |  4 +++-
 sys/va/gstvah264enc.c |  3 ++-
 sys/va/gstvah265enc.c |  3 ++-
 sys/va/gstvavp9enc.c  |  3 ++-
 5 files changed, 18 insertions(+), 6 deletions(-)

diff --git a/sys/va/gstvabaseenc.c b/sys/va/gstvabaseenc.c
index 1008d117c..362ea205c 100644
--- a/sys/va/gstvabaseenc.c
+++ b/sys/va/gstvabaseenc.c
@@ -320,7 +320,8 @@ invalid_buffer:
 
 GstBuffer *
 gst_va_base_enc_create_output_buffer (GstVaBaseEnc * base,
-    GstVaEncodePicture * picture)
+    GstVaEncodePicture * picture, const guint8 * prefix_data,
+    guint prefix_data_len)
 {
   guint coded_size;
   goffset offset;
@@ -349,7 +350,7 @@ gst_va_base_enc_create_output_buffer (GstVaBaseEnc * base,
     coded_size += seg->size;
 
   buf = gst_video_encoder_allocate_output_buffer (GST_VIDEO_ENCODER_CAST (base),
-      coded_size);
+      coded_size + prefix_data_len);
   if (!buf) {
     va_unmap_buffer (base->display, picture->coded_buffer);
     GST_ERROR_OBJECT (base, "Failed to allocate output buffer, size %d",
@@ -358,6 +359,12 @@ gst_va_base_enc_create_output_buffer (GstVaBaseEnc * base,
   }
 
   offset = 0;
+  if (prefix_data) {
+    g_assert (prefix_data_len > 0);
+    gst_buffer_fill (buf, offset, prefix_data, prefix_data_len);
+    offset += prefix_data_len;
+  }
+
   for (seg = seg_list; seg; seg = seg->next) {
     gsize write_size;
 
diff --git a/sys/va/gstvabaseenc.h b/sys/va/gstvabaseenc.h
index 0007a13e2..05b72ec02 100644
--- a/sys/va/gstvabaseenc.h
+++ b/sys/va/gstvabaseenc.h
@@ -134,7 +134,9 @@ void                  gst_va_base_enc_add_codec_tag       (GstVaBaseEnc * base,
                                                            const gchar * codec_name);
 void                  gst_va_base_enc_reset_state         (GstVaBaseEnc * base);
 GstBuffer *           gst_va_base_enc_create_output_buffer (GstVaBaseEnc * base,
-                                                            GstVaEncodePicture * picture);
+                                                            GstVaEncodePicture * picture,
+                                                            const guint8 * prefix_data,
+                                                            guint prefix_data_len);
 gint                  gst_va_base_enc_copy_output_data    (GstVaBaseEnc * base,
                                                            GstVaEncodePicture * picture,
                                                            guint8 * data,
diff --git a/sys/va/gstvah264enc.c b/sys/va/gstvah264enc.c
index 70bba6547..82b127142 100644
--- a/sys/va/gstvah264enc.c
+++ b/sys/va/gstvah264enc.c
@@ -3056,7 +3056,8 @@ gst_va_h264_enc_prepare_output (GstVaBaseEnc * base,
   base->output_frame_count++;
   frame->duration = base->frame_duration;
 
-  buf = gst_va_base_enc_create_output_buffer (base, frame_enc->picture);
+  buf = gst_va_base_enc_create_output_buffer (base,
+      frame_enc->picture, NULL, 0);
   if (!buf) {
     GST_ERROR_OBJECT (base, "Failed to create output buffer");
     return FALSE;
diff --git a/sys/va/gstvah265enc.c b/sys/va/gstvah265enc.c
index 5b9dfb41a..fc1d2adef 100644
--- a/sys/va/gstvah265enc.c
+++ b/sys/va/gstvah265enc.c
@@ -4629,7 +4629,8 @@ gst_va_h265_enc_prepare_output (GstVaBaseEnc * base,
   base->output_frame_count++;
   frame->duration = base->frame_duration;
 
-  buf = gst_va_base_enc_create_output_buffer (base, frame_enc->picture);
+  buf = gst_va_base_enc_create_output_buffer (base,
+      frame_enc->picture, NULL, 0);
   if (!buf) {
     GST_ERROR_OBJECT (base, "Failed to create output buffer");
     return FALSE;
diff --git a/sys/va/gstvavp9enc.c b/sys/va/gstvavp9enc.c
index 80da43a9d..5b8e3f3b6 100644
--- a/sys/va/gstvavp9enc.c
+++ b/sys/va/gstvavp9enc.c
@@ -2600,7 +2600,8 @@ gst_va_vp9_enc_prepare_output (GstVaBaseEnc * base,
     if (self->frames_in_super_num > 0) {
       buf = _vp9_create_super_frame_output_buffer (self, frame);
     } else {
-      buf = gst_va_base_enc_create_output_buffer (base, frame_enc->picture);
+      buf = gst_va_base_enc_create_output_buffer (base,
+          frame_enc->picture, NULL, 0);
     }
     if (!buf) {
       GST_ERROR_OBJECT (base, "Failed to create output buffer%s",
-- 
2.40.1

