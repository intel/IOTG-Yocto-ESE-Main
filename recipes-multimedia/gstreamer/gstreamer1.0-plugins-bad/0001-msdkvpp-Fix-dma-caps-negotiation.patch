From 58cfa1e194981467e81495fc0ee134f5cce3b027 Mon Sep 17 00:00:00 2001
From: Mengkejiergeli Ba <mengkejiergeli.ba@intel.com>
Date: Wed, 20 Dec 2023 13:25:51 +0800
Subject: [PATCH] msdkvpp: Fix dma caps negotiation

When query if downstream supports dma caps, we need to correctly set
vpp src caps with dma specific field, like drm-format...
---
 sys/msdk/gstmsdkvpp.c | 71 ++++++++++++++++++++++++++++++++-----------
 1 file changed, 53 insertions(+), 18 deletions(-)

diff --git a/sys/msdk/gstmsdkvpp.c b/sys/msdk/gstmsdkvpp.c
index f4b7650b3..fb0c71e56 100644
--- a/sys/msdk/gstmsdkvpp.c
+++ b/sys/msdk/gstmsdkvpp.c
@@ -63,6 +63,7 @@
 #include <libdrm/drm_fourcc.h>
 #include "gstmsdkallocator_libva.h"
 #include <gst/va/gstvaallocator.h>
+#include <gst/va/gstvavideoformat.h>
 #else
 #include <gst/d3d11/gstd3d11.h>
 #endif
@@ -1487,7 +1488,7 @@ error_no_video_info:
 
 static gboolean
 pad_accept_memory (GstMsdkVPP * thiz, const gchar * mem_type,
-    GstPadDirection direction, GstCaps * filter)
+    GstPadDirection direction, GstCaps ** filter)
 {
   gboolean ret = FALSE;
   GstCaps *caps, *out_caps;
@@ -1501,19 +1502,44 @@ pad_accept_memory (GstMsdkVPP * thiz, const gchar * mem_type,
 
   /* make a copy of filter caps since we need to alter the structure
    * by adding dmabuf-capsfeatures */
-  caps = gst_caps_copy (filter);
+  caps = gst_caps_make_writable (*filter);
   gst_caps_set_features (caps, 0, gst_caps_features_from_string (mem_type));
 
+#ifndef _WIN32
+  /* In dma caps case, we need to set drm-format when having a raw caps */
+  if (gst_msdkcaps_has_feature (caps, GST_CAPS_FEATURE_MEMORY_DMABUF)) {
+    GstStructure *s = gst_caps_get_structure (caps, 0);
+    if (!gst_structure_has_field (s, "drm-format") &&
+        gst_structure_has_field (s, "format")) {
+      const gchar *fmt_str = gst_structure_get_string (s, "format");
+      GstVideoFormat fmt = gst_video_format_from_string (fmt_str);
+      GstVaDisplay *display =
+          (GstVaDisplay *) gst_msdk_context_get_va_display (thiz->context);
+
+      thiz->src_modifier = gst_va_dmabuf_get_modifier_for_format (display, fmt,
+          VA_SURFACE_ATTRIB_USAGE_HINT_GENERIC);
+      guint32 fourcc = gst_va_drm_fourcc_from_video_format (fmt);
+      gchar *drm_str =
+          gst_video_dma_drm_fourcc_to_string (fourcc, thiz->src_modifier);
+      gst_msdkcaps_set_strings (caps, mem_type, "drm-format", drm_str);
+      gst_caps_set_simple (caps, "format", G_TYPE_STRING, "DMA_DRM", NULL);
+
+      gst_object_unref (display);
+    }
+  }
+#endif
+
   out_caps = gst_pad_peer_query_caps (pad, caps);
 
   if (!out_caps || gst_caps_is_empty (out_caps))
     goto done;
 
-  if (gst_msdkcaps_has_feature (out_caps, mem_type))
-    ret = TRUE;
+  if (gst_msdkcaps_has_feature (out_caps, mem_type)) {
+    *filter = caps;
+     ret = TRUE;
+  }
+
 done:
-  if (caps)
-    gst_caps_unref (caps);
   if (out_caps)
     gst_caps_unref (out_caps);
   return ret;
@@ -1524,7 +1550,8 @@ gst_msdkvpp_fixate_caps (GstBaseTransform * trans,
     GstPadDirection direction, GstCaps * caps, GstCaps * othercaps)
 {
   GstMsdkVPP *thiz = GST_MSDKVPP (trans);
-  GstCaps *result = NULL;
+  GstCaps *result = NULL, *out_caps;
+  gboolean accept_raw_caps = TRUE;
 
   if (direction == GST_PAD_SRC) {
     result = gst_caps_fixate (othercaps);
@@ -1540,6 +1567,7 @@ gst_msdkvpp_fixate_caps (GstBaseTransform * trans,
     result = gst_msdkvpp_fixate_srccaps (thiz, caps, othercaps);
   }
 
+  out_caps = gst_caps_copy (result);
   GST_DEBUG_OBJECT (trans, "fixated to %" GST_PTR_FORMAT, result);
 
   /* We let msdkvpp srcpad first query if downstream has va memory type caps,
@@ -1547,23 +1575,30 @@ gst_msdkvpp_fixate_caps (GstBaseTransform * trans,
    */
 #ifndef _WIN32
   if (pad_accept_memory (thiz, GST_CAPS_FEATURE_MEMORY_VA,
-          direction == GST_PAD_SRC ? GST_PAD_SINK : GST_PAD_SRC, result)) {
-    gst_caps_set_features (result, 0,
-        gst_caps_features_new (GST_CAPS_FEATURE_MEMORY_VA, NULL));
-  } else if (pad_accept_memory (thiz, GST_CAPS_FEATURE_MEMORY_DMABUF,
-          direction == GST_PAD_SRC ? GST_PAD_SINK : GST_PAD_SRC, result)) {
-    gst_caps_set_features (result, 0,
-        gst_caps_features_new (GST_CAPS_FEATURE_MEMORY_DMABUF, NULL));
+          direction == GST_PAD_SRC ? GST_PAD_SINK : GST_PAD_SRC, &result)) {
+    GST_INFO_OBJECT (thiz, "VPP src pad accepts VAMemory caps");
+    accept_raw_caps = FALSE;
+   } else if (pad_accept_memory (thiz, GST_CAPS_FEATURE_MEMORY_DMABUF,
+          direction == GST_PAD_SRC ? GST_PAD_SINK : GST_PAD_SRC, &result)) {
+    GST_INFO_OBJECT (thiz, "VPP src pad accepts DMABuf caps");
+    accept_raw_caps = FALSE;
   }
 #else
   if (pad_accept_memory (thiz, GST_CAPS_FEATURE_MEMORY_D3D11_MEMORY,
-          direction == GST_PAD_SRC ? GST_PAD_SINK : GST_PAD_SRC, result)) {
-    gst_caps_set_features (result, 0,
-        gst_caps_features_new (GST_CAPS_FEATURE_MEMORY_D3D11_MEMORY, NULL));
+          direction == GST_PAD_SRC ? GST_PAD_SINK : GST_PAD_SRC, &result)) {
+    GST_INFO_OBJECT (thiz, "VPP src pad accepts D3D11Memory caps");
+    accept_raw_caps = FALSE;
   }
 #endif
 
-  return result;
+  if (accept_raw_caps) {
+    GST_INFO_OBJECT (thiz, "VPP src pad accepts raw caps");
+    gst_caps_unref (result);
+    return out_caps;
+  } else {
+    gst_caps_unref (out_caps);
+    return result;
+  }
 }
 
 /* Generic code for now, requires changes in future when we
-- 
2.29.0

