From 1cfa5bc2a6b6748f81ed06941e4588fc5f853573 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim-Philipp=20M=C3=BCller?= <tim@centricular.com>
Date: Wed, 15 Mar 2023 18:51:58 +0000
Subject: [PATCH 15/77] gst-plugins-base: re-indent with GNU indent 2.2.12

Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/4182>
---
 ext/theora/gsttheoraenc.c                     |   6 +-
 gst-libs/gst/allocators/gstdrmdumb.c          |   4 +-
 gst-libs/gst/audio/audio-channel-mixer.c      |  24 ++--
 gst-libs/gst/audio/gstaudiodecoder.c          |   2 +-
 gst-libs/gst/fft/kiss_fft_f32.c               |   2 +-
 gst-libs/gst/fft/kiss_fft_f64.c               |   2 +-
 gst-libs/gst/fft/kiss_fft_s16.c               |   2 +-
 gst-libs/gst/fft/kiss_fft_s32.c               |   2 +-
 gst-libs/gst/fft/kiss_fftr_f32.c              |   2 +-
 gst-libs/gst/fft/kiss_fftr_f64.c              |   2 +-
 gst-libs/gst/fft/kiss_fftr_s16.c              |   2 +-
 gst-libs/gst/fft/kiss_fftr_s32.c              |   2 +-
 gst-libs/gst/gl/gstglfilter.c                 |   3 +-
 .../gst/gl/wayland/gstgldisplay_wayland.c     |   2 +-
 gst-libs/gst/pbutils/missing-plugins.c        |  10 +-
 gst-libs/gst/riff/riff-media.c                |  36 +++---
 gst-libs/gst/rtsp/gstrtspurl.c                |  20 +--
 gst-libs/gst/tag/gsttagdemux.c                |   2 +-
 gst-libs/gst/tag/id3v2.c                      | 120 +++++++++---------
 gst-libs/gst/tag/mklicensestables.c           |  38 +++---
 gst-libs/gst/video/video-multiview.c          |  26 ++--
 .../gst/video/video-overlay-composition.c     |   8 +-
 gst-libs/gst/video/video-scaler.c             |   2 +-
 gst-libs/gst/video/videoorientation.c         |   1 -
 gst/encoding/gstencodebasebin.c               |   4 +-
 gst/playback/gstplaybackutils.c               |   2 +-
 gst/playback/gstplaysink.c                    |   6 +-
 gst/playback/gstplaysinkconvertbin.c          |   1 -
 gst/playback/gstsubtitleoverlay.c             |   5 +-
 gst/subparse/gstsubparse.c                    |   2 -
 gst/subparse/gstsubparseelement.c             |   1 -
 gst/typefind/gsttypefindfunctions.c           |  40 +++---
 tests/check/elements/audioconvert.c           |  11 +-
 tests/check/elements/opus.c                   |  41 +++---
 tests/check/elements/videotestsrc.c           |  34 ++---
 tests/check/libs/gstglmemory.c                |   9 +-
 tests/check/libs/tag.c                        |  18 +--
 tests/examples/gl/gtk/3dvideo/mviewwidget.c   |  12 +-
 38 files changed, 253 insertions(+), 253 deletions(-)

diff --git a/ext/theora/gsttheoraenc.c b/ext/theora/gsttheoraenc.c
index c5314011..d7f07a09 100644
--- a/ext/theora/gsttheoraenc.c
+++ b/ext/theora/gsttheoraenc.c
@@ -499,9 +499,9 @@ theora_enc_get_supported_formats (void)
     const char *fourcc;
   } formats[] = {
     {
-    TH_PF_420, "I420"}, {
-    TH_PF_422, "Y42B"}, {
-    TH_PF_444, "Y444"}
+        TH_PF_420, "I420"}, {
+        TH_PF_422, "Y42B"}, {
+        TH_PF_444, "Y444"}
   };
   GString *string = NULL;
   guint i;
diff --git a/gst-libs/gst/allocators/gstdrmdumb.c b/gst-libs/gst/allocators/gstdrmdumb.c
index c5c48342..86ea387a 100644
--- a/gst-libs/gst/allocators/gstdrmdumb.c
+++ b/gst-libs/gst/allocators/gstdrmdumb.c
@@ -607,7 +607,7 @@ check_cap (GstDRMDumbAllocator * alloc)
   if (ret)
     GST_WARNING_OBJECT (alloc, "could not get dumb buffer capability");
 
-  return ! !(has_dumb);
+  return !!(has_dumb);
 }
 #endif
 
@@ -747,7 +747,7 @@ gst_drm_dumb_allocator_has_prime_export (GstAllocator * base_alloc)
   if (ret)
     GST_WARNING_OBJECT (alloc, "could not get prime capability");
 
-  return ! !(has_prime & DRM_PRIME_CAP_EXPORT);
+  return !!(has_prime & DRM_PRIME_CAP_EXPORT);
 
 #else
   return FALSE;
diff --git a/gst-libs/gst/audio/audio-channel-mixer.c b/gst-libs/gst/audio/audio-channel-mixer.c
index 7186b6a6..62ce6fb1 100644
--- a/gst-libs/gst/audio/audio-channel-mixer.c
+++ b/gst-libs/gst/audio/audio-channel-mixer.c
@@ -146,21 +146,21 @@ gst_audio_channel_mixer_fill_compatible (gfloat ** matrix, gint in_channels,
     GstAudioChannelPosition pos2[1];
   } conv[] = {
     /* front: mono <-> stereo */
-    { {
-    GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT,
+    {{
+                GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT,
             GST_AUDIO_CHANNEL_POSITION_FRONT_RIGHT}, {
-    GST_AUDIO_CHANNEL_POSITION_MONO}},
-        /* front center: 2 <-> 1 */
-    { {
-    GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT_OF_CENTER,
+            GST_AUDIO_CHANNEL_POSITION_MONO}},
+    /* front center: 2 <-> 1 */
+    {{
+                GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT_OF_CENTER,
             GST_AUDIO_CHANNEL_POSITION_FRONT_RIGHT_OF_CENTER}, {
-    GST_AUDIO_CHANNEL_POSITION_FRONT_CENTER}},
-        /* rear: 2 <-> 1 */
-    { {
-    GST_AUDIO_CHANNEL_POSITION_REAR_LEFT,
+            GST_AUDIO_CHANNEL_POSITION_FRONT_CENTER}},
+    /* rear: 2 <-> 1 */
+    {{
+                GST_AUDIO_CHANNEL_POSITION_REAR_LEFT,
             GST_AUDIO_CHANNEL_POSITION_REAR_RIGHT}, {
-    GST_AUDIO_CHANNEL_POSITION_REAR_CENTER}}, { {
-    GST_AUDIO_CHANNEL_POSITION_INVALID}}
+            GST_AUDIO_CHANNEL_POSITION_REAR_CENTER}}, {{
+            GST_AUDIO_CHANNEL_POSITION_INVALID}}
   };
   gint c;
 
diff --git a/gst-libs/gst/audio/gstaudiodecoder.c b/gst-libs/gst/audio/gstaudiodecoder.c
index 9396a9ff..acb6314e 100644
--- a/gst-libs/gst/audio/gstaudiodecoder.c
+++ b/gst-libs/gst/audio/gstaudiodecoder.c
@@ -957,7 +957,7 @@ gst_audio_decoder_setup (GstAudioDecoder * dec)
   gst_query_unref (query);
 
   /* normalize to bool */
-  dec->priv->agg = ! !res;
+  dec->priv->agg = !!res;
 }
 
 static GstFlowReturn
diff --git a/gst-libs/gst/fft/kiss_fft_f32.c b/gst-libs/gst/fft/kiss_fft_f32.c
index 092713e1..a79a89e5 100644
--- a/gst-libs/gst/fft/kiss_fft_f32.c
+++ b/gst-libs/gst/fft/kiss_fft_f32.c
@@ -358,7 +358,7 @@ kf_factor (int n, int *facbuf)
  * It can be freed with free(), rather than a kiss_fft_f32-specific function.
  * */
 kiss_fft_f32_cfg
-kiss_fft_f32_alloc (int nfft, int inverse_fft, void *mem, size_t * lenmem)
+kiss_fft_f32_alloc (int nfft, int inverse_fft, void *mem, size_t *lenmem)
 {
   kiss_fft_f32_cfg st = NULL;
   size_t memneeded = sizeof (struct kiss_fft_f32_state)
diff --git a/gst-libs/gst/fft/kiss_fft_f64.c b/gst-libs/gst/fft/kiss_fft_f64.c
index 4b3fa00f..a2e66a95 100644
--- a/gst-libs/gst/fft/kiss_fft_f64.c
+++ b/gst-libs/gst/fft/kiss_fft_f64.c
@@ -358,7 +358,7 @@ kf_factor (int n, int *facbuf)
  * It can be freed with free(), rather than a kiss_fft_f64-specific function.
  * */
 kiss_fft_f64_cfg
-kiss_fft_f64_alloc (int nfft, int inverse_fft, void *mem, size_t * lenmem)
+kiss_fft_f64_alloc (int nfft, int inverse_fft, void *mem, size_t *lenmem)
 {
   kiss_fft_f64_cfg st = NULL;
   size_t memneeded = sizeof (struct kiss_fft_f64_state)
diff --git a/gst-libs/gst/fft/kiss_fft_s16.c b/gst-libs/gst/fft/kiss_fft_s16.c
index a110bbd9..a063eaf7 100644
--- a/gst-libs/gst/fft/kiss_fft_s16.c
+++ b/gst-libs/gst/fft/kiss_fft_s16.c
@@ -358,7 +358,7 @@ kf_factor (int n, int *facbuf)
  * It can be freed with free(), rather than a kiss_fft_s16-specific function.
  * */
 kiss_fft_s16_cfg
-kiss_fft_s16_alloc (int nfft, int inverse_fft, void *mem, size_t * lenmem)
+kiss_fft_s16_alloc (int nfft, int inverse_fft, void *mem, size_t *lenmem)
 {
   kiss_fft_s16_cfg st = NULL;
   size_t memneeded = sizeof (struct kiss_fft_s16_state)
diff --git a/gst-libs/gst/fft/kiss_fft_s32.c b/gst-libs/gst/fft/kiss_fft_s32.c
index 7e5a0e17..665ac650 100644
--- a/gst-libs/gst/fft/kiss_fft_s32.c
+++ b/gst-libs/gst/fft/kiss_fft_s32.c
@@ -358,7 +358,7 @@ kf_factor (int n, int *facbuf)
  * It can be freed with free(), rather than a kiss_fft_s32-specific function.
  * */
 kiss_fft_s32_cfg
-kiss_fft_s32_alloc (int nfft, int inverse_fft, void *mem, size_t * lenmem)
+kiss_fft_s32_alloc (int nfft, int inverse_fft, void *mem, size_t *lenmem)
 {
   kiss_fft_s32_cfg st = NULL;
   size_t memneeded = sizeof (struct kiss_fft_s32_state)
diff --git a/gst-libs/gst/fft/kiss_fftr_f32.c b/gst-libs/gst/fft/kiss_fftr_f32.c
index 6ef981cf..9032a80f 100644
--- a/gst-libs/gst/fft/kiss_fftr_f32.c
+++ b/gst-libs/gst/fft/kiss_fftr_f32.c
@@ -20,7 +20,7 @@ struct kiss_fftr_f32_state
 };
 
 kiss_fftr_f32_cfg
-kiss_fftr_f32_alloc (int nfft, int inverse_fft, void *mem, size_t * lenmem)
+kiss_fftr_f32_alloc (int nfft, int inverse_fft, void *mem, size_t *lenmem)
 {
   int i;
   kiss_fftr_f32_cfg st = NULL;
diff --git a/gst-libs/gst/fft/kiss_fftr_f64.c b/gst-libs/gst/fft/kiss_fftr_f64.c
index 7ab406e4..698761f7 100644
--- a/gst-libs/gst/fft/kiss_fftr_f64.c
+++ b/gst-libs/gst/fft/kiss_fftr_f64.c
@@ -20,7 +20,7 @@ struct kiss_fftr_f64_state
 };
 
 kiss_fftr_f64_cfg
-kiss_fftr_f64_alloc (int nfft, int inverse_fft, void *mem, size_t * lenmem)
+kiss_fftr_f64_alloc (int nfft, int inverse_fft, void *mem, size_t *lenmem)
 {
   int i;
   kiss_fftr_f64_cfg st = NULL;
diff --git a/gst-libs/gst/fft/kiss_fftr_s16.c b/gst-libs/gst/fft/kiss_fftr_s16.c
index 00d1aa3b..298a9a8b 100644
--- a/gst-libs/gst/fft/kiss_fftr_s16.c
+++ b/gst-libs/gst/fft/kiss_fftr_s16.c
@@ -20,7 +20,7 @@ struct kiss_fftr_s16_state
 };
 
 kiss_fftr_s16_cfg
-kiss_fftr_s16_alloc (int nfft, int inverse_fft, void *mem, size_t * lenmem)
+kiss_fftr_s16_alloc (int nfft, int inverse_fft, void *mem, size_t *lenmem)
 {
   int i;
   kiss_fftr_s16_cfg st = NULL;
diff --git a/gst-libs/gst/fft/kiss_fftr_s32.c b/gst-libs/gst/fft/kiss_fftr_s32.c
index f4c9fc7f..63cff685 100644
--- a/gst-libs/gst/fft/kiss_fftr_s32.c
+++ b/gst-libs/gst/fft/kiss_fftr_s32.c
@@ -20,7 +20,7 @@ struct kiss_fftr_s32_state
 };
 
 kiss_fftr_s32_cfg
-kiss_fftr_s32_alloc (int nfft, int inverse_fft, void *mem, size_t * lenmem)
+kiss_fftr_s32_alloc (int nfft, int inverse_fft, void *mem, size_t *lenmem)
 {
   int i;
   kiss_fftr_s32_cfg st = NULL;
diff --git a/gst-libs/gst/gl/gstglfilter.c b/gst-libs/gst/gl/gstglfilter.c
index 54bb0507..a4566414 100644
--- a/gst-libs/gst/gl/gstglfilter.c
+++ b/gst-libs/gst/gl/gstglfilter.c
@@ -244,7 +244,8 @@ gst_gl_filter_fixate_caps (GstBaseTransform * bt,
   GstStructure *ins, *outs;
   const GValue *from_par, *to_par;
   GValue fpar = { 0, }, tpar = {
-  0,};
+    0,
+  };
 
   othercaps = gst_caps_make_writable (othercaps);
   othercaps = gst_caps_truncate (othercaps);
diff --git a/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c b/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c
index 29493244..b9b10cec 100644
--- a/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c
+++ b/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c
@@ -128,7 +128,7 @@ gst_gl_display_wayland_new (const gchar * name)
  * Returns: (transfer full): a new #GstGLDisplayWayland
  */
 GstGLDisplayWayland *
-gst_gl_display_wayland_new_with_display (struct wl_display * display)
+gst_gl_display_wayland_new_with_display (struct wl_display *display)
 {
   GstGLDisplayWayland *ret;
 
diff --git a/gst-libs/gst/pbutils/missing-plugins.c b/gst-libs/gst/pbutils/missing-plugins.c
index 69330b93..c0ddbf95 100644
--- a/gst-libs/gst/pbutils/missing-plugins.c
+++ b/gst-libs/gst/pbutils/missing-plugins.c
@@ -121,11 +121,11 @@ static const struct
   const gchar type_string[12];
 } missing_type_mapping[] = {
   {
-  GST_MISSING_TYPE_URISOURCE, "urisource"}, {
-  GST_MISSING_TYPE_URISINK, "urisink"}, {
-  GST_MISSING_TYPE_ELEMENT, "element"}, {
-  GST_MISSING_TYPE_DECODER, "decoder"}, {
-  GST_MISSING_TYPE_ENCODER, "encoder"}
+      GST_MISSING_TYPE_URISOURCE, "urisource"}, {
+      GST_MISSING_TYPE_URISINK, "urisink"}, {
+      GST_MISSING_TYPE_ELEMENT, "element"}, {
+      GST_MISSING_TYPE_DECODER, "decoder"}, {
+      GST_MISSING_TYPE_ENCODER, "encoder"}
 };
 
 static GstMissingType
diff --git a/gst-libs/gst/riff/riff-media.c b/gst-libs/gst/riff/riff-media.c
index 74f99d6a..77996eb5 100644
--- a/gst-libs/gst/riff/riff-media.c
+++ b/gst-libs/gst/riff/riff-media.c
@@ -1038,24 +1038,24 @@ static const struct
   const GstAudioChannelPosition gst_pos;
 } layout_mapping[] = {
   {
-  0x00001, GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT}, {
-  0x00002, GST_AUDIO_CHANNEL_POSITION_FRONT_RIGHT}, {
-  0x00004, GST_AUDIO_CHANNEL_POSITION_FRONT_CENTER}, {
-  0x00008, GST_AUDIO_CHANNEL_POSITION_LFE1}, {
-  0x00010, GST_AUDIO_CHANNEL_POSITION_REAR_LEFT}, {
-  0x00020, GST_AUDIO_CHANNEL_POSITION_REAR_RIGHT}, {
-  0x00040, GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT_OF_CENTER}, {
-  0x00080, GST_AUDIO_CHANNEL_POSITION_FRONT_RIGHT_OF_CENTER}, {
-  0x00100, GST_AUDIO_CHANNEL_POSITION_REAR_CENTER}, {
-  0x00200, GST_AUDIO_CHANNEL_POSITION_SIDE_LEFT}, {
-  0x00400, GST_AUDIO_CHANNEL_POSITION_SIDE_RIGHT}, {
-  0x00800, GST_AUDIO_CHANNEL_POSITION_TOP_CENTER}, {
-  0x01000, GST_AUDIO_CHANNEL_POSITION_TOP_FRONT_LEFT}, {
-  0x02000, GST_AUDIO_CHANNEL_POSITION_TOP_FRONT_CENTER}, {
-  0x04000, GST_AUDIO_CHANNEL_POSITION_TOP_FRONT_RIGHT}, {
-  0x08000, GST_AUDIO_CHANNEL_POSITION_TOP_REAR_LEFT}, {
-  0x10000, GST_AUDIO_CHANNEL_POSITION_TOP_REAR_CENTER}, {
-  0x20000, GST_AUDIO_CHANNEL_POSITION_TOP_REAR_RIGHT}
+      0x00001, GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT}, {
+      0x00002, GST_AUDIO_CHANNEL_POSITION_FRONT_RIGHT}, {
+      0x00004, GST_AUDIO_CHANNEL_POSITION_FRONT_CENTER}, {
+      0x00008, GST_AUDIO_CHANNEL_POSITION_LFE1}, {
+      0x00010, GST_AUDIO_CHANNEL_POSITION_REAR_LEFT}, {
+      0x00020, GST_AUDIO_CHANNEL_POSITION_REAR_RIGHT}, {
+      0x00040, GST_AUDIO_CHANNEL_POSITION_FRONT_LEFT_OF_CENTER}, {
+      0x00080, GST_AUDIO_CHANNEL_POSITION_FRONT_RIGHT_OF_CENTER}, {
+      0x00100, GST_AUDIO_CHANNEL_POSITION_REAR_CENTER}, {
+      0x00200, GST_AUDIO_CHANNEL_POSITION_SIDE_LEFT}, {
+      0x00400, GST_AUDIO_CHANNEL_POSITION_SIDE_RIGHT}, {
+      0x00800, GST_AUDIO_CHANNEL_POSITION_TOP_CENTER}, {
+      0x01000, GST_AUDIO_CHANNEL_POSITION_TOP_FRONT_LEFT}, {
+      0x02000, GST_AUDIO_CHANNEL_POSITION_TOP_FRONT_CENTER}, {
+      0x04000, GST_AUDIO_CHANNEL_POSITION_TOP_FRONT_RIGHT}, {
+      0x08000, GST_AUDIO_CHANNEL_POSITION_TOP_REAR_LEFT}, {
+      0x10000, GST_AUDIO_CHANNEL_POSITION_TOP_REAR_CENTER}, {
+      0x20000, GST_AUDIO_CHANNEL_POSITION_TOP_REAR_RIGHT}
 };
 
 #define MAX_CHANNEL_POSITIONS G_N_ELEMENTS (layout_mapping)
diff --git a/gst-libs/gst/rtsp/gstrtspurl.c b/gst-libs/gst/rtsp/gstrtspurl.c
index 815f19b5..d8b62569 100644
--- a/gst-libs/gst/rtsp/gstrtspurl.c
+++ b/gst-libs/gst/rtsp/gstrtspurl.c
@@ -67,19 +67,19 @@ static const struct
   GstRTSPLowerTrans transports;
 } rtsp_schemes_map[] = {
   {
-  "rtsp", GST_RTSP_LOWER_TRANS_TCP | GST_RTSP_LOWER_TRANS_UDP |
+      "rtsp", GST_RTSP_LOWER_TRANS_TCP | GST_RTSP_LOWER_TRANS_UDP |
         GST_RTSP_LOWER_TRANS_UDP_MCAST}, {
-  "rtspu", GST_RTSP_LOWER_TRANS_UDP | GST_RTSP_LOWER_TRANS_UDP_MCAST}, {
-  "rtspt", GST_RTSP_LOWER_TRANS_TCP}, {
-  "rtsph", GST_RTSP_LOWER_TRANS_HTTP | GST_RTSP_LOWER_TRANS_TCP}, {
-  "rtsps", GST_RTSP_LOWER_TRANS_TCP | GST_RTSP_LOWER_TRANS_UDP |
+      "rtspu", GST_RTSP_LOWER_TRANS_UDP | GST_RTSP_LOWER_TRANS_UDP_MCAST}, {
+      "rtspt", GST_RTSP_LOWER_TRANS_TCP}, {
+      "rtsph", GST_RTSP_LOWER_TRANS_HTTP | GST_RTSP_LOWER_TRANS_TCP}, {
+      "rtsps", GST_RTSP_LOWER_TRANS_TCP | GST_RTSP_LOWER_TRANS_UDP |
         GST_RTSP_LOWER_TRANS_UDP_MCAST | GST_RTSP_LOWER_TRANS_TLS}, {
-  "rtspsu",
-        GST_RTSP_LOWER_TRANS_UDP | GST_RTSP_LOWER_TRANS_UDP_MCAST |
+        "rtspsu",
+      GST_RTSP_LOWER_TRANS_UDP | GST_RTSP_LOWER_TRANS_UDP_MCAST |
         GST_RTSP_LOWER_TRANS_TLS}, {
-  "rtspst", GST_RTSP_LOWER_TRANS_TCP | GST_RTSP_LOWER_TRANS_TLS}, {
-  "rtspsh",
-        GST_RTSP_LOWER_TRANS_HTTP | GST_RTSP_LOWER_TRANS_TCP |
+      "rtspst", GST_RTSP_LOWER_TRANS_TCP | GST_RTSP_LOWER_TRANS_TLS}, {
+        "rtspsh",
+      GST_RTSP_LOWER_TRANS_HTTP | GST_RTSP_LOWER_TRANS_TCP |
         GST_RTSP_LOWER_TRANS_TLS}
 };
 
diff --git a/gst-libs/gst/tag/gsttagdemux.c b/gst-libs/gst/tag/gsttagdemux.c
index 173da373..ef0ff90b 100644
--- a/gst-libs/gst/tag/gsttagdemux.c
+++ b/gst-libs/gst/tag/gsttagdemux.c
@@ -892,7 +892,7 @@ gst_tag_demux_seek_pull (GstTagDemux * tagdemux, GstEvent * event)
   gst_segment_do_seek (&seeksegment, rate, format, flags,
       start_type, start, stop_type, stop, NULL);
 
-  flush = ! !(flags & GST_SEEK_FLAG_FLUSH);
+  flush = !!(flags & GST_SEEK_FLAG_FLUSH);
 
   GST_DEBUG_OBJECT (tagdemux, "New segment %" GST_SEGMENT_FORMAT, &seeksegment);
 
diff --git a/gst-libs/gst/tag/id3v2.c b/gst-libs/gst/tag/id3v2.c
index c295ac89..7db2cb7e 100644
--- a/gst-libs/gst/tag/id3v2.c
+++ b/gst-libs/gst/tag/id3v2.c
@@ -313,67 +313,67 @@ static const struct ID3v2FrameIDConvert
 } frame_id_conversions[] = {
   /* 2.3.x frames */
   {
-  "TORY", "TDOR"}, {
-  "TYER", "TDRC"},
-      /* 2.2.x frames */
+      "TORY", "TDOR"}, {
+      "TYER", "TDRC"},
+  /* 2.2.x frames */
   {
-  "BUF", "RBUF"}, {
-  "CNT", "PCNT"}, {
-  "COM", "COMM"}, {
-  "CRA", "AENC"}, {
-  "ETC", "ETCO"}, {
-  "GEO", "GEOB"}, {
-  "IPL", "TIPL"}, {
-  "MCI", "MCDI"}, {
-  "MLL", "MLLT"}, {
-  "PIC", "APIC"}, {
-  "POP", "POPM"}, {
-  "REV", "RVRB"}, {
-  "SLT", "SYLT"}, {
-  "STC", "SYTC"}, {
-  "TAL", "TALB"}, {
-  "TBP", "TBPM"}, {
-  "TCM", "TCOM"}, {
-  "TCO", "TCON"}, {
-  "TCR", "TCOP"}, {
-  "TDA", "TDAT"}, {             /* obsolete, but we need to parse it anyway */
-  "TDY", "TDLY"}, {
-  "TEN", "TENC"}, {
-  "TFT", "TFLT"}, {
-  "TKE", "TKEY"}, {
-  "TLA", "TLAN"}, {
-  "TLE", "TLEN"}, {
-  "TMT", "TMED"}, {
-  "TOA", "TOAL"}, {
-  "TOF", "TOFN"}, {
-  "TOL", "TOLY"}, {
-  "TOR", "TDOR"}, {
-  "TOT", "TOAL"}, {
-  "TP1", "TPE1"}, {
-  "TP2", "TPE2"}, {
-  "TP3", "TPE3"}, {
-  "TP4", "TPE4"}, {
-  "TPA", "TPOS"}, {
-  "TPB", "TPUB"}, {
-  "TRC", "TSRC"}, {
-  "TRD", "TDRC"}, {
-  "TRK", "TRCK"}, {
-  "TSS", "TSSE"}, {
-  "TT1", "TIT1"}, {
-  "TT2", "TIT2"}, {
-  "TT3", "TIT3"}, {
-  "TXT", "TOLY"}, {
-  "TXX", "TXXX"}, {
-  "TYE", "TDRC"}, {
-  "UFI", "UFID"}, {
-  "ULT", "USLT"}, {
-  "WAF", "WOAF"}, {
-  "WAR", "WOAR"}, {
-  "WAS", "WOAS"}, {
-  "WCM", "WCOM"}, {
-  "WCP", "WCOP"}, {
-  "WPB", "WPUB"}, {
-  "WXX", "WXXX"}
+      "BUF", "RBUF"}, {
+      "CNT", "PCNT"}, {
+      "COM", "COMM"}, {
+      "CRA", "AENC"}, {
+      "ETC", "ETCO"}, {
+      "GEO", "GEOB"}, {
+      "IPL", "TIPL"}, {
+      "MCI", "MCDI"}, {
+      "MLL", "MLLT"}, {
+      "PIC", "APIC"}, {
+      "POP", "POPM"}, {
+      "REV", "RVRB"}, {
+      "SLT", "SYLT"}, {
+      "STC", "SYTC"}, {
+      "TAL", "TALB"}, {
+      "TBP", "TBPM"}, {
+      "TCM", "TCOM"}, {
+      "TCO", "TCON"}, {
+      "TCR", "TCOP"}, {
+      "TDA", "TDAT"}, {         /* obsolete, but we need to parse it anyway */
+      "TDY", "TDLY"}, {
+      "TEN", "TENC"}, {
+      "TFT", "TFLT"}, {
+      "TKE", "TKEY"}, {
+      "TLA", "TLAN"}, {
+      "TLE", "TLEN"}, {
+      "TMT", "TMED"}, {
+      "TOA", "TOAL"}, {
+      "TOF", "TOFN"}, {
+      "TOL", "TOLY"}, {
+      "TOR", "TDOR"}, {
+      "TOT", "TOAL"}, {
+      "TP1", "TPE1"}, {
+      "TP2", "TPE2"}, {
+      "TP3", "TPE3"}, {
+      "TP4", "TPE4"}, {
+      "TPA", "TPOS"}, {
+      "TPB", "TPUB"}, {
+      "TRC", "TSRC"}, {
+      "TRD", "TDRC"}, {
+      "TRK", "TRCK"}, {
+      "TSS", "TSSE"}, {
+      "TT1", "TIT1"}, {
+      "TT2", "TIT2"}, {
+      "TT3", "TIT3"}, {
+      "TXT", "TOLY"}, {
+      "TXX", "TXXX"}, {
+      "TYE", "TDRC"}, {
+      "UFI", "UFID"}, {
+      "ULT", "USLT"}, {
+      "WAF", "WOAF"}, {
+      "WAR", "WOAR"}, {
+      "WAS", "WOAS"}, {
+      "WCM", "WCOM"}, {
+      "WCP", "WCOP"}, {
+      "WPB", "WPUB"}, {
+      "WXX", "WXXX"}
 };
 
 static gboolean
diff --git a/gst-libs/gst/tag/mklicensestables.c b/gst-libs/gst/tag/mklicensestables.c
index 6b73dfc9..447064d1 100644
--- a/gst-libs/gst/tag/mklicensestables.c
+++ b/gst-libs/gst/tag/mklicensestables.c
@@ -166,26 +166,26 @@ static const struct
   const Tag element_tag;
 } tag_map[] = {
   {
-  "cc:License", "rdf:about", TAG_CC_LICENSE}, {
-  "cc:deprecatedOn", "rdf:datatype", TAG_CC_DEPRECATED_ON}, {
-  "cc:jurisdiction", "rdf:resource", TAG_CC_JURISDICTION}, {
-  "cc:legalcode", "rdf:resource", TAG_CC_LEGALCODE}, {
-  "cc:prohibits", "rdf:resource", TAG_CC_PROHIBITS}, {
-  "cc:requires", "rdf:resource", TAG_CC_REQUIRES}, {
-  "cc:permits", "rdf:resource", TAG_CC_PERMITS}, {
-  "dc:creator", "rdf:resource", TAG_DC_CREATOR}, {
-  "dc:source", "rdf:resource", TAG_DC_SOURCE}, {
-  "dc:title", "xml:lang", TAG_DC_TITLE}, {
-  "dc:description", "xml:lang", TAG_DC_DESCRIPTION}, {
-  "dcq:hasVersion", NULL, TAG_DCQ_HAS_VERSION}, {
-  "dcq:isReplacedBy", "rdf:resource", TAG_DCQ_IS_REPLACED_BY}, {
-  "rdf:RDF", NULL, TAG_RDF_RDF}, {
-  "rdf:Description", "rdf:about", TAG_RDF_DESCRIPTION},
-      /* these three are just for by-nc-nd_2.0_jp_.rdf */
+      "cc:License", "rdf:about", TAG_CC_LICENSE}, {
+      "cc:deprecatedOn", "rdf:datatype", TAG_CC_DEPRECATED_ON}, {
+      "cc:jurisdiction", "rdf:resource", TAG_CC_JURISDICTION}, {
+      "cc:legalcode", "rdf:resource", TAG_CC_LEGALCODE}, {
+      "cc:prohibits", "rdf:resource", TAG_CC_PROHIBITS}, {
+      "cc:requires", "rdf:resource", TAG_CC_REQUIRES}, {
+      "cc:permits", "rdf:resource", TAG_CC_PERMITS}, {
+      "dc:creator", "rdf:resource", TAG_DC_CREATOR}, {
+      "dc:source", "rdf:resource", TAG_DC_SOURCE}, {
+      "dc:title", "xml:lang", TAG_DC_TITLE}, {
+      "dc:description", "xml:lang", TAG_DC_DESCRIPTION}, {
+      "dcq:hasVersion", NULL, TAG_DCQ_HAS_VERSION}, {
+      "dcq:isReplacedBy", "rdf:resource", TAG_DCQ_IS_REPLACED_BY}, {
+      "rdf:RDF", NULL, TAG_RDF_RDF}, {
+      "rdf:Description", "rdf:about", TAG_RDF_DESCRIPTION},
+  /* these three are just for by-nc-nd_2.0_jp_.rdf */
   {
-  "dc:isBasedOn", "rdf:resource", TAG_DC_SOURCE}, {
-  "dc:hasVersion", NULL, TAG_DCQ_HAS_VERSION}, {
-  "dc:isReplacedBy", "rdf:resource", TAG_DCQ_IS_REPLACED_BY}
+      "dc:isBasedOn", "rdf:resource", TAG_DC_SOURCE}, {
+      "dc:hasVersion", NULL, TAG_DCQ_HAS_VERSION}, {
+      "dc:isReplacedBy", "rdf:resource", TAG_DCQ_IS_REPLACED_BY}
 };
 
 static void
diff --git a/gst-libs/gst/video/video-multiview.c b/gst-libs/gst/video/video-multiview.c
index 854bf0f8..0881be0d 100644
--- a/gst-libs/gst/video/video-multiview.c
+++ b/gst-libs/gst/video/video-multiview.c
@@ -46,19 +46,19 @@ static const struct mview_map_t
   GstVideoMultiviewMode mode;
 } gst_multiview_modes[] = {
   {
-  "mono", GST_VIDEO_MULTIVIEW_MODE_MONO}, {
-  "left", GST_VIDEO_MULTIVIEW_MODE_LEFT}, {
-  "right", GST_VIDEO_MULTIVIEW_MODE_RIGHT}, {
-  "side-by-side", GST_VIDEO_MULTIVIEW_MODE_SIDE_BY_SIDE}, {
-  "side-by-side-quincunx", GST_VIDEO_MULTIVIEW_MODE_SIDE_BY_SIDE_QUINCUNX}, {
-  "column-interleaved", GST_VIDEO_MULTIVIEW_MODE_COLUMN_INTERLEAVED}, {
-  "row-interleaved", GST_VIDEO_MULTIVIEW_MODE_ROW_INTERLEAVED}, {
-  "top-bottom", GST_VIDEO_MULTIVIEW_MODE_TOP_BOTTOM}, {
-  "checkerboard", GST_VIDEO_MULTIVIEW_MODE_CHECKERBOARD}, {
-  "frame-by-frame", GST_VIDEO_MULTIVIEW_MODE_FRAME_BY_FRAME}, {
-  "multiview-frame-by-frame",
-        GST_VIDEO_MULTIVIEW_MODE_MULTIVIEW_FRAME_BY_FRAME}, {
-  "separated", GST_VIDEO_MULTIVIEW_MODE_SEPARATED}
+      "mono", GST_VIDEO_MULTIVIEW_MODE_MONO}, {
+      "left", GST_VIDEO_MULTIVIEW_MODE_LEFT}, {
+      "right", GST_VIDEO_MULTIVIEW_MODE_RIGHT}, {
+      "side-by-side", GST_VIDEO_MULTIVIEW_MODE_SIDE_BY_SIDE}, {
+      "side-by-side-quincunx", GST_VIDEO_MULTIVIEW_MODE_SIDE_BY_SIDE_QUINCUNX}, {
+      "column-interleaved", GST_VIDEO_MULTIVIEW_MODE_COLUMN_INTERLEAVED}, {
+      "row-interleaved", GST_VIDEO_MULTIVIEW_MODE_ROW_INTERLEAVED}, {
+      "top-bottom", GST_VIDEO_MULTIVIEW_MODE_TOP_BOTTOM}, {
+      "checkerboard", GST_VIDEO_MULTIVIEW_MODE_CHECKERBOARD}, {
+      "frame-by-frame", GST_VIDEO_MULTIVIEW_MODE_FRAME_BY_FRAME}, {
+        "multiview-frame-by-frame",
+      GST_VIDEO_MULTIVIEW_MODE_MULTIVIEW_FRAME_BY_FRAME}, {
+      "separated", GST_VIDEO_MULTIVIEW_MODE_SEPARATED}
 };
 
 /**
diff --git a/gst-libs/gst/video/video-overlay-composition.c b/gst-libs/gst/video/video-overlay-composition.c
index a02556b3..c6cfc8b4 100644
--- a/gst-libs/gst/video/video-overlay-composition.c
+++ b/gst-libs/gst/video/video-overlay-composition.c
@@ -1053,7 +1053,7 @@ gst_video_overlay_rectangle_apply_global_alpha (GstVideoOverlayRectangle * rect,
     for (j = 0; j < w; j++) {
       guint8 na = (guint8) (*src * global_alpha);
 
-      if (! !(rect->flags & GST_VIDEO_OVERLAY_FORMAT_FLAG_PREMULTIPLIED_ALPHA)) {
+      if (!!(rect->flags & GST_VIDEO_OVERLAY_FORMAT_FLAG_PREMULTIPLIED_ALPHA)) {
         dst[argb_r] =
             (guint8) ((double) (dst[argb_r] * 255) / (double) dst[argb_a]) *
             na / 255;
@@ -1201,11 +1201,11 @@ gst_video_overlay_rectangle_get_pixels_raw_internal (GstVideoOverlayRectangle *
   format = GST_VIDEO_INFO_FORMAT (&rectangle->info);
 
   apply_global_alpha =
-      (! !(rectangle->flags & GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA)
+      (!!(rectangle->flags & GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA)
       && !(flags & GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA));
   revert_global_alpha =
-      (! !(rectangle->flags & GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA)
-      && ! !(flags & GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA));
+      (!!(rectangle->flags & GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA)
+      && !!(flags & GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA));
 
   /* This assumes we don't need to adjust the format */
   if (wanted_width == width &&
diff --git a/gst-libs/gst/video/video-scaler.c b/gst-libs/gst/video/video-scaler.c
index b612a23e..ba556f17 100644
--- a/gst-libs/gst/video/video-scaler.c
+++ b/gst-libs/gst/video/video-scaler.c
@@ -1466,7 +1466,7 @@ gst_video_scaler_2d (GstVideoScaler * hscale, GstVideoScaler * vscale,
           &bits))
     goto no_func;
 
-  interlaced = vscale && ! !(vscale->flags & GST_VIDEO_SCALER_FLAG_INTERLACED);
+  interlaced = vscale && !!(vscale->flags & GST_VIDEO_SCALER_FLAG_INTERLACED);
 
 #define LINE(s,ss,i)  ((guint8 *)(s) + ((i) * (ss)))
 #define TMP_LINE(s,i) ((guint8 *)((s)->tmpline1) + (i) * (sizeof (gint32) * width * n_elems))
diff --git a/gst-libs/gst/video/videoorientation.c b/gst-libs/gst/video/videoorientation.c
index 31c75e7c..6f6f5bad 100644
--- a/gst-libs/gst/video/videoorientation.c
+++ b/gst-libs/gst/video/videoorientation.c
@@ -41,7 +41,6 @@
  * (aka making up for GstImplementsInterface removal) (probably yes) */
 
 G_DEFINE_INTERFACE (GstVideoOrientation, gst_video_orientation, 0)
-
      static void
          gst_video_orientation_default_init (GstVideoOrientationInterface *
     iface)
diff --git a/gst/encoding/gstencodebasebin.c b/gst/encoding/gstencodebasebin.c
index b500dfda..828d3b40 100644
--- a/gst/encoding/gstencodebasebin.c
+++ b/gst/encoding/gstencodebasebin.c
@@ -1321,7 +1321,7 @@ setup_smart_encoder (GstEncodeBaseBin * ebin, GstEncodingProfile * sprof,
       gst_caps_make_writable (gst_encoding_profile_get_format (sprof));
   GstCaps *tmpcaps = gst_pad_query_caps (srcpad, NULL);
   const gboolean native_video =
-      ! !(ebin->flags & GST_ENCODEBIN_FLAG_NO_VIDEO_CONVERSION);
+      !!(ebin->flags & GST_ENCODEBIN_FLAG_NO_VIDEO_CONVERSION);
   GstStructure *structure = gst_caps_get_structure (format, 0);
 
   /* Check if stream format is compatible */
@@ -1730,7 +1730,7 @@ _create_stream_group (GstEncodeBaseBin * ebin, GstEncodingProfile * sprof,
   /* FIXME : Once we have properties for specific converters, use those */
   if (GST_IS_ENCODING_VIDEO_PROFILE (sprof)) {
     const gboolean native_video =
-        ! !(ebin->flags & GST_ENCODEBIN_FLAG_NO_VIDEO_CONVERSION);
+        !!(ebin->flags & GST_ENCODEBIN_FLAG_NO_VIDEO_CONVERSION);
     GstElement *cspace = NULL, *scale, *vrate, *cspace2 = NULL;
 
     GST_LOG ("Adding conversion elements for video stream");
diff --git a/gst/playback/gstplaybackutils.c b/gst/playback/gstplaybackutils.c
index 00becf0e..996245a8 100644
--- a/gst/playback/gstplaybackutils.c
+++ b/gst/playback/gstplaybackutils.c
@@ -75,7 +75,7 @@ gst_playback_utils_get_n_common_capsfeatures (GstElementFactory * fact1,
       gst_static_caps_get (&raw_video_caps);
   GstStructure *raw_struct = gst_caps_get_structure (raw_caps, 0);
   gboolean native_raw =
-      (isaudioelement ? ! !(flags & GST_PLAY_FLAG_NATIVE_AUDIO) : ! !(flags &
+      (isaudioelement ? !!(flags & GST_PLAY_FLAG_NATIVE_AUDIO) : !!(flags &
           GST_PLAY_FLAG_NATIVE_VIDEO));
 
   fact1_tmpl_caps = get_template_caps (fact1, GST_PAD_SRC);
diff --git a/gst/playback/gstplaysink.c b/gst/playback/gstplaysink.c
index b1701cd5..f4d7a0f8 100644
--- a/gst/playback/gstplaysink.c
+++ b/gst/playback/gstplaysink.c
@@ -3049,7 +3049,7 @@ setup_audio_chain (GstPlaySink * playsink, gboolean raw)
   } else if (chain->conv) {
     /* no volume, we need to add a volume element when we can */
     g_object_set (chain->conv, "use-volume",
-        ! !(playsink->flags & GST_PLAY_FLAG_SOFT_VOLUME), NULL);
+        !!(playsink->flags & GST_PLAY_FLAG_SOFT_VOLUME), NULL);
     GST_DEBUG_OBJECT (playsink, "the sink has no volume property");
 
     if (playsink->flags & GST_PLAY_FLAG_SOFT_VOLUME) {
@@ -4474,14 +4474,14 @@ caps_notify_cb (GstPad * pad, GParamSpec * unused, GstPlaySink * playsink)
 
   if (pad == playsink->audio_pad) {
     raw = is_raw_pad (pad);
-    reconfigure = (! !playsink->audio_pad_raw != ! !raw)
+    reconfigure = (!!playsink->audio_pad_raw != !!raw)
         && playsink->audiochain;
     GST_DEBUG_OBJECT (pad,
         "Audio caps changed: raw %d reconfigure %d caps %" GST_PTR_FORMAT, raw,
         reconfigure, caps);
   } else if (pad == playsink->video_pad) {
     raw = is_raw_pad (pad);
-    reconfigure = (! !playsink->video_pad_raw != ! !raw)
+    reconfigure = (!!playsink->video_pad_raw != !!raw)
         && playsink->videochain;
     GST_DEBUG_OBJECT (pad,
         "Video caps changed: raw %d reconfigure %d caps %" GST_PTR_FORMAT, raw,
diff --git a/gst/playback/gstplaysinkconvertbin.c b/gst/playback/gstplaysinkconvertbin.c
index 1e5b2e2d..4dd23223 100644
--- a/gst/playback/gstplaysinkconvertbin.c
+++ b/gst/playback/gstplaysinkconvertbin.c
@@ -117,7 +117,6 @@ gst_play_sink_convert_bin_add_identity (GstPlaySinkConvertBin * self)
         (_("Missing element '%s' - check your GStreamer installation."),
             "identity"), (self->audio ?
             "audio rendering might fail" : "video rendering might fail")
-
         );
   } else {
     g_object_set (self->identity, "silent", TRUE, "signal-handoffs", FALSE,
diff --git a/gst/playback/gstsubtitleoverlay.c b/gst/playback/gstsubtitleoverlay.c
index 53189e52..cc2ee06c 100644
--- a/gst/playback/gstsubtitleoverlay.c
+++ b/gst/playback/gstsubtitleoverlay.c
@@ -750,8 +750,9 @@ _get_silent_property (GstElement * element, gboolean * invert)
     const gchar *name;
     gboolean invert;
   } properties[] = { {
-  "silent", FALSE}, {
-  "enable", TRUE}};
+      "silent", FALSE}, {
+      "enable", TRUE}
+  };
   guint i;
 
   for (i = 0; i < G_N_ELEMENTS (properties); i++) {
diff --git a/gst/subparse/gstsubparse.c b/gst/subparse/gstsubparse.c
index 1867dee6..2b69595e 100644
--- a/gst/subparse/gstsubparse.c
+++ b/gst/subparse/gstsubparse.c
@@ -95,8 +95,6 @@ G_DEFINE_TYPE (GstSubParse, gst_sub_parse, GST_TYPE_ELEMENT);
 
 GST_ELEMENT_REGISTER_DEFINE_WITH_CODE (subparse, "subparse",
     GST_RANK_PRIMARY, GST_TYPE_SUBPARSE, sub_parse_element_init (plugin))
-
-
      static void gst_sub_parse_dispose (GObject * object)
 {
   GstSubParse *subparse = GST_SUBPARSE (object);
diff --git a/gst/subparse/gstsubparseelement.c b/gst/subparse/gstsubparseelement.c
index 72af4994..81dc4e19 100644
--- a/gst/subparse/gstsubparseelement.c
+++ b/gst/subparse/gstsubparseelement.c
@@ -409,7 +409,6 @@ gst_sub_parse_type_find (GstTypeFind * tf, gpointer private)
 GST_TYPE_FIND_REGISTER_DEFINE (subparse, "subparse_typefind", GST_RANK_MARGINAL,
     gst_sub_parse_type_find, "srt,sub,mpsub,mdvd,smi,txt,dks,vtt", SUB_CAPS,
     NULL, NULL)
-
     gboolean
 sub_parse_element_init (GstPlugin * plugin)
 {
diff --git a/gst/typefind/gsttypefindfunctions.c b/gst/typefind/gsttypefindfunctions.c
index 079de11f..7fd39016 100644
--- a/gst/typefind/gsttypefindfunctions.c
+++ b/gst/typefind/gsttypefindfunctions.c
@@ -1047,8 +1047,8 @@ flac_type_find (GstTypeFind * tf, gpointer unused)
     return;
   }
 
-/* disabled because it happily typefinds /dev/urandom as audio/x-flac, and
- * because I yet have to see header-less flac in the wild */
+  /* disabled because it happily typefinds /dev/urandom as audio/x-flac, and
+   * because I yet have to see header-less flac in the wild */
 #if 0
   /* flac without headers (subset format) */
   /* 64K should be enough */
@@ -4864,24 +4864,24 @@ ogganx_type_find (GstTypeFind * tf, gpointer private)
     GstOggStreamType stream_type;
   } markers[] = {
     {
-    "\001vorbis", 7, OGG_AUDIO}, {
-    "\200theora", 7, OGG_VIDEO}, {
-    "fLaC", 4, OGG_AUDIO}, {
-    "\177FLAC", 5, OGG_AUDIO}, {
-    "Speex", 5, OGG_AUDIO}, {
-    "CMML\0\0\0\0", 8, OGG_OTHER}, {
-    "PCM     ", 8, OGG_AUDIO}, {
-    "Annodex", 7, OGG_ANNODEX}, {
-    "fishead", 7, OGG_SKELETON}, {
-    "AnxData", 7, OGG_ANNODEX}, {
-    "CELT    ", 8, OGG_AUDIO}, {
-    "\200kate\0\0\0", 8, OGG_KATE}, {
-    "BBCD\0", 5, OGG_VIDEO}, {
-    "OVP80\1\1", 7, OGG_VIDEO}, {
-    "OpusHead", 8, OGG_AUDIO}, {
-    "\001audio\0\0\0", 9, OGG_AUDIO}, {
-    "\001video\0\0\0", 9, OGG_VIDEO}, {
-    "\001text\0\0\0", 9, OGG_OTHER}
+        "\001vorbis", 7, OGG_AUDIO}, {
+        "\200theora", 7, OGG_VIDEO}, {
+        "fLaC", 4, OGG_AUDIO}, {
+        "\177FLAC", 5, OGG_AUDIO}, {
+        "Speex", 5, OGG_AUDIO}, {
+        "CMML\0\0\0\0", 8, OGG_OTHER}, {
+        "PCM     ", 8, OGG_AUDIO}, {
+        "Annodex", 7, OGG_ANNODEX}, {
+        "fishead", 7, OGG_SKELETON}, {
+        "AnxData", 7, OGG_ANNODEX}, {
+        "CELT    ", 8, OGG_AUDIO}, {
+        "\200kate\0\0\0", 8, OGG_KATE}, {
+        "BBCD\0", 5, OGG_VIDEO}, {
+        "OVP80\1\1", 7, OGG_VIDEO}, {
+        "OpusHead", 8, OGG_AUDIO}, {
+        "\001audio\0\0\0", 9, OGG_AUDIO}, {
+        "\001video\0\0\0", 9, OGG_VIDEO}, {
+        "\001text\0\0\0", 9, OGG_OTHER}
   };
 
   while (c.offset < 4096 && data_scan_ctx_ensure_data (tf, &c, 64)) {
diff --git a/tests/check/elements/audioconvert.c b/tests/check/elements/audioconvert.c
index 37113ea7..7186baf3 100644
--- a/tests/check/elements/audioconvert.c
+++ b/tests/check/elements/audioconvert.c
@@ -1586,11 +1586,12 @@ GST_START_TEST (test_preserve_width)
     int width;
     const gchar *outf;
   } test_formats[] = { {
-  8, "S8"}, {
-  16, "S16LE"}, {
-  24, "S24LE"}, {
-  32, "S32LE"}, {
-  0, NULL}};
+      8, "S8"}, {
+      16, "S16LE"}, {
+      24, "S24LE"}, {
+      32, "S32LE"}, {
+      0, NULL}
+  };
 
   gint i;
   GstStructure *structure;
diff --git a/tests/check/elements/opus.c b/tests/check/elements/opus.c
index abdda641..3215496a 100644
--- a/tests/check/elements/opus.c
+++ b/tests/check/elements/opus.c
@@ -239,26 +239,27 @@ GST_START_TEST (test_opus_encode_properties)
     int value;
   } param_changes[steps] = {
     {
-    "frame-size", 40}, {
-    "inband-fec", 1}, {
-    "complexity", 5}, {
-    "bandwidth", 1104}, {
-    "frame-size", 2}, {
-    "max-payload-size", 80}, {
-    "frame-size", 60}, {
-    "max-payload-size", 900}, {
-    "complexity", 1}, {
-    "bitrate", 30000}, {
-    "frame-size", 10}, {
-    "bitrate", 300000}, {
-    "inband-fec", 0}, {
-    "frame-size", 5}, {
-    "bandwidth", 1101}, {
-    "frame-size", 10}, {
-    "bitrate", 500000}, {
-    "frame-size", 5}, {
-    "bitrate", 80000}, {
-  "complexity", 8},};
+        "frame-size", 40}, {
+        "inband-fec", 1}, {
+        "complexity", 5}, {
+        "bandwidth", 1104}, {
+        "frame-size", 2}, {
+        "max-payload-size", 80}, {
+        "frame-size", 60}, {
+        "max-payload-size", 900}, {
+        "complexity", 1}, {
+        "bitrate", 30000}, {
+        "frame-size", 10}, {
+        "bitrate", 300000}, {
+        "inband-fec", 0}, {
+        "frame-size", 5}, {
+        "bandwidth", 1101}, {
+        "frame-size", 10}, {
+        "bitrate", 500000}, {
+        "frame-size", 5}, {
+        "bitrate", 80000}, {
+        "complexity", 8},
+  };
 
   opusenc = setup_opusenc ();
 
diff --git a/tests/check/elements/videotestsrc.c b/tests/check/elements/videotestsrc.c
index 4468f88a..294063db 100644
--- a/tests/check/elements/videotestsrc.c
+++ b/tests/check/elements/videotestsrc.c
@@ -229,11 +229,11 @@ GST_START_TEST (test_rgb_formats)
     guint8 b_expected;
   } test_patterns[] = {
     {
-    "white", 3, 0xff, 0xff, 0xff}, {
-    "red", 4, 0xff, 0x00, 0x00}, {
-    "green", 5, 0x00, 0xff, 0x00}, {
-    "blue", 6, 0x00, 0x00, 0xff}, {
-    "black", 2, 0x00, 0x00, 0x00}
+        "white", 3, 0xff, 0xff, 0xff}, {
+        "red", 4, 0xff, 0x00, 0x00}, {
+        "green", 5, 0x00, 0xff, 0x00}, {
+        "blue", 6, 0x00, 0x00, 0xff}, {
+        "black", 2, 0x00, 0x00, 0x00}
   };
   const struct
   {
@@ -242,18 +242,18 @@ GST_START_TEST (test_rgb_formats)
     guint32 red_mask, green_mask, blue_mask, alpha_mask;
   } rgb_formats[] = {
     {
-    "RGBA", 32, 32, 0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff}, {
-    "ARGB", 32, 32, 0x00ff0000, 0x0000ff00, 0x000000ff, 0xff000000}, {
-    "BGRA", 32, 32, 0x0000ff00, 0x00ff0000, 0xff000000, 0x000000ff}, {
-    "ABGR", 32, 32, 0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000}, {
-    "RGBx", 32, 24, 0xff000000, 0x00ff0000, 0x0000ff00, 0x00000000}, {
-    "xRGB", 32, 24, 0x00ff0000, 0x0000ff00, 0x000000ff, 0x00000000}, {
-    "BGRx", 32, 24, 0x0000ff00, 0x00ff0000, 0xff000000, 0x00000000}, {
-    "xBGR", 32, 24, 0x000000ff, 0x0000ff00, 0x00ff0000, 0x00000000}, {
-    "RGB", 24, 24, 0x00ff0000, 0x0000ff00, 0x000000ff, 0x00000000}, {
-    "BGR", 24, 24, 0x000000ff, 0x0000ff00, 0x00ff0000, 0x00000000}, {
-    "RGB16", 16, 16, 0x0000f800, 0x000007e0, 0x0000001f, 0x00000000}, {
-    "RGB15", 16, 15, 0x00007c00, 0x000003e0, 0x0000001f, 0x0000000}
+        "RGBA", 32, 32, 0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff}, {
+        "ARGB", 32, 32, 0x00ff0000, 0x0000ff00, 0x000000ff, 0xff000000}, {
+        "BGRA", 32, 32, 0x0000ff00, 0x00ff0000, 0xff000000, 0x000000ff}, {
+        "ABGR", 32, 32, 0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000}, {
+        "RGBx", 32, 24, 0xff000000, 0x00ff0000, 0x0000ff00, 0x00000000}, {
+        "xRGB", 32, 24, 0x00ff0000, 0x0000ff00, 0x000000ff, 0x00000000}, {
+        "BGRx", 32, 24, 0x0000ff00, 0x00ff0000, 0xff000000, 0x00000000}, {
+        "xBGR", 32, 24, 0x000000ff, 0x0000ff00, 0x00ff0000, 0x00000000}, {
+        "RGB", 24, 24, 0x00ff0000, 0x0000ff00, 0x000000ff, 0x00000000}, {
+        "BGR", 24, 24, 0x000000ff, 0x0000ff00, 0x00ff0000, 0x00000000}, {
+        "RGB16", 16, 16, 0x0000f800, 0x000007e0, 0x0000001f, 0x00000000}, {
+        "RGB15", 16, 15, 0x00007c00, 0x000003e0, 0x0000001f, 0x0000000}
   };
   GstElement *pipeline, *src, *filter, *sink;
   GstCaps *template_caps;
diff --git a/tests/check/libs/gstglmemory.c b/tests/check/libs/gstglmemory.c
index 16a8cd6d..02b76d15 100644
--- a/tests/check/libs/gstglmemory.c
+++ b/tests/check/libs/gstglmemory.c
@@ -64,10 +64,11 @@ static const struct
   gsize size;
 } formats[] = {
   {
-  GST_VIDEO_FORMAT_RGBA, 1, 1, 0, rgba_pixel, 4}, {
-  GST_VIDEO_FORMAT_RGB, 1, 1, 0, rgba_pixel, 3}, {
-  GST_VIDEO_FORMAT_YUY2, 1, 1, 0, rgba_pixel, 1}, {
-GST_VIDEO_FORMAT_I420, 1, 1, 0, rgba_pixel, 1},};
+      GST_VIDEO_FORMAT_RGBA, 1, 1, 0, rgba_pixel, 4}, {
+      GST_VIDEO_FORMAT_RGB, 1, 1, 0, rgba_pixel, 3}, {
+      GST_VIDEO_FORMAT_YUY2, 1, 1, 0, rgba_pixel, 1}, {
+      GST_VIDEO_FORMAT_I420, 1, 1, 0, rgba_pixel, 1},
+};
 
 GST_START_TEST (test_allocator_alloc)
 {
diff --git a/tests/check/libs/tag.c b/tests/check/libs/tag.c
index b3ed25ce..0beef6d9 100644
--- a/tests/check/libs/tag.c
+++ b/tests/check/libs/tag.c
@@ -1183,15 +1183,15 @@ GST_START_TEST (test_xmp_parsing)
     gint result_test;
   } test_data[] = {
     {
-    "", -1, -1}, {
-    "<rdf:Description rdf:about=\"\" />", 0, -1}, {
-    "<rdf:Description rdf:about=\"\"></rdf:Description>", 0, -1}, {
-    "<rdf:Description    rdf:about=\"\"    ></rdf:Description>", 0, -1}, {
-    "<rdf:Description rdf:about=\"\"><dc:description>test</dc:description></rdf:Description>",
-          1, 0}, {
-    "<rdf:Description rdf:about=\"\" dc:description=\"test\"></rdf:Description>",
-          1, 0}, {
-    NULL, -1, -1}
+        "", -1, -1}, {
+        "<rdf:Description rdf:about=\"\" />", 0, -1}, {
+        "<rdf:Description rdf:about=\"\"></rdf:Description>", 0, -1}, {
+        "<rdf:Description    rdf:about=\"\"    ></rdf:Description>", 0, -1}, {
+          "<rdf:Description rdf:about=\"\"><dc:description>test</dc:description></rdf:Description>",
+        1, 0}, {
+          "<rdf:Description rdf:about=\"\" dc:description=\"test\"></rdf:Description>",
+        1, 0}, {
+        NULL, -1, -1}
   };
 
   /* test data */
diff --git a/tests/examples/gl/gtk/3dvideo/mviewwidget.c b/tests/examples/gl/gtk/3dvideo/mviewwidget.c
index cf771404..5b42a540 100644
--- a/tests/examples/gl/gtk/3dvideo/mviewwidget.c
+++ b/tests/examples/gl/gtk/3dvideo/mviewwidget.c
@@ -120,17 +120,17 @@ sync_flags (GstMViewWidget * mv)
 {
   mv->synching = TRUE;
   g_object_set (G_OBJECT (mv->lflip), "active",
-      ! !(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_LEFT_FLIPPED), NULL);
+      !!(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_LEFT_FLIPPED), NULL);
   g_object_set (G_OBJECT (mv->lflop), "active",
-      ! !(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_LEFT_FLOPPED), NULL);
+      !!(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_LEFT_FLOPPED), NULL);
   g_object_set (G_OBJECT (mv->rflip), "active",
-      ! !(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_RIGHT_FLIPPED), NULL);
+      !!(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_RIGHT_FLIPPED), NULL);
   g_object_set (G_OBJECT (mv->rflop), "active",
-      ! !(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_RIGHT_FLOPPED), NULL);
+      !!(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_RIGHT_FLOPPED), NULL);
   g_object_set (G_OBJECT (mv->right_first), "active",
-      ! !(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_RIGHT_VIEW_FIRST), NULL);
+      !!(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_RIGHT_VIEW_FIRST), NULL);
   g_object_set (G_OBJECT (mv->half_aspect), "active",
-      ! !(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_HALF_ASPECT), NULL);
+      !!(mv->flags & GST_VIDEO_MULTIVIEW_FLAGS_HALF_ASPECT), NULL);
   mv->synching = FALSE;
 }
 
-- 
2.40.1

