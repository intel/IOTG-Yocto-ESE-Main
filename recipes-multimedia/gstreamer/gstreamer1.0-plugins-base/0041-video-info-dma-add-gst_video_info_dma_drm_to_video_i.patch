From 750901a17f123a3b118fe13be1b6dcd2296c55ba Mon Sep 17 00:00:00 2001
From: Lim Siew Hoon <siew.hoon.lim@intel.com>
Date: Mon, 31 Jul 2023 18:03:17 +0800
Subject: [PATCH 41/77] video-info-dma: add
 gst_video_info_dma_drm_to_video_info()

Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/4883>

Backport from upstream:
https://gitlab.freedesktop.org/gstreamer/gstreamer/-/commit/a10e05000da715696824b44f0d12bec420e44138

Signed-off-by: Lim Siew Hoon <siew.hoon.lim@intel.com>
---
 gst-libs/gst/video/video-info-dma.c | 51 +++++++++++++++++++++++++++++
 gst-libs/gst/video/video-info-dma.h |  5 +++
 2 files changed, 56 insertions(+)

diff --git a/gst-libs/gst/video/video-info-dma.c b/gst-libs/gst/video/video-info-dma.c
index 2ec08511..fc3de12e 100644
--- a/gst-libs/gst/video/video-info-dma.c
+++ b/gst-libs/gst/video/video-info-dma.c
@@ -444,6 +444,57 @@ gst_video_info_dma_drm_from_video_info (GstVideoInfoDmaDrm * drm_info,
       GST_VIDEO_INFO_WIDTH (info), GST_VIDEO_INFO_HEIGHT (info));
 }
 
+/**
+ * gst_video_info_dma_drm_to_video_info:
+ * @drm_info: a #GstVideoInfoDmaDrm
+ * @info: (out caller-allocates): #GstVideoInfo
+ *
+ * Convert the #GstVideoInfoDmaDrm into a traditional #GstVideoInfo with
+ * recognized video format. For DMA kind memory, the non linear DMA format
+ * should be recognized as #GST_VIDEO_FORMAT_ENCODED. This helper function
+ * sets @info's video format into the default value according to @drm_info's
+ * drm_fourcc field.
+ *
+ * Returns: %TRUE if @info is converted correctly.
+ *
+ * Since: 1.24
+ */
+gboolean
+gst_video_info_dma_drm_to_video_info (const GstVideoInfoDmaDrm * drm_info,
+    GstVideoInfo * info)
+{
+  GstVideoFormat video_format;
+  GstVideoInfo tmp_info;
+  guint i;
+
+  g_return_val_if_fail (drm_info, FALSE);
+  g_return_val_if_fail (info, FALSE);
+
+  if (GST_VIDEO_INFO_FORMAT (&drm_info->vinfo) != GST_VIDEO_FORMAT_ENCODED) {
+    *info = drm_info->vinfo;
+    return TRUE;
+  }
+
+  video_format = gst_video_dma_drm_fourcc_to_format (drm_info->drm_fourcc);
+  if (video_format == GST_VIDEO_FORMAT_UNKNOWN)
+    return FALSE;
+
+  if (!gst_video_info_set_format (&tmp_info, video_format,
+          GST_VIDEO_INFO_WIDTH (&drm_info->vinfo),
+          GST_VIDEO_INFO_HEIGHT (&drm_info->vinfo)))
+    return FALSE;
+
+  *info = drm_info->vinfo;
+  info->finfo = tmp_info.finfo;
+  for (i = 0; i < GST_VIDEO_MAX_PLANES; i++)
+    info->stride[i] = tmp_info.stride[i];
+  for (i = 0; i < GST_VIDEO_MAX_PLANES; i++)
+    info->offset[i] = tmp_info.offset[i];
+  info->size = tmp_info.size;
+
+  return TRUE;
+}
+
 /**
  * gst_video_dma_drm_fourcc_from_string:
  * @format_str: a drm format string
diff --git a/gst-libs/gst/video/video-info-dma.h b/gst-libs/gst/video/video-info-dma.h
index 61f8319e..15e6a87c 100644
--- a/gst-libs/gst/video/video-info-dma.h
+++ b/gst-libs/gst/video/video-info-dma.h
@@ -75,6 +75,11 @@ gboolean             gst_video_info_dma_drm_from_video_info
                                                           (GstVideoInfoDmaDrm * drm_info,
                                                            const GstVideoInfo * info,
                                                            guint64 modifier);
+
+GST_VIDEO_API
+gboolean             gst_video_info_dma_drm_to_video_info (const GstVideoInfoDmaDrm * drm_info,
+                                                           GstVideoInfo * info);
+
 GST_VIDEO_API
 GstVideoInfoDmaDrm * gst_video_info_dma_drm_new_from_caps (const GstCaps * caps);
 
-- 
2.40.1

