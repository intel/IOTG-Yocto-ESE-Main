From ece2382441d9a19167704f54f10bfbcf5e9a2fbf Mon Sep 17 00:00:00 2001
From: Lim Siew Hoon <siew.hoon.lim@intel.com>
Date: Wed, 29 Jul 2020 02:35:12 +0800
Subject: [PATCH 2/2] add more Valgrind specific configure log output.

Upstream-Status: Pending

Signed-off-: Carlos Rafael Giani <crg7475@mailbox.org>
Signed-off-by: dnagasun <devamekalai.nagasundaram@intel.com>
Signed-off-by: Lim Siew Hoon <siew.hoon.lim@intel.com>
---
 meson.build       | 24 +++++++++++++++++++++++-
 meson_options.txt |  1 +
 2 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/meson.build b/meson.build
index 95a8275b8..e482cb1cd 100644
--- a/meson.build
+++ b/meson.build
@@ -200,7 +200,6 @@ check_headers = [
   'sys/wait.h',
   'ucontext.h',
   'unistd.h',
-  'valgrind/valgrind.h',
   'sys/resource.h',
   'sys/uio.h',
 ]
@@ -216,6 +215,29 @@ foreach h : check_headers
   endif
 endforeach
 
+valgrind_option = get_option('valgrind')
+if valgrind_option.disabled()
+  message('Valgrind support not requested; disabled.')
+else
+  valgrind_header = 'valgrind/valgrind.h'
+  has_valgrind_header = cc.has_header(valgrind_header)
+  if has_valgrind_header
+    message('Valgrind support requested, and header ' + valgrind_header + \
+        ' found. Enabled Valgrind support.')
+    define = 'HAVE_' + valgrind_header.underscorify().to_upper()
+    cdata.set(define, 1)
+  else
+    if valgrind_option.enabled()
+      error('Valgrind support requested and set as required, but header ' + \
+        valgrind_header + ' not found.')
+    else
+      message('Valgrind support requested, but header ' + valgrind_header + \
+        ' not found. Disabling Valgrind support.')
+    endif
+  endif
+endif
+
+
 if cc.has_member('struct tm', 'tm_gmtoff', prefix : '#include <time.h>')
   cdata.set('HAVE_TM_GMTOFF', 1)
 endif
diff --git a/meson_options.txt b/meson_options.txt
index 72c3997e2..e78a3ca6e 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -18,6 +18,7 @@ option('memory-alignment', type: 'combo',
 
 # Feature options
 option('check', type : 'feature', value : 'auto', description : 'Build unit test libraries')
+option('valgrind', type : 'feature', value : 'auto', description : 'Enable Valgrind support')
 option('libunwind', type : 'feature', value : 'auto', description : 'Use libunwind to generate backtraces')
 option('libdw', type : 'feature', value : 'auto', description : 'Use libdw to generate better backtraces from libunwind')
 option('dbghelp', type : 'feature', value : 'auto', description : 'Use dbghelp to generate backtraces')
-- 
2.17.1

