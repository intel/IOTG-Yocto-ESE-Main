From 1e01548f545d68caafd6c3a51b8395b722918157 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim-Philipp=20M=C3=BCller?= <tim@centricular.com>
Date: Wed, 4 Jan 2023 17:58:13 +0000
Subject: [PATCH 02/42] core: tests: drop use of GSlice allocator

Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3695>
---
 tests/check/gst/gstelementfactory.c | 1 +
 tests/check/gst/gstmemory.c         | 4 ++--
 tests/check/libs/gsttestclock.c     | 4 ++--
 3 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/tests/check/gst/gstelementfactory.c b/tests/check/gst/gstelementfactory.c
index 7d722470..0d4dd962 100644
--- a/tests/check/gst/gstelementfactory.c
+++ b/tests/check/gst/gstelementfactory.c
@@ -19,6 +19,7 @@
  * Boston, MA 02110-1301, USA.
  */
 #include "../../gst/gst_private.h"
+#include "../../gst/glib-compat-private.h"
 
 #include <gst/check/gstcheck.h>
 
diff --git a/tests/check/gst/gstmemory.c b/tests/check/gst/gstmemory.c
index 1cde398b..def8bcb2 100644
--- a/tests/check/gst/gstmemory.c
+++ b/tests/check/gst/gstmemory.c
@@ -588,7 +588,7 @@ static GstMemory *
 _my_opaque_alloc (GstAllocator * allocator, gsize size,
     GstAllocationParams * params)
 {
-  MyOpaqueMemory *mem = g_slice_new (MyOpaqueMemory);
+  MyOpaqueMemory *mem = g_new (MyOpaqueMemory, 1);
   gsize maxsize = size + params->prefix + params->padding;
 
   gst_memory_init (GST_MEMORY_CAST (mem), params->flags, allocator, NULL,
@@ -605,7 +605,7 @@ _my_opaque_free (GstAllocator * allocator, GstMemory * mem)
   MyOpaqueMemory *mmem = (MyOpaqueMemory *) mem;
 
   g_free (mmem->data);
-  g_slice_free (MyOpaqueMemory, mmem);
+  g_free (mmem);
 }
 
 static gpointer
diff --git a/tests/check/libs/gsttestclock.c b/tests/check/libs/gsttestclock.c
index 386a1910..21cb2594 100644
--- a/tests/check/libs/gsttestclock.c
+++ b/tests/check/libs/gsttestclock.c
@@ -116,7 +116,7 @@ gst_test_util_wait_for_clock_id_begin (GstTestClock * test_clock, GstClockID id,
 {
   GtuClockWaitContext *wait_ctx;
 
-  wait_ctx = g_slice_new (GtuClockWaitContext);
+  wait_ctx = g_new (GtuClockWaitContext, 1);
   wait_ctx->test_clock = gst_object_ref (test_clock);
   wait_ctx->reference = gst_clock_get_time (GST_CLOCK (wait_ctx->test_clock));
   wait_ctx->id = gst_clock_id_ref (id);
@@ -179,7 +179,7 @@ gst_test_util_wait_for_clock_id_end (GtuClockWaitContext * wait_ctx)
 
   gst_clock_id_unref (wait_ctx->id);
   gst_object_unref (wait_ctx->test_clock);
-  g_slice_free (GtuClockWaitContext, wait_ctx);
+  g_free (wait_ctx);
 
   return status;
 }
-- 
2.40.1

