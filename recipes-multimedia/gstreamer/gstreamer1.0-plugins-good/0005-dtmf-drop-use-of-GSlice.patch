From 6dce4815658cf055cc2f91a855657c85f5e7fb03 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim-Philipp=20M=C3=BCller?= <tim@centricular.com>
Date: Sun, 8 Jan 2023 17:27:21 +0000
Subject: [PATCH 05/16] dtmf: drop use of GSlice

Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3695>
---
 gst/dtmf/gstdtmfsrc.c    | 20 ++++++++++----------
 gst/dtmf/gstrtpdtmfsrc.c | 14 +++++++-------
 2 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/gst/dtmf/gstdtmfsrc.c b/gst/dtmf/gstdtmfsrc.c
index 1945c0f7..cd46da95 100644
--- a/gst/dtmf/gstdtmfsrc.c
+++ b/gst/dtmf/gstdtmfsrc.c
@@ -247,7 +247,7 @@ static void
 event_free (GstDTMFSrcEvent * event)
 {
   if (event)
-    g_slice_free (GstDTMFSrcEvent, event);
+    g_free (event);
 }
 
 static void
@@ -481,7 +481,7 @@ gst_dtmf_src_add_start_event (GstDTMFSrc * dtmfsrc, gint event_number,
     gint event_volume)
 {
 
-  GstDTMFSrcEvent *event = g_slice_new0 (GstDTMFSrcEvent);
+  GstDTMFSrcEvent *event = g_new0 (GstDTMFSrcEvent, 1);
   event->event_type = DTMF_EVENT_TYPE_START;
   event->sample = 0;
   event->event_number = CLAMP (event_number, MIN_EVENT, MAX_EVENT);
@@ -494,7 +494,7 @@ static void
 gst_dtmf_src_add_stop_event (GstDTMFSrc * dtmfsrc)
 {
 
-  GstDTMFSrcEvent *event = g_slice_new0 (GstDTMFSrcEvent);
+  GstDTMFSrcEvent *event = g_new0 (GstDTMFSrcEvent, 1);
   event->event_type = DTMF_EVENT_TYPE_STOP;
   event->sample = 0;
   event->event_number = 0;
@@ -689,7 +689,7 @@ gst_dtmf_src_create (GstBaseSrc * basesrc, guint64 offset,
           break;
       }
       if (event)
-        g_slice_free (GstDTMFSrcEvent, event);
+        g_free (event);
     } else if (dtmfsrc->last_event->packet_count * dtmfsrc->interval >=
         MIN_DUTY_CYCLE) {
       event = g_async_queue_try_pop (dtmfsrc->event_queue);
@@ -703,7 +703,7 @@ gst_dtmf_src_create (GstBaseSrc * basesrc, guint64 offset,
             gst_dtmf_src_post_message (dtmfsrc, "dtmf-event-dropped", event);
             break;
           case DTMF_EVENT_TYPE_STOP:
-            g_slice_free (GstDTMFSrcEvent, dtmfsrc->last_event);
+            g_free (dtmfsrc->last_event);
             dtmfsrc->last_event = NULL;
             gst_dtmf_src_post_message (dtmfsrc, "dtmf-event-processed", event);
             break;
@@ -723,7 +723,7 @@ gst_dtmf_src_create (GstBaseSrc * basesrc, guint64 offset,
 
             break;
         }
-        g_slice_free (GstDTMFSrcEvent, event);
+        g_free (event);
       }
     }
   } while (dtmfsrc->last_event == NULL);
@@ -773,7 +773,7 @@ paused:
   if (dtmfsrc->last_event) {
     GST_DEBUG_OBJECT (dtmfsrc, "Stopping current event");
     /* Don't forget to release the stream lock */
-    g_slice_free (GstDTMFSrcEvent, dtmfsrc->last_event);
+    g_free (dtmfsrc->last_event);
     dtmfsrc->last_event = NULL;
   }
 
@@ -797,7 +797,7 @@ gst_dtmf_src_unlock (GstBaseSrc * src)
   GST_OBJECT_UNLOCK (dtmfsrc);
 
   GST_DEBUG_OBJECT (dtmfsrc, "Pushing the PAUSE_TASK event on unlock request");
-  event = g_slice_new0 (GstDTMFSrcEvent);
+  event = g_new0 (GstDTMFSrcEvent, 1);
   event->event_type = DTMF_EVENT_TYPE_PAUSE_TASK;
   g_async_queue_push (dtmfsrc->event_queue, event);
 
@@ -902,7 +902,7 @@ gst_dtmf_src_change_state (GstElement * element, GstStateChange transition)
 
       while (event != NULL) {
         gst_dtmf_src_post_message (dtmfsrc, "dtmf-event-dropped", event);
-        g_slice_free (GstDTMFSrcEvent, event);
+        g_free (event);
         event = g_async_queue_try_pop (dtmfsrc->event_queue);
       }
       dtmfsrc->last_event_was_start = FALSE;
@@ -929,7 +929,7 @@ gst_dtmf_src_change_state (GstElement * element, GstStateChange transition)
 
       while (event != NULL) {
         gst_dtmf_src_post_message (dtmfsrc, "dtmf-event-dropped", event);
-        g_slice_free (GstDTMFSrcEvent, event);
+        g_free (event);
         event = g_async_queue_try_pop (dtmfsrc->event_queue);
       }
       dtmfsrc->last_event_was_start = FALSE;
diff --git a/gst/dtmf/gstrtpdtmfsrc.c b/gst/dtmf/gstrtpdtmfsrc.c
index 1621cc21..0760b546 100644
--- a/gst/dtmf/gstrtpdtmfsrc.c
+++ b/gst/dtmf/gstrtpdtmfsrc.c
@@ -245,8 +245,8 @@ gst_rtp_dtmf_src_event_free (GstRTPDTMFSrcEvent * event)
 {
   if (event) {
     if (event->payload)
-      g_slice_free (GstRTPDTMFPayload, event->payload);
-    g_slice_free (GstRTPDTMFSrcEvent, event);
+      g_free (event->payload);
+    g_free (event);
   }
 }
 
@@ -508,10 +508,10 @@ gst_rtp_dtmf_src_add_start_event (GstRTPDTMFSrc * dtmfsrc, gint event_number,
     gint event_volume)
 {
 
-  GstRTPDTMFSrcEvent *event = g_slice_new0 (GstRTPDTMFSrcEvent);
+  GstRTPDTMFSrcEvent *event = g_new0 (GstRTPDTMFSrcEvent, 1);
   event->event_type = RTP_DTMF_EVENT_TYPE_START;
 
-  event->payload = g_slice_new0 (GstRTPDTMFPayload);
+  event->payload = g_new0 (GstRTPDTMFPayload, 1);
   event->payload->event = CLAMP (event_number, MIN_EVENT, MAX_EVENT);
   event->payload->volume = CLAMP (event_volume, MIN_VOLUME, MAX_VOLUME);
 
@@ -522,7 +522,7 @@ static void
 gst_rtp_dtmf_src_add_stop_event (GstRTPDTMFSrc * dtmfsrc)
 {
 
-  GstRTPDTMFSrcEvent *event = g_slice_new0 (GstRTPDTMFSrcEvent);
+  GstRTPDTMFSrcEvent *event = g_new0 (GstRTPDTMFSrcEvent, 1);
   event->event_type = RTP_DTMF_EVENT_TYPE_STOP;
 
   g_async_queue_push (dtmfsrc->event_queue, event);
@@ -808,7 +808,7 @@ send_last:
   /* This is the end of the event */
   if (dtmfsrc->last_packet == TRUE && dtmfsrc->redundancy_count == 0) {
 
-    g_slice_free (GstRTPDTMFPayload, dtmfsrc->payload);
+    g_free (dtmfsrc->payload);
     dtmfsrc->payload = NULL;
 
     dtmfsrc->last_packet = FALSE;
@@ -1121,7 +1121,7 @@ gst_rtp_dtmf_src_unlock (GstBaseSrc * src)
   GST_OBJECT_UNLOCK (dtmfsrc);
 
   GST_DEBUG_OBJECT (dtmfsrc, "Pushing the PAUSE_TASK event on unlock request");
-  event = g_slice_new0 (GstRTPDTMFSrcEvent);
+  event = g_new0 (GstRTPDTMFSrcEvent, 1);
   event->event_type = RTP_DTMF_EVENT_TYPE_PAUSE_TASK;
   g_async_queue_push (dtmfsrc->event_queue, event);
 
-- 
2.40.1

