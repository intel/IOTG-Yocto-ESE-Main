From 9d493ec5ae6cb5678f0c46dc2ebc71fdbcf859a7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim-Philipp=20M=C3=BCller?= <tim@centricular.com>
Date: Sun, 8 Jan 2023 17:31:57 +0000
Subject: [PATCH 09/16] rtp: drop use of GSlice

Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3695>
---
 gst/rtp/gstrtpmparobustdepay.c | 10 +++++-----
 gst/rtp/gstrtpreddec.c         |  4 ++--
 gst/rtp/gstrtpredenc.c         |  4 ++--
 gst/rtp/rtpstoragestream.c     |  8 ++++----
 4 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/gst/rtp/gstrtpmparobustdepay.c b/gst/rtp/gstrtpmparobustdepay.c
index ca7f1f19..99f25978 100644
--- a/gst/rtp/gstrtpmparobustdepay.c
+++ b/gst/rtp/gstrtpmparobustdepay.c
@@ -278,7 +278,7 @@ gst_rtp_mpa_robust_depay_generate_dummy_frame (GstRtpMPARobustDepay *
   GstADUFrame *dummy;
   GstMapInfo map;
 
-  dummy = g_slice_dup (GstADUFrame, frame);
+  dummy = g_memdup2 (frame, sizeof (GstADUFrame));
 
   /* go for maximum bitrate */
   dummy->header = (frame->header & ~(0xf << 12)) | (0xe << 12);
@@ -319,7 +319,7 @@ gst_rtp_mpa_robust_depay_queue_frame (GstRtpMPARobustDepay * rtpmpadepay,
   if (map.size < 6)
     goto corrupt_frame;
 
-  frame = g_slice_new0 (GstADUFrame);
+  frame = g_new0 (GstADUFrame, 1);
   frame->header = GST_READ_UINT32_BE (map.data);
 
   size = mp3_type_frame_length_from_header (GST_ELEMENT_CAST (rtpmpadepay),
@@ -377,7 +377,7 @@ corrupt_frame:
     gst_buffer_unmap (buf, &map);
     gst_buffer_unref (buf);
     if (frame)
-      g_slice_free (GstADUFrame, frame);
+      g_free (frame);
     return FALSE;
   }
 }
@@ -387,7 +387,7 @@ gst_rtp_mpa_robust_depay_free_frame (GstADUFrame * frame)
 {
   if (frame->buffer)
     gst_buffer_unref (frame->buffer);
-  g_slice_free (GstADUFrame, frame);
+  g_free (frame);
 }
 
 static inline void
@@ -500,7 +500,7 @@ gst_rtp_mpa_robust_depay_push_mp3_frames (GstRtpMPARobustDepay * rtpmpadepay)
           frame->buffer);
       frame->buffer = NULL;
       /* and remove it from any further consideration */
-      g_slice_free (GstADUFrame, frame);
+      g_free (frame);
       g_queue_delete_link (rtpmpadepay->adu_frames, rtpmpadepay->cur_adu_frame);
       rtpmpadepay->cur_adu_frame = NULL;
       continue;
diff --git a/gst/rtp/gstrtpreddec.c b/gst/rtp/gstrtpreddec.c
index 6c7ba363..178bae4b 100644
--- a/gst/rtp/gstrtpreddec.c
+++ b/gst/rtp/gstrtpreddec.c
@@ -97,13 +97,13 @@ enum
 static RTPHistItem *
 rtp_hist_item_alloc (void)
 {
-  return g_slice_new (RTPHistItem);
+  return g_new (RTPHistItem, 1);
 }
 
 static void
 rtp_hist_item_free (gpointer item)
 {
-  g_slice_free (RTPHistItem, item);
+  g_free (item);
 }
 
 static gint
diff --git a/gst/rtp/gstrtpredenc.c b/gst/rtp/gstrtpredenc.c
index 94062fea..91a5354f 100644
--- a/gst/rtp/gstrtpredenc.c
+++ b/gst/rtp/gstrtpredenc.c
@@ -104,7 +104,7 @@ rtp_hist_item_init (RTPHistItem * item, GstRTPBuffer * rtp,
 static RTPHistItem *
 rtp_hist_item_new (GstRTPBuffer * rtp, GstBuffer * rtp_payload)
 {
-  RTPHistItem *item = g_slice_new0 (RTPHistItem);
+  RTPHistItem *item = g_new0 (RTPHistItem, 1);
   rtp_hist_item_init (item, rtp, rtp_payload);
   return item;
 }
@@ -122,7 +122,7 @@ rtp_hist_item_free (gpointer _item)
 {
   RTPHistItem *item = _item;
   gst_buffer_unref (item->payload);
-  g_slice_free (RTPHistItem, item);
+  g_free (item);
 }
 
 static GstEvent *
diff --git a/gst/rtp/rtpstoragestream.c b/gst/rtp/rtpstoragestream.c
index a0708859..851b9b50 100644
--- a/gst/rtp/rtpstoragestream.c
+++ b/gst/rtp/rtpstoragestream.c
@@ -25,7 +25,7 @@
 static RtpStorageItem *
 rtp_storage_item_new (GstBuffer * buffer, guint8 pt, guint16 seq)
 {
-  RtpStorageItem *ret = g_slice_new0 (RtpStorageItem);
+  RtpStorageItem *ret = g_new0 (RtpStorageItem, 1);
   ret->buffer = buffer;
   ret->pt = pt;
   ret->seq = seq;
@@ -37,7 +37,7 @@ rtp_storage_item_free (RtpStorageItem * item)
 {
   g_assert (item->buffer != NULL);
   gst_buffer_unref (item->buffer);
-  g_slice_free (RtpStorageItem, item);
+  g_free (item);
 }
 
 static gint
@@ -150,7 +150,7 @@ rtp_storage_stream_resize_and_add_item (RtpStorageStream * stream,
 RtpStorageStream *
 rtp_storage_stream_new (guint32 ssrc)
 {
-  RtpStorageStream *ret = g_slice_new0 (RtpStorageStream);
+  RtpStorageStream *ret = g_new0 (RtpStorageStream, 1);
   ret->max_arrival_time = GST_CLOCK_TIME_NONE;
   ret->ssrc = ssrc;
   g_mutex_init (&ret->stream_lock);
@@ -165,7 +165,7 @@ rtp_storage_stream_free (RtpStorageStream * stream)
     rtp_storage_item_free (g_queue_pop_tail (&stream->queue));
   STREAM_UNLOCK (stream);
   g_mutex_clear (&stream->stream_lock);
-  g_slice_free (RtpStorageStream, stream);
+  g_free (stream);
 }
 
 void
-- 
2.40.1

