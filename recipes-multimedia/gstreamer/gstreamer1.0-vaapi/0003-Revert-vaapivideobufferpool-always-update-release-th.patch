From 71b2ae33ed7d8d1c9309f7476a8fd37d21bb857b Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Tue, 18 Feb 2020 19:50:51 +0700
Subject: [PATCH 3/3] Revert "vaapivideobufferpool: always update/release the
 underlying surface proxy"

This reverts commit 89f202ea2ec9d72d46aa0ee7f077f71e0eb290d6.
---
 gst/vaapi/gstvaapivideobufferpool.c | 21 ++++++++-------------
 1 file changed, 8 insertions(+), 13 deletions(-)

diff --git a/gst/vaapi/gstvaapivideobufferpool.c b/gst/vaapi/gstvaapivideobufferpool.c
index ae99c641..bd62097e 100644
--- a/gst/vaapi/gstvaapivideobufferpool.c
+++ b/gst/vaapi/gstvaapivideobufferpool.c
@@ -436,11 +436,6 @@ gst_vaapi_video_buffer_pool_acquire_buffer (GstBufferPool * pool,
    * the one associated with the current surface. */
   g_assert (gst_buffer_n_memory (buffer) == 1);
 
-  /* Update the underlying surface proxy */
-  meta = gst_buffer_get_vaapi_video_meta (buffer);
-  if (meta)
-    gst_vaapi_video_meta_set_surface_proxy (meta, priv_params->proxy);
-
   /* Find the cached memory associated with the given surface. */
   surface = GST_VAAPI_SURFACE_PROXY_SURFACE (priv_params->proxy);
   dmabuf_proxy = gst_vaapi_surface_peek_buffer_proxy (surface);
@@ -452,7 +447,13 @@ gst_vaapi_video_buffer_pool_acquire_buffer (GstBufferPool * pool,
       mem = gst_memory_ref (mem);
   } else {
     /* The given surface has not been exported yet. */
-    mem = gst_vaapi_dmabuf_memory_new (priv->allocator, meta);
+    meta = gst_buffer_get_vaapi_video_meta (buffer);
+    if (gst_vaapi_video_meta_get_surface_proxy (meta))
+      gst_vaapi_video_meta_set_surface_proxy (meta, priv_params->proxy);
+
+    mem =
+        gst_vaapi_dmabuf_memory_new (priv->allocator,
+        gst_buffer_get_vaapi_video_meta (buffer));
   }
 
   /* Attach the GstFdMemory to the output buffer. */
@@ -472,16 +473,10 @@ gst_vaapi_video_buffer_pool_reset_buffer (GstBufferPool * pool,
     GstBuffer * buffer)
 {
   GstMemory *const mem = gst_buffer_peek_memory (buffer, 0);
-  GstVaapiVideoMeta *meta;
 
   /* Release the underlying surface proxy */
-  if (GST_VAAPI_IS_VIDEO_MEMORY (mem)) {
+  if (GST_VAAPI_IS_VIDEO_MEMORY (mem))
     gst_vaapi_video_memory_reset_surface (GST_VAAPI_VIDEO_MEMORY_CAST (mem));
-  } else {
-    meta = gst_buffer_get_vaapi_video_meta (buffer);
-    if (meta)
-      gst_vaapi_video_meta_set_surface_proxy (meta, NULL);
-  }
 
   GST_BUFFER_POOL_CLASS (gst_vaapi_video_buffer_pool_parent_class)->reset_buffer
       (pool, buffer);
-- 
2.17.1

