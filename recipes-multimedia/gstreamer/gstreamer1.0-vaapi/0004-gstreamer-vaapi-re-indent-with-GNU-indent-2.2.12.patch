From fbf29cfd843c9fd4815d1d3223f7aa061955f3e0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim-Philipp=20M=C3=BCller?= <tim@centricular.com>
Date: Wed, 15 Mar 2023 18:56:55 +0000
Subject: [PATCH 4/8] gstreamer-vaapi: re-indent with GNU indent 2.2.12

Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/4182>
---
 gst-libs/gst/vaapi/gstvaapidecoder_vc1.c     | 46 ++++++++++----------
 gst-libs/gst/vaapi/gstvaapidisplay_wayland.c |  4 +-
 gst-libs/gst/vaapi/gstvaapitexture_glx.c     |  4 +-
 tests/internal/image.c                       |  6 +--
 4 files changed, 30 insertions(+), 30 deletions(-)

diff --git a/gst-libs/gst/vaapi/gstvaapidecoder_vc1.c b/gst-libs/gst/vaapi/gstvaapidecoder_vc1.c
index cb4dfbff..692ed630 100644
--- a/gst-libs/gst/vaapi/gstvaapidecoder_vc1.c
+++ b/gst-libs/gst/vaapi/gstvaapidecoder_vc1.c
@@ -469,29 +469,29 @@ get_BFRACTION (guint bfraction)
   }
   bfraction_map[] = {
     {
-    0, GST_VC1_BFRACTION_BASIS / 2}, {
-    1, GST_VC1_BFRACTION_BASIS / 3}, {
-    2, (GST_VC1_BFRACTION_BASIS * 2) / 3}, {
-    3, GST_VC1_BFRACTION_BASIS / 4}, {
-    4, (GST_VC1_BFRACTION_BASIS * 3) / 4}, {
-    5, GST_VC1_BFRACTION_BASIS / 5}, {
-    6, (GST_VC1_BFRACTION_BASIS * 2) / 5}, {
-    7, (GST_VC1_BFRACTION_BASIS * 3) / 5}, {
-    8, (GST_VC1_BFRACTION_BASIS * 4) / 5}, {
-    9, GST_VC1_BFRACTION_BASIS / 6}, {
-    10, (GST_VC1_BFRACTION_BASIS * 5) / 6}, {
-    11, GST_VC1_BFRACTION_BASIS / 7}, {
-    12, (GST_VC1_BFRACTION_BASIS * 2) / 7}, {
-    13, (GST_VC1_BFRACTION_BASIS * 3) / 7}, {
-    14, (GST_VC1_BFRACTION_BASIS * 4) / 7}, {
-    15, (GST_VC1_BFRACTION_BASIS * 5) / 7}, {
-    16, (GST_VC1_BFRACTION_BASIS * 6) / 7}, {
-    17, GST_VC1_BFRACTION_BASIS / 8}, {
-    18, (GST_VC1_BFRACTION_BASIS * 3) / 8}, {
-    19, (GST_VC1_BFRACTION_BASIS * 5) / 8}, {
-    20, (GST_VC1_BFRACTION_BASIS * 7) / 8}, {
-    21, GST_VC1_BFRACTION_RESERVED}, {
-    22, GST_VC1_BFRACTION_PTYPE_BI}
+        0, GST_VC1_BFRACTION_BASIS / 2}, {
+        1, GST_VC1_BFRACTION_BASIS / 3}, {
+        2, (GST_VC1_BFRACTION_BASIS * 2) / 3}, {
+        3, GST_VC1_BFRACTION_BASIS / 4}, {
+        4, (GST_VC1_BFRACTION_BASIS * 3) / 4}, {
+        5, GST_VC1_BFRACTION_BASIS / 5}, {
+        6, (GST_VC1_BFRACTION_BASIS * 2) / 5}, {
+        7, (GST_VC1_BFRACTION_BASIS * 3) / 5}, {
+        8, (GST_VC1_BFRACTION_BASIS * 4) / 5}, {
+        9, GST_VC1_BFRACTION_BASIS / 6}, {
+        10, (GST_VC1_BFRACTION_BASIS * 5) / 6}, {
+        11, GST_VC1_BFRACTION_BASIS / 7}, {
+        12, (GST_VC1_BFRACTION_BASIS * 2) / 7}, {
+        13, (GST_VC1_BFRACTION_BASIS * 3) / 7}, {
+        14, (GST_VC1_BFRACTION_BASIS * 4) / 7}, {
+        15, (GST_VC1_BFRACTION_BASIS * 5) / 7}, {
+        16, (GST_VC1_BFRACTION_BASIS * 6) / 7}, {
+        17, GST_VC1_BFRACTION_BASIS / 8}, {
+        18, (GST_VC1_BFRACTION_BASIS * 3) / 8}, {
+        19, (GST_VC1_BFRACTION_BASIS * 5) / 8}, {
+        20, (GST_VC1_BFRACTION_BASIS * 7) / 8}, {
+        21, GST_VC1_BFRACTION_RESERVED}, {
+        22, GST_VC1_BFRACTION_PTYPE_BI}
   };
 
   if (!bfraction)
diff --git a/gst-libs/gst/vaapi/gstvaapidisplay_wayland.c b/gst-libs/gst/vaapi/gstvaapidisplay_wayland.c
index e6e3f394..b519ef55 100644
--- a/gst-libs/gst/vaapi/gstvaapidisplay_wayland.c
+++ b/gst-libs/gst/vaapi/gstvaapidisplay_wayland.c
@@ -391,7 +391,7 @@ gst_vaapi_display_wayland_new (const gchar * display_name)
  * Return value: a newly allocated #GstVaapiDisplay object
  */
 GstVaapiDisplay *
-gst_vaapi_display_wayland_new_with_display (struct wl_display * wl_display)
+gst_vaapi_display_wayland_new_with_display (struct wl_display *wl_display)
 {
   GstVaapiDisplay *display;
 
@@ -418,7 +418,7 @@ gst_vaapi_display_wayland_new_with_display (struct wl_display * wl_display)
 
 GstVaapiDisplay *
 gst_vaapi_display_wayland_new_with_va_display (VADisplay va_display,
-    struct wl_display * wl_display)
+    struct wl_display *wl_display)
 {
   GstVaapiDisplay *display;
   GstVaapiDisplayInfo info = {
diff --git a/gst-libs/gst/vaapi/gstvaapitexture_glx.c b/gst-libs/gst/vaapi/gstvaapitexture_glx.c
index 76f450ad..6eda5141 100644
--- a/gst-libs/gst/vaapi/gstvaapitexture_glx.c
+++ b/gst-libs/gst/vaapi/gstvaapitexture_glx.c
@@ -385,8 +385,8 @@ gst_vaapi_texture_glx_put_surface_unlocked (GstVaapiTexture * texture,
   }
 
   flags = GST_MINI_OBJECT_FLAGS (texture);
-  txc = g_texcoords[! !(flags & GST_VAAPI_TEXTURE_ORIENTATION_FLAG_X_INVERTED)];
-  tyc = g_texcoords[! !(flags & GST_VAAPI_TEXTURE_ORIENTATION_FLAG_Y_INVERTED)];
+  txc = g_texcoords[!!(flags & GST_VAAPI_TEXTURE_ORIENTATION_FLAG_X_INVERTED)];
+  tyc = g_texcoords[!!(flags & GST_VAAPI_TEXTURE_ORIENTATION_FLAG_Y_INVERTED)];
 
   glColor4f (1.0f, 1.0f, 1.0f, 1.0f);
   glBegin (GL_QUADS);
diff --git a/tests/internal/image.c b/tests/internal/image.c
index ea532fb8..67802ebf 100644
--- a/tests/internal/image.c
+++ b/tests/internal/image.c
@@ -299,11 +299,11 @@ image_draw_rectangle (GstVaapiImage * image,
   map[] = {
 #define _(FORMAT) { GST_VIDEO_FORMAT_##FORMAT, draw_rect_##FORMAT }
     _(ARGB),
-        _(BGRA),
-        _(RGBA), _(ABGR), _(NV12), _(YV12), _(I420), _(YUY2), _(UYVY), _(AYUV),
+    _(BGRA),
+    _(RGBA), _(ABGR), _(NV12), _(YV12), _(I420), _(YUY2), _(UYVY), _(AYUV),
 #undef  _
     {
-    0,}
+        0,}
   };
 
   for (i = 0; !draw_rect && map[i].format; i++)
-- 
2.40.1

