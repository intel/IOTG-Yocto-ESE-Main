From 4c59a8d5d53d83c1f194621f9b9da1f8893dbcd7 Mon Sep 17 00:00:00 2001
From: Dongwon Kim <dongwon.kim@intel.com>
Date: Mon, 30 Jan 2023 10:49:34 -0800
Subject: [PATCH 36/37] ui/gtk: disable state change temporarily

block and unblock state event handler before and after the window widget
is hidden and un-hidden to prevent false triggerring of the event while
the widget is being hidden.

Signed-off-by: Dongwon Kim <dongwon.kim@intel.com>
---
 ui/gtk.c | 63 ++++++++++++++++++++++++++++++--------------------------
 1 file changed, 34 insertions(+), 29 deletions(-)

diff --git a/ui/gtk.c b/ui/gtk.c
index 87c84e1643..4678654bb6 100644
--- a/ui/gtk.c
+++ b/ui/gtk.c
@@ -1478,6 +1478,36 @@ static void gd_menu_show_tabs(GtkMenuItem *item, void *opaque)
     gd_update_windowsize(vc);
 }
 
+static gboolean gd_window_state_event(GtkWidget *widget, GdkEvent *event,
+                                      void *opaque)
+{
+    VirtualConsole *vc = opaque;
+
+    if (!vc) {
+        return TRUE;
+    }
+
+    if (event->window_state.new_window_state & GDK_WINDOW_STATE_ICONIFIED) {
+        vc->gfx.visible = false;
+        gd_set_ui_size(vc, 0, 0);
+        if (vc->gfx.guest_fb.dmabuf &&
+            vc->gfx.guest_fb.dmabuf->draw_submitted) {
+            vc->gfx.guest_fb.dmabuf->draw_submitted = false;
+            graphic_hw_gl_block(vc->gfx.dcl.con, false);
+        }
+    } else if (event->window_state.new_window_state & GDK_WINDOW_STATE_FOCUSED) {
+        GdkWindow *window;
+        window = gtk_widget_get_window(vc->gfx.drawing_area);
+
+        gd_set_ui_size(vc, gdk_window_get_width(window),
+                       gdk_window_get_height(window));
+
+        vc->gfx.visible = true;
+    }
+
+    return TRUE;
+}
+
 static gboolean gd_tab_window_close(GtkWidget *widget, GdkEvent *event,
                                     void *opaque)
 {
@@ -1485,6 +1515,8 @@ static gboolean gd_tab_window_close(GtkWidget *widget, GdkEvent *event,
     GtkDisplayState *s = vc->s;
 
     vc->gfx.visible = false;
+    g_signal_handlers_block_by_func(vc->window, G_CALLBACK(gd_window_state_event),
+                                    vc);
     gd_set_ui_size(vc, 0, 0);
 
     if (vc->gfx.guest_fb.dmabuf &&
@@ -1520,35 +1552,6 @@ static gboolean gd_tab_window_close(GtkWidget *widget, GdkEvent *event,
     return TRUE;
 }
 
-static gboolean gd_window_state_event(GtkWidget *widget, GdkEvent *event,
-                                      void *opaque)
-{
-    VirtualConsole *vc = opaque;
-
-    if (!vc) {
-        return TRUE;
-    }
-
-    if (event->window_state.new_window_state & GDK_WINDOW_STATE_ICONIFIED) {
-        vc->gfx.visible = false;
-        gd_set_ui_size(vc, 0, 0);
-        if (vc->gfx.guest_fb.dmabuf &&
-            vc->gfx.guest_fb.dmabuf->draw_submitted) {
-            vc->gfx.guest_fb.dmabuf->draw_submitted = false;
-            graphic_hw_gl_block(vc->gfx.dcl.con, false);
-        }
-    } else if (event->window_state.new_window_state & GDK_WINDOW_STATE_FOCUSED) {
-        GdkWindow *window;
-        window = gtk_widget_get_window(vc->gfx.drawing_area);
-        gd_set_ui_size(vc, gdk_window_get_width(window),
-                       gdk_window_get_height(window));
-
-        vc->gfx.visible = true;
-    }
-
-    return TRUE;
-}
-
 static gboolean gd_win_grab(void *opaque)
 {
     VirtualConsole *vc = opaque;
@@ -1658,6 +1661,8 @@ static void gd_window_show_on_monitor(GdkDisplay *dpy, VirtualConsole *vc,
     gd_set_ui_size(vc, gdk_window_get_width(window),
                    gdk_window_get_height(window));
     gd_update_cursor(vc);
+    g_signal_handlers_unblock_by_func(vc->window, G_CALLBACK(gd_window_state_event),
+                                      vc);
 }
 
 static int gd_monitor_lookup(GdkDisplay *dpy, char *label)
-- 
2.20.1

