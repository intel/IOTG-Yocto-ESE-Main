From f0d40272941e0de372a4fc55dabe9b4384d8b752 Mon Sep 17 00:00:00 2001
From: Dongwon Kim <dongwon.kim@intel.com>
Date: Mon, 5 Feb 2024 12:38:37 -0800
Subject: [PATCH 11/30] ui/gtk: attach fullscreen hotkey cb to new vc->window
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Enable hotkey for fullscreenig individual VC when they are detached.

Cc: Marc-Andr√© Lureau <marcandre.lureau@redhat.com>
Cc: Vivek Kasireddy <vivek.kasireddy@intel.com>
Signed-off-by: Dongwon Kim <dongwon.kim@intel.com>
---
 include/ui/gtk.h |  1 +
 ui/gtk.c         | 33 +++++++++++++++++++++++++++++++--
 2 files changed, 32 insertions(+), 2 deletions(-)

diff --git a/include/ui/gtk.h b/include/ui/gtk.h
index 846d27f13d..0b302c55f5 100644
--- a/include/ui/gtk.h
+++ b/include/ui/gtk.h
@@ -85,6 +85,7 @@ typedef struct VirtualConsole {
     GtkWidget *tab_item;
     GtkWidget *focus;
     GdkMonitor *monitor;
+    bool full_screen;
     VirtualConsoleType type;
     union {
         VirtualGfxConsole gfx;
diff --git a/ui/gtk.c b/ui/gtk.c
index 1de649d613..f9da95d444 100644
--- a/ui/gtk.c
+++ b/ui/gtk.c
@@ -1480,6 +1480,31 @@ static gboolean gd_win_grab(void *opaque)
     return TRUE;
 }
 
+static void gd_vc_full_screen(void *opaque)
+{
+    VirtualConsole *vc = opaque;
+
+    if (!vc->window)
+        return;
+
+    if (vc->full_screen) {
+        gtk_window_unfullscreen(GTK_WINDOW(vc->window));
+
+        if (vc->type == GD_VC_GFX) {
+            vc->gfx.scale_x = 1.0;
+            vc->gfx.scale_y = 1.0;
+            gd_update_windowsize(vc);
+        }
+        vc->full_screen = false;
+    } else {
+        if (vc->type == GD_VC_GFX) {
+            gtk_widget_set_size_request(vc->gfx.drawing_area, -1, -1);
+        }
+        gtk_window_fullscreen(GTK_WINDOW(vc->window));
+        vc->full_screen = true;
+    }
+}
+
 static void gd_tab_window_create(VirtualConsole *vc)
 {
     GtkDisplayState *s = vc->s;
@@ -1509,9 +1534,12 @@ static void gd_tab_window_create(VirtualConsole *vc)
         GtkAccelGroup *ag = gtk_accel_group_new();
         gtk_window_add_accel_group(GTK_WINDOW(vc->window), ag);
 
-        GClosure *cb = g_cclosure_new_swap(G_CALLBACK(gd_win_grab),
+        GClosure *cb_grab = g_cclosure_new_swap(G_CALLBACK(gd_win_grab),
+                                           vc, NULL);
+        GClosure *cb_fs = g_cclosure_new_swap(G_CALLBACK(gd_vc_full_screen),
                                            vc, NULL);
-        gtk_accel_group_connect(ag, GDK_KEY_g, HOTKEY_MODIFIERS, 0, cb);
+        gtk_accel_group_connect(ag, GDK_KEY_g, HOTKEY_MODIFIERS, 0, cb_grab);
+        gtk_accel_group_connect(ag, GDK_KEY_f, HOTKEY_MODIFIERS, 0, cb_fs);
     }
 
     gd_update_geometry_hints(vc);
@@ -1559,6 +1587,7 @@ static void gd_window_show_on_monitor(GdkDisplay *dpy, VirtualConsole *vc,
     if (s->opts->has_full_screen && s->opts->full_screen) {
         gtk_widget_set_size_request(vc->gfx.drawing_area, -1, -1);
         gtk_window_fullscreen(GTK_WINDOW(vc->window));
+        vc->full_screen = true;
     } else if ((s->window == vc->window) && s->full_screen) {
         gd_menu_show_tabs(GTK_MENU_ITEM(s->show_tabs_item), s);
         if (gtk_check_menu_item_get_active(
-- 
2.34.1

