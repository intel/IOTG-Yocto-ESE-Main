From 7f66c7088e9b6d0b765c6457f2cff718f71ef5c9 Mon Sep 17 00:00:00 2001
From: Qingwu Zhang <qingwu.zhang@intel.com>
Date: Fri, 27 Sep 2019 06:57:02 +0800
Subject: [PATCH 30/33] media: intel-ipu4: Add multiple BE SOC subdev support

Previously only one BE SOC subdevice, so dual cameras
can't run with BE SOC concurrently.

This patch is intent to add multiple BE SOC subdevice
support, then dual cameras can select different
BE SOC subdevice (BE SOC 0 ~ BE SOC 7) and work
well concurrently.

Change-Id: I469582d0e97c08f2bb16fe30f2f6c619908e8729
Signed-off-by: Meng Wei <wei.meng@intel.com>
---
 .../media/pci/intel/ipu-isys-csi2-be-soc.c    | 20 +++++--
 drivers/media/pci/intel/ipu-isys-csi2-be.h    |  9 ++-
 drivers/media/pci/intel/ipu-isys.c            | 56 +++++++++++++------
 drivers/media/pci/intel/ipu-isys.h            |  9 ++-
 4 files changed, 68 insertions(+), 26 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c b/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
index 61f690389e47..a8f1bccf58ad 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
@@ -192,8 +192,7 @@ static void csi2_be_soc_set_ffmt(struct v4l2_subdev *sd,
 				    fmt->which);
 
 #ifdef IPU_ISYS_YUV422_I420
-			struct ipu_isys_csi2_be_soc *csi2_be_soc =
-						to_ipu_isys_csi2_be_soc(sd);
+	struct ipu_isys_csi2_be_soc *csi2_be_soc = to_ipu_isys_csi2_be_soc(sd);
 #endif
 
 	if (sd->entity.pads[fmt->pad].flags & MEDIA_PAD_FL_SINK) {
@@ -282,8 +281,13 @@ void ipu_isys_csi2_be_soc_cleanup(struct ipu_isys_csi2_be_soc *csi2_be_soc)
 #endif
 }
 
+#ifdef IPU_VC_SUPPORT
 int ipu_isys_csi2_be_soc_init(struct ipu_isys_csi2_be_soc *csi2_be_soc,
 			      struct ipu_isys *isys)
+#else
+int ipu_isys_csi2_be_soc_init(struct ipu_isys_csi2_be_soc *csi2_be_soc,
+			      struct ipu_isys *isys, int index)
+#endif
 {
 	struct v4l2_subdev_format fmt = {
 		.which = V4L2_SUBDEV_FORMAT_ACTIVE,
@@ -354,9 +358,13 @@ int ipu_isys_csi2_be_soc_init(struct ipu_isys_csi2_be_soc *csi2_be_soc,
 #endif
 	csi2_be_soc->asd.sd.internal_ops = &csi2_be_soc_sd_internal_ops;
 
+#ifdef IPU_VC_SUPPORT
 	snprintf(csi2_be_soc->asd.sd.name, sizeof(csi2_be_soc->asd.sd.name),
 		 IPU_ISYS_ENTITY_PREFIX " CSI2 BE SOC");
-
+#else
+	snprintf(csi2_be_soc->asd.sd.name, sizeof(csi2_be_soc->asd.sd.name),
+		 IPU_ISYS_ENTITY_PREFIX " CSI2 BE SOC %d", index);
+#endif
 	v4l2_set_subdevdata(&csi2_be_soc->asd.sd, &csi2_be_soc->asd);
 
 	mutex_lock(&csi2_be_soc->asd.mutex);
@@ -451,9 +459,9 @@ int ipu_isys_csi2_be_soc_init(struct ipu_isys_csi2_be_soc *csi2_be_soc,
 		}
 	}
 #else
-	strlcpy(csi2_be_soc->av.vdev.name,
-		IPU_ISYS_ENTITY_PREFIX " BE SOC capture",
-		sizeof(csi2_be_soc->av.vdev.name));
+	snprintf(csi2_be_soc->av.vdev.name, sizeof(csi2_be_soc->av.vdev.name),
+		 IPU_ISYS_ENTITY_PREFIX " BE SOC capture %d", index);
+
 	/*
 	 * Pin type could be overwritten for YUV422 to I420 case, at
 	 * set_format phase
diff --git a/drivers/media/pci/intel/ipu-isys-csi2-be.h b/drivers/media/pci/intel/ipu-isys-csi2-be.h
index 956c0c137342..e9c60e9b021e 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2-be.h
+++ b/drivers/media/pci/intel/ipu-isys-csi2-be.h
@@ -77,8 +77,13 @@ struct ipu_isys_csi2_be_soc {
 
 int ipu_isys_csi2_be_init(struct ipu_isys_csi2_be *csi2_be,
 			  struct ipu_isys *isys);
-int ipu_isys_csi2_be_soc_init(
-	struct ipu_isys_csi2_be_soc *csi2_be_soc, struct ipu_isys *isys);
+#ifdef IPU_VC_SUPPORT
+int ipu_isys_csi2_be_soc_init(struct ipu_isys_csi2_be_soc *csi2_be_soc,
+	struct ipu_isys *isys);
+#else
+int ipu_isys_csi2_be_soc_init(struct ipu_isys_csi2_be_soc *csi2_be_soc,
+	struct ipu_isys *isys, int index);
+#endif
 void ipu_isys_csi2_be_cleanup(struct ipu_isys_csi2_be *csi2_be);
 void ipu_isys_csi2_be_soc_cleanup(struct ipu_isys_csi2_be_soc *csi2_be);
 
diff --git a/drivers/media/pci/intel/ipu-isys.c b/drivers/media/pci/intel/ipu-isys.c
index 40370e1cf0f1..2e535ed796a8 100644
--- a/drivers/media/pci/intel/ipu-isys.c
+++ b/drivers/media/pci/intel/ipu-isys.c
@@ -473,7 +473,12 @@ static void isys_unregister_subdevices(struct ipu_isys *isys)
 	unsigned int i;
 
 	ipu_isys_csi2_be_cleanup(&isys->csi2_be);
+#ifdef IPU_VC_SUPPORT
 	ipu_isys_csi2_be_soc_cleanup(&isys->csi2_be_soc);
+#else
+	for (i = 0; i < NR_OF_CSI2_BE_SOC_DEV; i++)
+		ipu_isys_csi2_be_soc_cleanup(&isys->csi2_be_soc[i]);
+#endif
 
 #ifdef IPU_HAS_ISA
 	ipu_isys_isa_cleanup(&isys->isa);
@@ -498,7 +503,7 @@ static int isys_register_subdevices(struct ipu_isys *isys)
 #ifdef IPU_VC_SUPPORT
 	unsigned int i, j, k;
 #else
-	unsigned int i;
+	unsigned int i, k;
 #endif
 	int rval;
 
@@ -561,12 +566,24 @@ static int isys_register_subdevices(struct ipu_isys *isys)
 			goto fail;
 	}
 
+#ifdef IPU_VC_SUPPORT
 	rval = ipu_isys_csi2_be_soc_init(&isys->csi2_be_soc, isys);
 	if (rval) {
 		dev_info(&isys->adev->dev,
-			 "can't register soc csi2 be device\n");
+			 "can't register csi2 soc be device\n");
 		goto fail;
 	}
+#else
+	for (k = 0; k < NR_OF_CSI2_BE_SOC_DEV; k++) {
+		rval = ipu_isys_csi2_be_soc_init(&isys->csi2_be_soc[k],
+						 isys, k);
+		if (rval) {
+			dev_info(&isys->adev->dev,
+				 "can't register csi2 soc be device %d\n", k);
+			goto fail;
+		}
+	}
+#endif
 
 	rval = ipu_isys_csi2_be_init(&isys->csi2_be, isys);
 	if (rval) {
@@ -625,14 +642,16 @@ static int isys_register_subdevices(struct ipu_isys *isys)
 				 "can't create link csi2 <=> csi2_be\n");
 			goto fail;
 		}
-		rval = media_create_pad_link(
-			&isys->csi2[i].asd.sd.entity, CSI2_PAD_SOURCE,
-			&isys->csi2_be_soc.asd.sd.entity,
-			CSI2_BE_SOC_PAD_SINK, 0);
-		if (rval) {
-			dev_info(&isys->adev->dev,
-				 "can't create link csi2->be_soc\n");
-			goto fail;
+		for (k = 0; k < NR_OF_CSI2_BE_SOC_DEV; k++) {
+			rval = media_create_pad_link(
+				&isys->csi2[i].asd.sd.entity, CSI2_PAD_SOURCE,
+				&isys->csi2_be_soc[k].asd.sd.entity,
+				CSI2_BE_SOC_PAD_SINK, 0);
+			if (rval) {
+				dev_info(&isys->adev->dev,
+					 "can't create link csi2->be_soc\n");
+				goto fail;
+			}
 		}
 #endif
 	}
@@ -664,13 +683,16 @@ static int isys_register_subdevices(struct ipu_isys *isys)
 			}
 		}
 #else
-		rval = media_create_pad_link(
-			&isys->tpg[i].asd.sd.entity, TPG_PAD_SOURCE,
-			&isys->csi2_be_soc.asd.sd.entity, CSI2_BE_SOC_PAD_SINK, 0);
-		if (rval) {
-			dev_info(&isys->adev->dev,
-				 "can't create link tpg->be_soc\n");
-			goto fail;
+		for (k = 0; k < NR_OF_CSI2_BE_SOC_DEV; k++) {
+			rval = media_create_pad_link(
+				&isys->tpg[i].asd.sd.entity, TPG_PAD_SOURCE,
+				&isys->csi2_be_soc[k].asd.sd.entity,
+				CSI2_BE_SOC_PAD_SINK, 0);
+			if (rval) {
+				dev_info(&isys->adev->dev,
+					 "can't create link tpg->be_soc\n");
+				goto fail;
+			}
 		}
 #endif
 	}
diff --git a/drivers/media/pci/intel/ipu-isys.h b/drivers/media/pci/intel/ipu-isys.h
index 2f8b7eb65902..e7f36df7a0ee 100644
--- a/drivers/media/pci/intel/ipu-isys.h
+++ b/drivers/media/pci/intel/ipu-isys.h
@@ -57,6 +57,10 @@
 #define IPU_ISYS_MAX_WIDTH		16384U
 #define IPU_ISYS_MAX_HEIGHT		16384U
 
+#ifndef IPU_VC_SUPPORT
+#define NR_OF_CSI2_BE_SOC_DEV 8
+#endif
+
 struct task_struct;
 
 /*
@@ -132,8 +136,11 @@ struct ipu_isys {
 	struct ipu_isys_isa isa;
 #endif
 	struct ipu_isys_csi2_be csi2_be;
+#ifdef IPU_VC_SUPPORT
 	struct ipu_isys_csi2_be_soc csi2_be_soc;
-
+#else
+	struct ipu_isys_csi2_be_soc csi2_be_soc[NR_OF_CSI2_BE_SOC_DEV];
+#endif
 	const struct firmware *fw;
 	struct sg_table fw_sgt;
 
-- 
2.20.1

